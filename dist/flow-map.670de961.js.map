{"version":3,"sources":["node_modules/ogl/src/math/functions/Vec3Func.js","node_modules/ogl/src/math/Vec3.js","node_modules/ogl/src/core/Geometry.js","node_modules/ogl/src/core/Program.js","node_modules/ogl/src/core/Renderer.js","node_modules/ogl/src/math/functions/Vec4Func.js","node_modules/ogl/src/math/functions/QuatFunc.js","node_modules/ogl/src/math/Quat.js","node_modules/ogl/src/math/functions/Mat4Func.js","node_modules/ogl/src/math/Mat4.js","node_modules/ogl/src/math/functions/EulerFunc.js","node_modules/ogl/src/math/Euler.js","node_modules/ogl/src/core/Transform.js","node_modules/ogl/src/core/Camera.js","node_modules/ogl/src/math/functions/Mat3Func.js","node_modules/ogl/src/math/Mat3.js","node_modules/ogl/src/core/Mesh.js","node_modules/ogl/src/core/Texture.js","node_modules/ogl/src/core/RenderTarget.js","node_modules/ogl/src/math/functions/ColorFunc.js","node_modules/ogl/src/math/Color.js","node_modules/ogl/src/math/functions/Vec2Func.js","node_modules/ogl/src/math/Vec2.js","node_modules/ogl/src/math/Vec4.js","node_modules/ogl/src/extras/Plane.js","node_modules/ogl/src/extras/Box.js","node_modules/ogl/src/extras/Sphere.js","node_modules/ogl/src/extras/Cylinder.js","node_modules/ogl/src/extras/Triangle.js","node_modules/ogl/src/extras/Torus.js","node_modules/ogl/src/extras/Orbit.js","node_modules/ogl/src/extras/Raycast.js","node_modules/ogl/src/extras/Curve.js","node_modules/ogl/src/extras/path/BaseSegment.js","node_modules/ogl/src/extras/path/utils.js","node_modules/ogl/src/extras/path/CubicBezierSegment.js","node_modules/ogl/src/extras/path/QuadraticBezierSegment.js","node_modules/ogl/src/extras/path/LineSegment.js","node_modules/ogl/src/extras/path/Path.js","node_modules/ogl/src/extras/Tube.js","node_modules/ogl/src/extras/Post.js","node_modules/ogl/src/extras/Animation.js","node_modules/ogl/src/extras/Skin.js","node_modules/ogl/src/extras/Text.js","node_modules/ogl/src/extras/NormalProgram.js","node_modules/ogl/src/extras/Flowmap.js","node_modules/ogl/src/extras/GPGPU.js","node_modules/ogl/src/extras/Polyline.js","node_modules/ogl/src/extras/Shadow.js","node_modules/ogl/src/extras/KTXTexture.js","node_modules/ogl/src/extras/TextureLoader.js","node_modules/ogl/src/extras/GLTFAnimation.js","node_modules/ogl/src/extras/GLTFSkin.js","node_modules/ogl/src/extras/InstancedMesh.js","node_modules/ogl/src/extras/GLTFLoader.js","node_modules/ogl/src/extras/BasisManager.js","node_modules/ogl/src/extras/WireMesh.js","node_modules/ogl/src/extras/helpers/AxesHelper.js","node_modules/ogl/src/extras/helpers/GridHelper.js","node_modules/ogl/src/extras/helpers/VertexNormalsHelper.js","node_modules/ogl/src/extras/helpers/FaceNormalsHelper.js","node_modules/ogl/src/index.js","js/flow-map/index.js","../../../../../.config/yarn/global/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["EPSILON","length","a","x","y","z","Math","sqrt","copy","out","set","add","b","subtract","multiply","divide","scale","distance","squaredDistance","squaredLength","negate","inverse","normalize","len","dot","cross","ax","ay","az","bx","by","bz","lerp","t","transformMat4","m","w","scaleRotateMat4","transformMat3","transformQuat","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","exports","tempA","tempB","cosine","PI","acos","exactEquals","Vec3Func","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","__esModule","default","has","get","n","__proto__","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","Vec3","Array","constructor","v","va","vb","sub","squaredLen","equals","applyMatrix3","mat3","applyMatrix4","mat4","scaleRotateMatrix4","applyQuaternion","clone","fromArray","o","toArray","transformDirection","_Vec","tempVec3","ID","ATTR_ID","isBoundsWarned","Geometry","gl","attributes","canvas","console","error","id","VAOs","drawRange","start","count","instancedCount","renderer","bindVertexArray","currentGeometry","glState","state","key","addAttribute","attr","size","type","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","target","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","needsUpdate","usage","STATIC_DRAW","buffer","updateAttribute","isInstanced","warn","min","index","max","isNewBuffer","createBuffer","boundBuffer","bindBuffer","bufferData","bufferSubData","setIndex","value","setDrawRange","setInstancedCount","createVAO","program","attributeOrder","createVertexArray","bindAttributes","attributeLocations","forEach","location","name","numLoc","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","draw","mode","TRIANGLES","indexBytesPerElement","drawElementsInstanced","drawArraysInstanced","drawElements","drawArrays","getPosition","position","computeBoundingBox","array","bounds","center","radius","Infinity","l","computeBoundingSphere","maxRadiusSq","remove","deleteVertexArray","deleteBuffer","arrayCacheF32","Program","vertex","fragment","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LEQUAL","blendFunc","blendEquation","src","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","setShaders","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniformLocations","Map","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","nameComponents","slice","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","use","flipFaces","textureUnit","programActive","currentProgram","useProgram","activeUniform","component","isArray","undefined","texture","update","setUniform","textureUnits","push","CW","deleteProgram","flatten","setValue","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","arrayLen","valueLen","warnCount","message","Renderer","document","createElement","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","extensions","getExtension","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","style","assign","setViewport","setScissor","scissor","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","bindFramebuffer","FRAMEBUFFER","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","zDepth","sortTransparent","sortUI","getRenderList","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","projectionViewMatrix","concat","render","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","aw","vec4","identity","setAxisAngle","axis","rad","s","sin","cos","bw","rotateX","rotateY","rotateZ","slerp","omega","cosom","sinom","scale0","scale1","invert","a0","a1","a2","a3","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","QuatFunc","Quat","onChange","_target","triggerProps","Proxy","property","success","Reflect","arguments","includes","qA","qB","fromMatrix3","matrix3","isInternal","fromAxisAngle","vec3","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","determinant","b0","b1","b2","b3","translate","rotate","hypot","c","b12","b20","b21","b22","abs","mat","getScaling","getMaxScaleOnAxis","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","decompose","srcMat","dstRotation","dstTranslation","dstScale","_m1","invSX","invSY","invSZ","compose","dstMat","srcRotation","srcTranslation","srcScale","te","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromRotationTranslationScale","fromQuat","yx","zx","zy","perspective","fovy","aspect","near","far","f","tan","nf","ortho","left","right","bottom","top","lr","bt","targetTo","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","multiplyScalar","Mat4Func","Mat4","ma","mb","fromPerspective","fov","fromOrthogonal","fromQuaternion","setPosition","pos","lookAt","fromRotationMatrix","asin","atan2","EulerFunc","_Mat","tmpMat4","Euler","reorder","_Quat","_Euler","Transform","parent","children","matrix","matrixAutoUpdate","worldMatrixNeedsUpdate","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","indexOf","splice","force","updateMatrix","callback","_Transform","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","orthographic","project","unproject","frustum","constant","invLen","geometry","frustumIntersectsSphere","normal","plane","fromMat4","normalFromMat4","projection","Mat3Func","Mat3","fromMatrix4","fromBasis","vec3a","vec3b","vec3c","getNormalMatrix","_Mat2","Mesh","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","modelMatrix","cameraPosition","mesh","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","REPEAT","bindTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","generateMipmap","onUpdate","_Texture","RenderTarget","depthTexture","createFramebuffer","textures","framebufferTexture2D","COLOR_ATTACHMENT0","NEAREST","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","stencilBuffer","STENCIL_INDEX8","STENCIL_ATTACHMENT","depthStencilBuffer","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","NAMES","black","white","red","green","blue","fuchsia","cyan","yellow","orange","hexToRGB","hex","rgb","exec","parseInt","numberToRGB","num","parseColor","isNaN","toLowerCase","ColorFunc","Color","g","transformMat2","transformMat2d","Vec2Func","Vec2","Vec4Func","Vec4","_Geometry","Plane","widthSegments","heightSegments","wSegs","hSegs","numIndices","uv","Uint32Array","buildPlane","uDir","vDir","ii","io","segW","segH","iy","ix","d","_Plane","Box","depthSegments","dSegs","Sphere","ceil","phiStart","phiLength","thetaStart","thetaLength","pStart","pLength","tStart","tLength","iv","grid","vRow","Cylinder","radiusTop","radiusBottom","radialSegments","openEnded","rSegs","numCaps","indexArray","addHeight","addCap","slope","indexRow","theta","sinTheta","cosTheta","isTop","sign","centerIndex","Triangle","Torus","tube","tubularSegments","arc","vertices","normals","uvs","indices","idx","_Vec2","STATE","NONE","ROTATE","DOLLY","PAN","DOLLY_PAN","tempVec2a","tempVec2b","Orbit","object","element","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","zoomStyle","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","sphericalTarget","spherical","panDelta","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","mouseButtons","ORBIT","ZOOM","getZoomScale","pow","panLeft","panUp","pan","deltaX","deltaY","el","body","targetDistance","clientHeight","dolly","dollyScale","handleMoveRotate","handleMouseMoveDolly","clientX","clientY","handleMovePan","handleTouchStartDollyPan","dx","touches","pageX","dy","pageY","handleTouchMoveDollyPan","onMouseDown","button","window","addEventListener","onMouseMove","onMouseUp","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","onTouchMove","onTouchEnd","onContextMenu","addHandlers","passive","tempVec2c","tempVec3c","tempVec3d","tempVec3e","tempVec3f","tempVec3g","tempVec3h","tempVec3i","tempVec3j","tempVec3k","Raycast","origin","direction","castMouse","mouse","intersectBounds","meshes","output","invWorldMat4","hits","localMaxDistance","localDistance","raycast","intersectSphere","intersectBox","hit","localPoint","point","intersectMeshes","includeUV","includeNormal","closestFaceNormal","faceNormal","barycoord","uvA","uvB","uvC","closestA","closestB","closestC","end","ai","bi","ci","intersectTriangle","localFaceNormal","localNormal","getBarycoord","intersectPlane","xminp","delta","sphere","ray","tca","d2","radius2","thc","t0","t1","box","tmin","tmax","tYmin","tYmax","tZmin","tZmax","invdirx","invdiry","invdirz","backfaceCulling","edge1","edge2","diff","DdN","DdQxE2","DdE1xQ","QdN","v0","v1","v2","dot00","dot01","dot02","dot11","dot12","denom","invDenom","CATMULLROM","CUBICBEZIER","QUADRATICBEZIER","_a0","_a1","_a2","_a3","getCtrlPoint","points","last","getQuadraticBezierPoint","p0","c0","p1","ret","getCubicBezierPoint","c1","Curve","divisions","_getQuadraticBezierPoints","p","_getCubicBezierPoints","_getCatmullRomPoints","pop","getPoints","BaseSegment","_len","tiltStart","tiltEnd","getLength","updateLength","getTiltAt","source","T_VALUES","C_VALUES","toRadian","toDegrees","clamp","val","mat4fromRotationSinCos","rotateNormalBinormal","norm","binorm","outNorm","outBinorm","nx","ny","nz","_BaseSegment","_interopRequireDefault","_utils","cubicBezier","p2","p3","cubicBezierDeriv","CubicBezierSegment","sum","getDerivativeAt","getPointAt","getTangentAt","lastPoint","quadraticBezier","quadraticBezierDeriv","QuadraticBezierSegment","_Vec3Func","LineSegment","lerp3","_CubicBezierSegment","_QuadraticBezierSegment","_LineSegment","throwIfNullProperty","Error","Path","_segments","_lengthOffsets","_totalLength","_lastPoint","_lastTilt","_assertLastPoint","tiltFunction","moveTo","tilt","bezierCurveTo","cp1","cp2","seg","addSegment","quadraticCurveTo","cp","lineTo","segment","getSegments","findSegmentIndexAtLength","totalLength","mid","segLen","getPointAtLength","getTangentAtLength","getTiltAtLength","computeFrenetFrames","closed","tangents","tilts","si","st","tx","ty","tz","binormals","crossLen","Number","normalLast","step","Tube","path","frenetFrames","numVertices","positions","_generateAttributes","_generateIndices","N","B","_Program","_Mesh","_RenderTarget","_Triangle","Post","targetOnly","passes","resolutionWidth","floor","resolutionHeight","options","fbo","read","write","swap","addPass","defaultVertex","defaultFragment","textureUniform","pass","resize","beforePostCallbacks","enabledPasses","filter","prevPos","prevRot","prevScl","nextPos","nextRot","nextScl","Animation","objects","elapsed","weight","duration","frames","totalWeight","isSet","floorFrame","blend","prevKey","nextKey","_Animation","Skin","rig","createBones","createBoneTexture","animations","boneTexture","boneTextureSize","root","bones","bone","bindPose","bindInverse","log","LN2","boneMatrices","RGBA32F","addAnimation","animation","total","Text","font","text","align","letterSpacing","lineHeight","wordSpacing","wordBreak","_this","glyphs","buffers","fontHeight","baseline","newline","whitespace","parseFont","createGeometry","chars","char","common","base","replace","numChars","layout","cursor","wordCursor","wordWidth","line","newLine","maxTimes","test","glyph","prevGlyph","kern","getKernPairOffset","advance","xadvance","numGlyphs","populateBuffers","texW","scaleW","texH","scaleH","lineIndex","xoffset","yoffset","h","uw","vh","numLines","map","id1","id2","kernings","first","second","amount","NormalProgram","Flowmap","falloff","dissipation","mask","createFBOs","velocity","initProgram","HALF_FLOAT","HALF_FLOAT_OES","RGBA16F","tMap","uFalloff","uAlpha","uDissipation","uAspect","uMouse","uVelocity","GPGPU","initialData","dataLength","coords","floatArray","_Color","tmp","Polyline","prev","next","side","ind","updateGeometry","uResolution","resolution","uDPR","uThickness","thickness","uColor","uMiter","miter","_Camera","Shadow","light","targetUniform","depthProgram","castMeshes","receive","cast","uniformProjection","uniformView","uniformTexture","colorProgram","isForceVisibility","KTXTexture","parseBuffer","ktx","KhronosTextureContainer","mipmaps","glInternalFormat","numberOfMipmapLevels","idCheck","BYTES_PER_ELEMENT","head","DataView","littleEndian","getUint32","glType","numberOfFaces","bytesOfKeyValueData","levelSize","Int32Array","face","_KTXTexture","cache","supportedExtensions","TextureLoader","load","support","getSupportedExtensions","ext","prop","cacheID","loaded","loadKTX","loadImage","pvrtc","s3tc","etc1","astc","bc7","fetch","then","res","arrayBuffer","decodeImage","imgBmp","powerOfTwo","close","clearCache","log2","Promise","resolve","isCreateImageBitmap","blob","createImageBitmap","imageOrientation","img","Image","crossOrigin","onload","isChrome","navigator","userAgent","tmpVec3A","tmpVec3B","tmpVec3C","tmpVec3D","tmpQuatA","tmpQuatB","tmpQuatC","tmpQuatD","GLTFAnimation","loop","startTime","reduce","times","endTime","transform","interpolation","values","prevIndex","findIndex","nextIndex","prevVal","prevTan","nextTan","nextVal","cubicSplineInterpolate","t2","t3","s2","s3","s0","s1","GLTFSkin","skeleton","joints","updateUniforms","_worldMatrix","InstancedMesh","args","isInstancedMesh","addFrustumCull","instanceTransforms","instanceLightmapScaleOffset","totalInstanceCount","frustumCullFunction","instanceRenderList","instanceMatrix","matrixData","lightmapScaleOffset","lightmapData","removeFrustumCull","offBeforeRender","_GLTFAnimation","_GLTFSkin","_NormalProgram","_InstancedMesh","TYPE_ARRAY","Int16Array","TYPE_SIZE","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","ATTRIBUTES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","TRANSFORMS","translation","GLTFLoader","setBasisManager","manager","basisManager","dir","desc","parseDesc","parse","asset","version","extensionsRequired","loadBuffers","bufferViews","parseBufferViews","images","parseImages","parseTextures","materials","parseMaterials","skins","parseSkins","parseMeshes","nodes","parseNodes","populateSkins","parseAnimations","scenes","parseScenes","lights","parseLights","json","glb","unpackGLB","header","jsonChunkHeader","jsonByteOffset","jsonByteLength","jsonText","TextDecoder","decode","JSON","binaryChunkHeader","binaryByteOffset","binaryByteLength","binary","resolveURI","uri","all","primitives","accessors","bufferView","isAttribute","componentType","mimeType","bufferIndex","byteOffset","byteStride","extras","bufferViewIndex","parseTexture","Blob","URL","createObjectURL","ready","textureInfo","sampler","samplerIndex","sourceIndex","KHR_texture_basisu","samplers","isBasis","pbrMetallicRoughness","normalTexture","occlusionTexture","emissiveTexture","emissiveFactor","alphaMode","alphaCutoff","doubleSided","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","inverseBindMatrices","parseAccessor","weights","meshIndex","numInstances","skinIndices","isLightmap","skin","lightmap_scale_offset","isSkin","skinIndex","parsePrimitives","instanceCount","meshConstructor","material","materialIndex","targets","gltfMaterial","sparse","bufferByteOffset","TypeArray","elementBytes","componentStride","isInterleaved","filteredData","typedData","lightmapTexture","isFirstInstance","isInstancedMatrix","childIndex","primitive","joint","channels","animationIndex","input","inputIndex","outputIndex","nodeIndex","nodesIndices","directional","spot","lightsDescArray","KHR_lights_punctual","lightIndex","lightDesc","intensity","range","decay","supportedFormat","BasisManager","workerSrc","getSupportedFormat","onMessage","queue","initWorker","worker","Worker","onmessage","textureResolve","delete","postMessage","promise","WireMesh","wireColor","meshProps","wireProgram","positionArray","hashSet","Set","addUniqueIndices","isUniqueEdgePosition","idata","indicesTyped","wireGeometry","LINES","hash1","hash2","oldSize","AxesHelper","symmetric","xColor","yColor","zColor","colors","GridHelper","hs","VertexNormalsHelper","nNormals","positionsArray","normalsArray","sizeArray","normalData","positionData","sizeData","i6","i3","pSub","subarray","nSub","worldNormalMatrix","objectWorldMatrix","arg","vA","vB","vC","vCenter","vNormal","FaceNormalsHelper","indexAttr","getIndex","i2","_Renderer","_Vec3","_Box","_Sphere","_Cylinder","_Torus","_Orbit","_Raycast","_Curve","_Path","_Tube","_Post","_Skin","_Text","_Flowmap","_GPGPU","_Polyline","_Shadow","_TextureLoader","_GLTFLoader","_BasisManager","_WireMesh","_AxesHelper","_GridHelper","_VertexNormalsHelper","_FaceNormalsHelper","_ogl","imgSize","classList","querySelector","appendChild","isTouchCapable","imageAspect","innerHeight","innerWidth","flowmap","uTime","tWater","tFlow","updateMouse","lastTime","lastMouse","changedTouches","performance","now","time","requestAnimationFrame","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","event","handled","assets","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","cached","some","cb"],"mappings":"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","file":"flow-map.670de961.js","sourceRoot":"..","sourcesContent":["const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec3Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data - although needs position data for bounds calculation\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = /* @__PURE__ */ new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n        attr.usage = attr.usage || this.gl.STATIC_DRAW;\n\n        if (!attr.buffer) {\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        const isNewBuffer = !attr.buffer;\n        if (isNewBuffer) attr.buffer = this.gl.createBuffer();\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        if (isNewBuffer) {\n            this.gl.bufferData(attr.target, attr.data, attr.usage);\n        } else {\n            this.gl.bufferSubData(attr.target, 0, attr.data);\n        }\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * 4;\n            const offset = numLoc === 1 ? 0 : numLoc * 4;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        // For drawElements, offset needs to be multiple of type size\n        let indexBytesPerElement = 2;\n        if (this.attributes.index?.type === this.gl.UNSIGNED_INT) indexBytesPerElement = 4;\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * indexBytesPerElement,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * indexBytesPerElement\n                );\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        // Data loaded shouldn't haave stride, only buffers\n        // const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n        const stride = attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        // Data loaded shouldn't haave stride, only buffers\n        // const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n        const stride = attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LEQUAL,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // Create empty shaders and attach to program\n        this.vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        this.fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, this.vertexShader);\n        gl.attachShader(this.program, this.fragmentShader);\n\n        // Compile shaders with source\n        this.setShaders({ vertex, fragment });\n    }\n\n    setShaders({ vertex, fragment }) {\n        if (vertex) {\n            // compile vertex shader and log errors\n            this.gl.shaderSource(this.vertexShader, vertex);\n            this.gl.compileShader(this.vertexShader);\n            if (this.gl.getShaderInfoLog(this.vertexShader) !== '') {\n                console.warn(`${this.gl.getShaderInfoLog(this.vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n            }\n        }\n\n        if (fragment) {\n            // compile fragment shader and log errors\n            this.gl.shaderSource(this.fragmentShader, fragment);\n            this.gl.compileShader(this.fragmentShader);\n            if (this.gl.getShaderInfoLog(this.fragmentShader) !== '') {\n                console.warn(`${this.gl.getShaderInfoLog(this.fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n            }\n        }\n\n        // compile program and log errors\n        this.gl.linkProgram(this.program);\n        if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\n            return console.warn(this.gl.getProgramInfoLog(this.program));\n        }\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = this.gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, this.gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n            uniform.nameComponents = split.slice(1);\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = this.gl.getActiveAttrib(this.program, aIndex);\n            const location = this.gl.getAttribLocation(this.program, attribute.name);\n            // Ignore special built-in inputs. eg gl_VertexID, gl_InstanceID\n            if (location === -1) continue;\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.state.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.state.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let uniform = this.uniforms[activeUniform.uniformName];\n\n            for (const component of activeUniform.nameComponents) {\n                if (!uniform) break;\n\n                if (component in uniform) {\n                    uniform = uniform[component];\n                } else if (Array.isArray(uniform.value)) {\n                    break;\n                } else {\n                    uniform = undefined;\n                    break;\n                }\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${activeUniform.name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${activeUniform.name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 36306: // U_SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = /* @__PURE__ */ new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = false;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LEQUAL;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { x: 0, y: 0, width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n        this.state.currentProgram = null;\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n        this.getExtension('WEBGL_compressed_texture_astc');\n        this.getExtension('EXT_texture_compression_bptc');\n        this.getExtension('WEBGL_compressed_texture_s3tc');\n        this.getExtension('WEBGL_compressed_texture_etc1');\n        this.getExtension('WEBGL_compressed_texture_pvrtc');\n        this.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        if (!this.gl.canvas.style) return;\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height, x = 0, y = 0) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.state.viewport.x = x;\n        this.state.viewport.y = y;\n        this.gl.viewport(x, y, width, height);\n    }\n\n    setScissor(width, height, x = 0, y = 0) {\n        this.gl.scissor(x, y, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n\n        // Keep reference to proxy target to avoid triggering onChange internally\n        this._target = this;\n\n        // Return a proxy to trigger onChange when array elements are edited directly\n        const triggerProps = ['0', '1', '2', '3'];\n        return new Proxy(this, {\n            set(target, property) {\n                const success = Reflect.set(...arguments);\n                if (success && triggerProps.includes(property)) target.onChange();\n                return success;\n            },\n        });\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this._target[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this._target[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this._target[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this._target[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this._target);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this._target, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this._target, this._target, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this._target, this._target, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this._target, this._target, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this._target) {\n        QuatFunc.invert(this._target, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this._target) {\n        QuatFunc.conjugate(this._target, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this._target, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this._target) {\n        QuatFunc.normalize(this._target, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this._target, qA, qB);\n        } else {\n            QuatFunc.multiply(this._target, this._target, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this._target, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this._target, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler, isInternal) {\n        QuatFunc.fromEuler(this._target, euler, euler.order);\n        // Avoid infinite recursion\n        if (!isInternal) this.onChange();\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this._target, axis, a);\n        this.onChange();\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this._target, this._target, q, t);\n        this.onChange();\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this._target[0] = a[o];\n        this._target[1] = a[o + 1];\n        this._target[2] = a[o + 2];\n        this._target[3] = a[o + 3];\n        this.onChange();\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","import * as vec3 from './Vec3Func.js';\n\nconst EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [1, 1, 1];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * From glTF-Transform\n * https://github.com/donmccurdy/glTF-Transform/blob/main/packages/core/src/utils/math-utils.ts\n *\n * Decompose a mat4 to TRS properties.\n *\n * Equivalent to the Matrix4 decompose() method in three.js, and intentionally not using the\n * gl-matrix version. See: https://github.com/toji/gl-matrix/issues/408\n *\n * @param {mat4} srcMat Matrix element, to be decomposed to TRS properties.\n * @param {quat4} dstRotation Rotation element, to be overwritten.\n * @param {vec3} dstTranslation Translation element, to be overwritten.\n * @param {vec3} dstScale Scale element, to be overwritten\n */\nexport function decompose(srcMat, dstRotation, dstTranslation, dstScale) {\n    let sx = vec3.length([srcMat[0], srcMat[1], srcMat[2]]);\n    const sy = vec3.length([srcMat[4], srcMat[5], srcMat[6]]);\n    const sz = vec3.length([srcMat[8], srcMat[9], srcMat[10]]);\n\n    // if determine is negative, we need to invert one scale\n    const det = determinant(srcMat);\n    if (det < 0) sx = -sx;\n\n    dstTranslation[0] = srcMat[12];\n    dstTranslation[1] = srcMat[13];\n    dstTranslation[2] = srcMat[14];\n\n    // scale the rotation part\n    const _m1 = srcMat.slice();\n\n    const invSX = 1 / sx;\n    const invSY = 1 / sy;\n    const invSZ = 1 / sz;\n\n    _m1[0] *= invSX;\n    _m1[1] *= invSX;\n    _m1[2] *= invSX;\n\n    _m1[4] *= invSY;\n    _m1[5] *= invSY;\n    _m1[6] *= invSY;\n\n    _m1[8] *= invSZ;\n    _m1[9] *= invSZ;\n    _m1[10] *= invSZ;\n\n    getRotation(dstRotation, _m1);\n\n    dstScale[0] = sx;\n    dstScale[1] = sy;\n    dstScale[2] = sz;\n}\n\n/**\n * From glTF-Transform\n * https://github.com/donmccurdy/glTF-Transform/blob/main/packages/core/src/utils/math-utils.ts\n *\n * Compose TRS properties to a mat4.\n *\n * Equivalent to the Matrix4 compose() method in three.js, and intentionally not using the\n * gl-matrix version. See: https://github.com/toji/gl-matrix/issues/408\n *\n * @param {mat4} dstMat Matrix element, to be modified and returned.\n * @param {quat4} srcRotation Rotation element of matrix.\n * @param {vec3} srcTranslation Translation element of matrix.\n * @param {vec3} srcScale Scale element of matrix.\n * @returns {mat4} dstMat, overwritten to mat4 equivalent of given TRS properties.\n */\nexport function compose(dstMat, srcRotation, srcTranslation, srcScale) {\n    const te = dstMat;\n\n    const x = srcRotation[0],\n        y = srcRotation[1],\n        z = srcRotation[2],\n        w = srcRotation[3];\n    const x2 = x + x,\n        y2 = y + y,\n        z2 = z + z;\n    const xx = x * x2,\n        xy = x * y2,\n        xz = x * z2;\n    const yy = y * y2,\n        yz = y * z2,\n        zz = z * z2;\n    const wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    const sx = srcScale[0],\n        sy = srcScale[1],\n        sz = srcScale[2];\n\n    te[0] = (1 - (yy + zz)) * sx;\n    te[1] = (xy + wz) * sx;\n    te[2] = (xz - wy) * sx;\n    te[3] = 0;\n\n    te[4] = (xy - wz) * sy;\n    te[5] = (1 - (xx + zz)) * sy;\n    te[6] = (yz + wx) * sy;\n    te[7] = 0;\n\n    te[8] = (xz + wy) * sz;\n    te[9] = (yz - wx) * sz;\n    te[10] = (1 - (xx + yy)) * sz;\n    te[11] = 0;\n\n    te[12] = srcTranslation[0];\n    te[13] = srcTranslation[1];\n    te[14] = srcTranslation[2];\n    te[15] = 1;\n\n    return te;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    add(ma, mb) {\n        if (mb) Mat4Func.add(this, ma, mb);\n        else Mat4Func.add(this, this, ma);\n        return this;\n    }\n\n    sub(ma, mb) {\n        if (mb) Mat4Func.subtract(this, ma, mb);\n        else Mat4Func.subtract(this, this, ma);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (!ma.length) {\n            Mat4Func.multiplyScalar(this, this, ma);\n        } else if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.compose(this, q, pos, scale);\n        return this;\n    }\n\n    decompose(q, pos, scale) {\n        Mat4Func.decompose(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = /* @__PURE__ */ new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n\n        // Keep reference to proxy target to avoid triggering onChange internally\n        this._target = this;\n\n        // Return a proxy to trigger onChange when array elements are edited directly\n        const triggerProps = ['0', '1', '2'];\n        return new Proxy(this, {\n            set(target, property) {\n                const success = Reflect.set(...arguments);\n                if (success && triggerProps.includes(property)) target.onChange();\n                return success;\n            },\n        });\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this._target[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this._target[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this._target[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this._target[0] = x;\n        this._target[1] = y;\n        this._target[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this._target[0] = v[0];\n        this._target[1] = v[1];\n        this._target[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this._target.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this._target, m, order);\n        this.onChange();\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order, isInternal) {\n        tmpMat4.fromQuaternion(q);\n        this._target.fromRotationMatrix(tmpMat4, order);\n        // Avoid infinite recursion\n        if (!isInternal) this.onChange();\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this._target[0] = a[o];\n        this._target[1] = a[o + 1];\n        this._target[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n        this.worldMatrixNeedsUpdate = false;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation._target.onChange = () => this.quaternion.fromEuler(this.rotation, true);\n        this.quaternion._target.onChange = () => this.rotation.fromQuaternion(this.quaternion, undefined, true);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.decompose(this.quaternion._target, this.position, this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion._target);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = /* @__PURE__ */ new Mat4();\nconst tempVec3a = /* @__PURE__ */ new Vec3();\nconst tempVec3b = /* @__PURE__ */ new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left || -1,\n        right = this.right || 1,\n        bottom = this.bottom || -1,\n        top = this.top || 1,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node, worldMatrix = node.worldMatrix) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(worldMatrix);\n\n        const radius = node.geometry.bounds.radius * worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","// TODO: test stencil and depth\nimport { Texture } from './Texture.js';\n\nexport class RenderTarget {\n    constructor(\n        gl,\n        {\n            width = gl.canvas.width,\n            height = gl.canvas.height,\n            target = gl.FRAMEBUFFER,\n            color = 1, // number of color attachments\n            depth = true,\n            stencil = false,\n            depthTexture = false, // note - stencil breaks\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = minFilter,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            unpackAlignment,\n            premultiplyAlpha,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.buffer = this.gl.createFramebuffer();\n        this.target = target;\n        this.gl.renderer.bindFramebuffer(this);\n\n        this.textures = [];\n        const drawBuffers = [];\n\n        // create and attach required num of color textures\n        for (let i = 0; i < color; i++) {\n            this.textures.push(\n                new Texture(gl, {\n                    width,\n                    height,\n                    wrapS,\n                    wrapT,\n                    minFilter,\n                    magFilter,\n                    type,\n                    format,\n                    internalFormat,\n                    unpackAlignment,\n                    premultiplyAlpha,\n                    flipY: false,\n                    generateMipmaps: false,\n                })\n            );\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n            drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n        }\n\n        // For multi-render targets shader access\n        if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\n\n        // alias for majority of use cases\n        this.texture = this.textures[0];\n\n        // note depth textures break stencil - so can't use together\n        if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\n            this.depthTexture = new Texture(gl, {\n                width,\n                height,\n                minFilter: this.gl.NEAREST,\n                magFilter: this.gl.NEAREST,\n                format: this.gl.DEPTH_COMPONENT,\n                internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\n                type: this.gl.UNSIGNED_INT,\n            });\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            // Render buffers\n            if (depth && !stencil) {\n                this.depthBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\n            }\n\n            if (stencil && !depth) {\n                this.stencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\n            }\n\n            if (depth && stencil) {\n                this.depthStencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\n            }\n        }\n\n        this.gl.renderer.bindFramebuffer({ target: this.target });\n    }\n\n    setSize(width, height) {\n        if (this.width === width && this.height === height) return;\n\n        this.width = width;\n        this.height = height;\n        this.gl.renderer.bindFramebuffer(this);\n\n        for (let i = 0; i < this.textures.length; i++) {\n            this.textures[i].width = width;\n            this.textures[i].height = height;\n            this.textures[i].needsUpdate = true;\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n        }\n\n        if (this.depthTexture) {\n            this.depthTexture.width = width;\n            this.depthTexture.height = height;\n            this.depthTexture.needsUpdate = true;\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            if (this.depthBuffer) {\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n            }\n\n            if (this.stencilBuffer) {\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n            }\n\n            if (this.depthStencilBuffer) {\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n            }\n        }\n\n        this.gl.renderer.bindFramebuffer({ target: this.target });\n    }\n}\n","const NAMES = {\n    black: '#000000',\n    white: '#ffffff',\n    red: '#ff0000',\n    green: '#00ff00',\n    blue: '#0000ff',\n    fuchsia: '#ff00ff',\n    cyan: '#00ffff',\n    yellow: '#ffff00',\n    orange: '#ff8000',\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [parseInt(rgb[1], 16) / 255, parseInt(rgb[2], 16) / 255, parseInt(rgb[3], 16) / 255];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\n}\n\nexport function parseColor(color) {\n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n\n    // Hex\n    if (color[0] === '#') return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n","import * as ColorFunc from './functions/ColorFunc.js';\n\n// Color stored as an array of RGB decimal values (between 0 > 1)\n// Constructor and set method accept following formats:\n// new Color() - Empty (defaults to black)\n// new Color([0.2, 0.4, 1.0]) - Decimal Array (or another Color instance)\n// new Color(0.7, 0.0, 0.1) - Decimal RGB values\n// new Color('#ff0000') - Hex string\n// new Color('#ccc') - Short-hand Hex string\n// new Color(0x4f27e8) - Number\n// new Color('red') - Color name string (short list in ColorFunc.js)\n\nexport class Color extends Array {\n    constructor(color) {\n        if (Array.isArray(color)) return super(...color);\n        return super(...ColorFunc.parseColor(...arguments));\n    }\n\n    get r() {\n        return this[0];\n    }\n\n    get g() {\n        return this[1];\n    }\n\n    get b() {\n        return this[2];\n    }\n\n    set r(v) {\n        this[0] = v;\n    }\n\n    set g(v) {\n        this[1] = v;\n    }\n\n    set b(v) {\n        this[2] = v;\n    }\n\n    set(color) {\n        if (Array.isArray(color)) return this.copy(color);\n        return this.copy(ColorFunc.parseColor(...arguments));\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        return this;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","import * as Vec4Func from './functions/Vec4Func.js';\n\nexport class Vec4 extends Array {\n    constructor(x = 0, y = x, z = x, w = x) {\n        super(x, y, z, w);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set w(v) {\n        this[3] = v;\n    }\n\n    set(x, y = x, z = x, w = x) {\n        if (x.length) return this.copy(x);\n        Vec4Func.set(this, x, y, z, w);\n        return this;\n    }\n\n    copy(v) {\n        Vec4Func.copy(this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec4Func.normalize(this, this);\n        return this;\n    }\n\n    multiply(v) {\n        Vec4Func.scale(this, this, v);\n        return this;\n    }\n\n    dot(v) {\n        return Vec4Func.dot(this, v);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = numIndices > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Plane } from './Plane.js';\n\nexport class Box extends Geometry {\n    constructor(gl, { width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const dSegs = depthSegments;\n\n        const num = (wSegs + 1) * (hSegs + 1) * 2 + (wSegs + 1) * (dSegs + 1) * 2 + (hSegs + 1) * (dSegs + 1) * 2;\n        const numIndices = (wSegs * hSegs * 2 + wSegs * dSegs * 2 + hSegs * dSegs * 2) * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n\n        // left, right\n        Plane.buildPlane(position, normal, uv, index, depth, height, width, dSegs, hSegs, 2, 1, 0, -1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, depth, height, -width, dSegs, hSegs, 2, 1, 0, 1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        // top, bottom\n        Plane.buildPlane(position, normal, uv, index, width, depth, height, dSegs, wSegs, 0, 2, 1, 1, 1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, depth, -height, dSegs, wSegs, 0, 2, 1, 1, -1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        // front, back\n        Plane.buildPlane(position, normal, uv, index, width, height, -depth, wSegs, hSegs, 0, 1, 2, -1, -1, i, ii);\n        i += (wSegs + 1) * (hSegs + 1);\n        ii += wSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, 0, 1, 2, 1, -1, i, ii);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Sphere extends Geometry {\n    constructor(\n        gl,\n        {\n            radius = 0.5,\n            widthSegments = 16,\n            heightSegments = Math.ceil(widthSegments * 0.5),\n            phiStart = 0,\n            phiLength = Math.PI * 2,\n            thetaStart = 0,\n            thetaLength = Math.PI,\n            attributes = {},\n        } = {}\n    ) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const pStart = phiStart;\n        const pLength = phiLength;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let iv = 0;\n        let ii = 0;\n        let te = tStart + tLength;\n        const grid = [];\n\n        let n = new Vec3();\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let vRow = [];\n            let v = iy / hSegs;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let u = ix / wSegs;\n                let x = -radius * Math.cos(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n                let y = radius * Math.cos(tStart + v * tLength);\n                let z = radius * Math.sin(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n\n                position[i * 3] = x;\n                position[i * 3 + 1] = y;\n                position[i * 3 + 2] = z;\n\n                n.set(x, y, z).normalize();\n                normal[i * 3] = n.x;\n                normal[i * 3 + 1] = n.y;\n                normal[i * 3 + 2] = n.z;\n\n                uv[i * 2] = u;\n                uv[i * 2 + 1] = 1 - v;\n\n                vRow.push(iv++);\n            }\n\n            grid.push(vRow);\n        }\n\n        for (let iy = 0; iy < hSegs; iy++) {\n            for (let ix = 0; ix < wSegs; ix++) {\n                let a = grid[iy][ix + 1];\n                let b = grid[iy][ix];\n                let c = grid[iy + 1][ix];\n                let d = grid[iy + 1][ix + 1];\n\n                if (iy !== 0 || tStart > 0) {\n                    index[ii * 3] = a;\n                    index[ii * 3 + 1] = b;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n                if (iy !== hSegs - 1 || te < Math.PI) {\n                    index[ii * 3] = b;\n                    index[ii * 3 + 1] = c;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Cylinder extends Geometry {\n    constructor(\n        gl,\n        {\n            radiusTop = 0.5,\n            radiusBottom = 0.5,\n            height = 1,\n            radialSegments = 8,\n            heightSegments = 1,\n            openEnded = false,\n            thetaStart = 0,\n            thetaLength = Math.PI * 2,\n            attributes = {},\n        } = {}\n    ) {\n        const rSegs = radialSegments;\n        const hSegs = heightSegments;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const numCaps = openEnded ? 0 : radiusBottom && radiusTop ? 2 : 1;\n        const num = (rSegs + 1) * (hSegs + 1 + numCaps) + numCaps;\n        const numIndices = rSegs * hSegs * 6 + numCaps * rSegs * 3;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n        const indexArray = [];\n\n        addHeight();\n        if (!openEnded) {\n            if (radiusTop) addCap(true);\n            if (radiusBottom) addCap(false);\n        }\n\n        function addHeight() {\n            let x, y;\n            const n = new Vec3();\n            const slope = (radiusBottom - radiusTop) / height;\n\n            for (y = 0; y <= hSegs; y++) {\n                const indexRow = [];\n                const v = y / hSegs;\n\n                const r = v * (radiusBottom - radiusTop) + radiusTop;\n                for (x = 0; x <= rSegs; x++) {\n                    const u = x / rSegs;\n                    const theta = u * tLength + tStart;\n                    const sinTheta = Math.sin(theta);\n                    const cosTheta = Math.cos(theta);\n\n                    position.set([r * sinTheta, (0.5 - v) * height, r * cosTheta], i * 3);\n                    n.set(sinTheta, slope, cosTheta).normalize();\n                    normal.set([n.x, n.y, n.z], i * 3);\n                    uv.set([u, 1 - v], i * 2);\n                    indexRow.push(i++);\n                }\n                indexArray.push(indexRow);\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                for (y = 0; y < hSegs; y++) {\n                    const a = indexArray[y][x];\n                    const b = indexArray[y + 1][x];\n                    const c = indexArray[y + 1][x + 1];\n                    const d = indexArray[y][x + 1];\n\n                    index.set([a, b, d, b, c, d], ii * 3);\n                    ii += 2;\n                }\n            }\n        }\n\n        function addCap(isTop) {\n            let x;\n            const r = isTop === true ? radiusTop : radiusBottom;\n            const sign = isTop === true ? 1 : -1;\n\n            const centerIndex = i;\n            position.set([0, 0.5 * height * sign, 0], i * 3);\n            normal.set([0, sign, 0], i * 3);\n            uv.set([0.5, 0.5], i * 2);\n            i++;\n\n            for (x = 0; x <= rSegs; x++) {\n                const u = x / rSegs;\n                const theta = u * tLength + tStart;\n                const cosTheta = Math.cos(theta);\n                const sinTheta = Math.sin(theta);\n\n                position.set([r * sinTheta, 0.5 * height * sign, r * cosTheta], i * 3);\n                normal.set([0, sign, 0], i * 3);\n                uv.set([cosTheta * 0.5 + 0.5, sinTheta * 0.5 * sign + 0.5], i * 2);\n                i++;\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                const j = centerIndex + x + 1;\n                if (isTop) {\n                    index.set([j, j + 1, centerIndex], ii * 3);\n                } else {\n                    index.set([j + 1, j, centerIndex], ii * 3);\n                }\n                ii++;\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Triangle extends Geometry {\n    constructor(gl, { attributes = {} } = {}) {\n        Object.assign(attributes, {\n            position: { size: 2, data: new Float32Array([-1, -1, 3, -1, -1, 3]) },\n            uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// https://github.com/mrdoob/three.js/blob/master/src/geometries/TorusGeometry.js\n\nimport { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Torus extends Geometry {\n    constructor(gl, { radius = 0.5, tube = 0.2, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2, attributes = {} } = {}) {\n        const num = (radialSegments + 1) * (tubularSegments + 1);\n        const numIndices = radialSegments * tubularSegments * 6;\n\n        const vertices = new Float32Array(num * 3);\n        const normals = new Float32Array(num * 3);\n        const uvs = new Float32Array(num * 2);\n        const indices = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        const center = new Vec3();\n        const vertex = new Vec3();\n        const normal = new Vec3();\n\n        // generate vertices, normals and uvs\n        let idx = 0;\n        for (let j = 0; j <= radialSegments; j++) {\n            for (let i = 0; i <= tubularSegments; i++, idx++) {\n                const u = (i / tubularSegments) * arc;\n                const v = (j / radialSegments) * Math.PI * 2;\n\n                // vertex\n                vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n                vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n                vertex.z = tube * Math.sin(v);\n\n                vertices.set([vertex.x, vertex.y, vertex.z], idx * 3);\n\n                // normal\n                center.x = radius * Math.cos(u);\n                center.y = radius * Math.sin(u);\n                normal.sub(vertex, center).normalize();\n\n                normals.set([normal.x, normal.y, normal.z], idx * 3);\n\n                // uv\n                uvs.set([i / tubularSegments, j / radialSegments], idx * 2);\n            }\n        }\n\n        // generate indices\n        idx = 0;\n        for (let j = 1; j <= radialSegments; j++) {\n            for (let i = 1; i <= tubularSegments; i++, idx++) {\n                // indices\n                const a = (tubularSegments + 1) * j + i - 1;\n                const b = (tubularSegments + 1) * (j - 1) + i - 1;\n                const c = (tubularSegments + 1) * (j - 1) + i;\n                const d = (tubularSegments + 1) * j + i;\n\n                // faces\n                indices.set([a, b, d, b, c, d], idx * 6);\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: vertices },\n            normal: { size: 3, data: normals },\n            uv: { size: 2, data: uvs },\n            index: { data: indices },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = /* @__PURE__ */ new Vec3();\nconst tempVec2a = /* @__PURE__ */ new Vec2();\nconst tempVec2b = /* @__PURE__ */ new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        zoomStyle = 'dolly',\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n    this.zoomStyle = zoomStyle;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    const dolly = (dollyScale) => {\n        if (this.zoomStyle === 'dolly') sphericalDelta.radius /= dollyScale;\n        else {\n            object.fov /= dollyScale;\n            if (object.type === 'orthographic') object.orthographic();\n            else object.perspective();\n        }\n    };\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","// TODO: barycentric code shouldn't be here, but where?\n// TODO: SphereCast?\n\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nconst tempVec2a = /* @__PURE__ */ new Vec2();\nconst tempVec2b = /* @__PURE__ */ new Vec2();\nconst tempVec2c = /* @__PURE__ */ new Vec2();\n\nconst tempVec3a = /* @__PURE__ */ new Vec3();\nconst tempVec3b = /* @__PURE__ */ new Vec3();\nconst tempVec3c = /* @__PURE__ */ new Vec3();\nconst tempVec3d = /* @__PURE__ */ new Vec3();\nconst tempVec3e = /* @__PURE__ */ new Vec3();\nconst tempVec3f = /* @__PURE__ */ new Vec3();\nconst tempVec3g = /* @__PURE__ */ new Vec3();\nconst tempVec3h = /* @__PURE__ */ new Vec3();\nconst tempVec3i = /* @__PURE__ */ new Vec3();\nconst tempVec3j = /* @__PURE__ */ new Vec3();\nconst tempVec3k = /* @__PURE__ */ new Vec3();\n\nconst tempMat4 = /* @__PURE__ */ new Mat4();\n\nexport class Raycast {\n    constructor() {\n        this.origin = new Vec3();\n        this.direction = new Vec3();\n    }\n\n    // Set ray from mouse unprojection\n    castMouse(camera, mouse = [0, 0]) {\n        if (camera.type === 'orthographic') {\n            // Set origin\n            // Since camera is orthographic, origin is not the camera position\n            const { left, right, bottom, top, zoom } = camera;\n            const x = left / zoom + ((right - left) / zoom) * (mouse[0] * 0.5 + 0.5);\n            const y = bottom / zoom + ((top - bottom) / zoom) * (mouse[1] * 0.5 + 0.5);\n            this.origin.set(x, y, 0);\n            this.origin.applyMatrix4(camera.worldMatrix);\n\n            // Set direction\n            // https://community.khronos.org/t/get-direction-from-transformation-matrix-or-quat/65502/2\n            this.direction.x = -camera.worldMatrix[8];\n            this.direction.y = -camera.worldMatrix[9];\n            this.direction.z = -camera.worldMatrix[10];\n        } else {\n            // Set origin\n            camera.worldMatrix.getTranslation(this.origin);\n\n            // Set direction\n            this.direction.set(mouse[0], mouse[1], 0.5);\n            camera.unproject(this.direction);\n            this.direction.sub(this.origin).normalize();\n        }\n    }\n\n    intersectBounds(meshes, { maxDistance, output = [] } = {}) {\n        if (!Array.isArray(meshes)) meshes = [meshes];\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n\n        const hits = output;\n        hits.length = 0;\n\n        meshes.forEach((mesh) => {\n            // Create bounds\n            if (!mesh.geometry.bounds || mesh.geometry.bounds.radius === Infinity) mesh.geometry.computeBoundingSphere();\n            const bounds = mesh.geometry.bounds;\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            // Break out early if bounds too far away from origin\n            if (maxDistance) {\n                if (origin.distance(bounds.center) - bounds.radius > localMaxDistance) return;\n            }\n\n            let localDistance = 0;\n\n            // Check origin isn't inside bounds before testing intersection\n            if (mesh.geometry.raycast === 'sphere') {\n                if (origin.distance(bounds.center) > bounds.radius) {\n                    localDistance = this.intersectSphere(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            } else {\n                if (\n                    origin.x < bounds.min.x ||\n                    origin.x > bounds.max.x ||\n                    origin.y < bounds.min.y ||\n                    origin.y > bounds.max.y ||\n                    origin.z < bounds.min.z ||\n                    origin.z > bounds.max.z\n                ) {\n                    localDistance = this.intersectBox(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            }\n\n            if (maxDistance && localDistance > localMaxDistance) return;\n\n            // Create object on mesh to avoid generating lots of objects\n            if (!mesh.hit) mesh.hit = { localPoint: new Vec3(), point: new Vec3() };\n\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            hits.push(mesh);\n        });\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectMeshes(meshes, { cullFace = true, maxDistance, includeUV = true, includeNormal = true, output = [] } = {}) {\n        // Test bounds first before testing geometry\n        const hits = this.intersectBounds(meshes, { maxDistance, output });\n        if (!hits.length) return hits;\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n        const a = tempVec3c;\n        const b = tempVec3d;\n        const c = tempVec3e;\n        const closestFaceNormal = tempVec3f;\n        const faceNormal = tempVec3g;\n        const barycoord = tempVec3h;\n        const uvA = tempVec2a;\n        const uvB = tempVec2b;\n        const uvC = tempVec2c;\n\n        for (let i = hits.length - 1; i >= 0; i--) {\n            const mesh = hits[i];\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            let localDistance = 0;\n            let closestA, closestB, closestC;\n\n            const geometry = mesh.geometry;\n            const attributes = geometry.attributes;\n            const index = attributes.index;\n            const position = attributes.position;\n\n            const start = Math.max(0, geometry.drawRange.start);\n            const end = Math.min(index ? index.count : position.count, geometry.drawRange.start + geometry.drawRange.count);\n            // Data loaded shouldn't haave stride, only buffers\n            // const stride = position.stride ? position.stride / position.data.BYTES_PER_ELEMENT : position.size;\n            const stride = position.size;\n\n            for (let j = start; j < end; j += 3) {\n                // Position attribute indices for each triangle\n                const ai = index ? index.data[j] : j;\n                const bi = index ? index.data[j + 1] : j + 1;\n                const ci = index ? index.data[j + 2] : j + 2;\n\n                a.fromArray(position.data, ai * stride);\n                b.fromArray(position.data, bi * stride);\n                c.fromArray(position.data, ci * stride);\n\n                const distance = this.intersectTriangle(a, b, c, cullFace, origin, direction, faceNormal);\n                if (!distance) continue;\n\n                // Too far away\n                if (maxDistance && distance > localMaxDistance) continue;\n\n                if (!localDistance || distance < localDistance) {\n                    localDistance = distance;\n                    closestA = ai;\n                    closestB = bi;\n                    closestC = ci;\n                    closestFaceNormal.copy(faceNormal);\n                }\n            }\n\n            if (!localDistance) hits.splice(i, 1);\n\n            // Update hit values from bounds-test\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            // Add unique hit objects on mesh to avoid generating lots of objects\n            if (!mesh.hit.faceNormal) {\n                mesh.hit.localFaceNormal = new Vec3();\n                mesh.hit.faceNormal = new Vec3();\n                mesh.hit.uv = new Vec2();\n                mesh.hit.localNormal = new Vec3();\n                mesh.hit.normal = new Vec3();\n            }\n\n            // Add face normal data which is already computed\n            mesh.hit.localFaceNormal.copy(closestFaceNormal);\n            mesh.hit.faceNormal.copy(mesh.hit.localFaceNormal).transformDirection(mesh.worldMatrix);\n\n            // Optional data, opt out to optimise a bit if necessary\n            if (includeUV || includeNormal) {\n                // Calculate barycoords to find uv values at hit point\n                a.fromArray(position.data, closestA * 3);\n                b.fromArray(position.data, closestB * 3);\n                c.fromArray(position.data, closestC * 3);\n                this.getBarycoord(mesh.hit.localPoint, a, b, c, barycoord);\n            }\n\n            if (includeUV && attributes.uv) {\n                uvA.fromArray(attributes.uv.data, closestA * 2);\n                uvB.fromArray(attributes.uv.data, closestB * 2);\n                uvC.fromArray(attributes.uv.data, closestC * 2);\n                mesh.hit.uv.set(\n                    uvA.x * barycoord.x + uvB.x * barycoord.y + uvC.x * barycoord.z,\n                    uvA.y * barycoord.x + uvB.y * barycoord.y + uvC.y * barycoord.z\n                );\n            }\n\n            if (includeNormal && attributes.normal) {\n                a.fromArray(attributes.normal.data, closestA * 3);\n                b.fromArray(attributes.normal.data, closestB * 3);\n                c.fromArray(attributes.normal.data, closestC * 3);\n                mesh.hit.localNormal.set(\n                    a.x * barycoord.x + b.x * barycoord.y + c.x * barycoord.z,\n                    a.y * barycoord.x + b.y * barycoord.y + c.y * barycoord.z,\n                    a.z * barycoord.x + b.z * barycoord.y + c.z * barycoord.z\n                );\n\n                mesh.hit.normal.copy(mesh.hit.localNormal).transformDirection(mesh.worldMatrix);\n            }\n        }\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectPlane(plane, origin = this.origin, direction = this.direction) {\n        const xminp = tempVec3a;\n        xminp.sub(plane.origin, origin);\n\n        const a = xminp.dot(plane.normal);\n        const b = direction.dot(plane.normal);\n        // Assuming we don't want to count a ray parallel to the plane as intersecting\n        if (b == 0) return 0;\n        const delta = a / b;\n        if (delta <= 0) return 0;\n        return origin.add(direction.scale(delta));\n    }\n\n    intersectSphere(sphere, origin = this.origin, direction = this.direction) {\n        const ray = tempVec3c;\n        ray.sub(sphere.center, origin);\n        const tca = ray.dot(direction);\n        const d2 = ray.dot(ray) - tca * tca;\n        const radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return 0;\n        const thc = Math.sqrt(radius2 - d2);\n        const t0 = tca - thc;\n        const t1 = tca + thc;\n        if (t0 < 0 && t1 < 0) return 0;\n        if (t0 < 0) return t1;\n        return t0;\n    }\n\n    // Ray AABB - Ray Axis aligned bounding box testing\n    intersectBox(box, origin = this.origin, direction = this.direction) {\n        let tmin, tmax, tYmin, tYmax, tZmin, tZmax;\n        const invdirx = 1 / direction.x;\n        const invdiry = 1 / direction.y;\n        const invdirz = 1 / direction.z;\n        const min = box.min;\n        const max = box.max;\n        tmin = ((invdirx >= 0 ? min.x : max.x) - origin.x) * invdirx;\n        tmax = ((invdirx >= 0 ? max.x : min.x) - origin.x) * invdirx;\n        tYmin = ((invdiry >= 0 ? min.y : max.y) - origin.y) * invdiry;\n        tYmax = ((invdiry >= 0 ? max.y : min.y) - origin.y) * invdiry;\n        if (tmin > tYmax || tYmin > tmax) return 0;\n        if (tYmin > tmin) tmin = tYmin;\n        if (tYmax < tmax) tmax = tYmax;\n        tZmin = ((invdirz >= 0 ? min.z : max.z) - origin.z) * invdirz;\n        tZmax = ((invdirz >= 0 ? max.z : min.z) - origin.z) * invdirz;\n        if (tmin > tZmax || tZmin > tmax) return 0;\n        if (tZmin > tmin) tmin = tZmin;\n        if (tZmax < tmax) tmax = tZmax;\n        if (tmax < 0) return 0;\n        return tmin >= 0 ? tmin : tmax;\n    }\n\n    intersectTriangle(a, b, c, backfaceCulling = true, origin = this.origin, direction = this.direction, normal = tempVec3g) {\n        // from https://github.com/mrdoob/three.js/blob/master/src/math/Ray.js\n        // which is from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        const edge1 = tempVec3h;\n        const edge2 = tempVec3i;\n        const diff = tempVec3j;\n        edge1.sub(b, a);\n        edge2.sub(c, a);\n        normal.cross(edge1, edge2);\n        let DdN = direction.dot(normal);\n        if (!DdN) return 0;\n        let sign;\n        if (DdN > 0) {\n            if (backfaceCulling) return 0;\n            sign = 1;\n        } else {\n            sign = -1;\n            DdN = -DdN;\n        }\n        diff.sub(origin, a);\n        let DdQxE2 = sign * direction.dot(edge2.cross(diff, edge2));\n        if (DdQxE2 < 0) return 0;\n        let DdE1xQ = sign * direction.dot(edge1.cross(diff));\n        if (DdE1xQ < 0) return 0;\n        if (DdQxE2 + DdE1xQ > DdN) return 0;\n        let QdN = -sign * diff.dot(normal);\n        if (QdN < 0) return 0;\n        return QdN / DdN;\n    }\n\n    getBarycoord(point, a, b, c, target = tempVec3h) {\n        // From https://github.com/mrdoob/three.js/blob/master/src/math/Triangle.js\n        // static/instance method to calculate barycentric coordinates\n        // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n        const v0 = tempVec3i;\n        const v1 = tempVec3j;\n        const v2 = tempVec3k;\n        v0.sub(c, a);\n        v1.sub(b, a);\n        v2.sub(point, a);\n        const dot00 = v0.dot(v0);\n        const dot01 = v0.dot(v1);\n        const dot02 = v0.dot(v2);\n        const dot11 = v1.dot(v1);\n        const dot12 = v1.dot(v2);\n        const denom = dot00 * dot11 - dot01 * dot01;\n        if (denom === 0) return target.set(-2, -1, -1);\n        const invDenom = 1 / denom;\n        const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n        const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n        return target.set(1 - u - v, v, u);\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\n\nconst CATMULLROM = 'catmullrom';\nconst CUBICBEZIER = 'cubicbezier';\nconst QUADRATICBEZIER = 'quadraticbezier';\n\n// temp\nconst _a0 = /* @__PURE__ */ new Vec3(),\n    _a1 = /* @__PURE__ */ new Vec3(),\n    _a2 = /* @__PURE__ */ new Vec3(),\n    _a3 = /* @__PURE__ */ new Vec3();\n\n/**\n * Get the control points of cubic bezier curve.\n * @param {*} i\n * @param {*} a\n * @param {*} b\n */\nfunction getCtrlPoint(points, i, a = 0.168, b = 0.168) {\n    if (i < 1) {\n        _a0.sub(points[1], points[0]).scale(a).add(points[0]);\n    } else {\n        _a0.sub(points[i + 1], points[i - 1])\n            .scale(a)\n            .add(points[i]);\n    }\n    if (i > points.length - 3) {\n        const last = points.length - 1;\n        _a1.sub(points[last - 1], points[last])\n            .scale(b)\n            .add(points[last]);\n    } else {\n        _a1.sub(points[i], points[i + 2])\n            .scale(b)\n            .add(points[i + 1]);\n    }\n    return [_a0.clone(), _a1.clone()];\n}\n\nfunction getQuadraticBezierPoint(t, p0, c0, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 2);\n    _a1.copy(c0).scale(2 * k * t);\n    _a2.copy(p1).scale(t ** 2);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2);\n    return ret;\n}\n\nfunction getCubicBezierPoint(t, p0, c0, c1, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 3);\n    _a1.copy(c0).scale(3 * k ** 2 * t);\n    _a2.copy(c1).scale(3 * k * t ** 2);\n    _a3.copy(p1).scale(t ** 3);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2).add(_a3);\n    return ret;\n}\n\nexport class Curve {\n    constructor({ points = [new Vec3(0, 0, 0), new Vec3(0, 1, 0), new Vec3(1, 1, 0), new Vec3(1, 0, 0)], divisions = 12, type = CATMULLROM } = {}) {\n        this.points = points;\n        this.divisions = divisions;\n        this.type = type;\n    }\n\n    _getQuadraticBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 3) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        const p0 = this.points[0];\n        let c0 = this.points[1],\n            p1 = this.points[2];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n            points.push(p);\n        }\n\n        let offset = 3;\n        while (count - offset > 0) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c0);\n            p1 = this.points[offset];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n                points.push(p);\n            }\n            offset++;\n        }\n\n        return points;\n    }\n\n    _getCubicBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 4) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        let p0 = this.points[0],\n            c0 = this.points[1],\n            c1 = this.points[2],\n            p1 = this.points[3];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n            points.push(p);\n        }\n\n        let offset = 4;\n        while (count - offset > 1) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c1);\n            c1 = this.points[offset];\n            p1 = this.points[offset + 1];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n                points.push(p);\n            }\n            offset += 2;\n        }\n\n        return points;\n    }\n\n    _getCatmullRomPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count <= 2) {\n            return this.points;\n        }\n\n        let p0;\n        this.points.forEach((p, i) => {\n            if (i === 0) {\n                p0 = p;\n            } else {\n                const [c0, c1] = getCtrlPoint(this.points, i - 1, a, b);\n                const c = new Curve({\n                    points: [p0, c0, c1, p],\n                    type: CUBICBEZIER,\n                });\n                points.pop();\n                points.push(...c.getPoints(divisions));\n                p0 = p;\n            }\n        });\n\n        return points;\n    }\n\n    getPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const type = this.type;\n\n        if (type === QUADRATICBEZIER) {\n            return this._getQuadraticBezierPoints(divisions);\n        }\n\n        if (type === CUBICBEZIER) {\n            return this._getCubicBezierPoints(divisions);\n        }\n\n        if (type === CATMULLROM) {\n            return this._getCatmullRomPoints(divisions, a, b);\n        }\n\n        return this.points;\n    }\n}\n\nCurve.CATMULLROM = CATMULLROM;\nCurve.CUBICBEZIER = CUBICBEZIER;\nCurve.QUADRATICBEZIER = QUADRATICBEZIER;\n","/**\n * Abstract base class for path segments.\n * This class contains common methods for all segments types.\n */\nexport default class BaseSegment {\n    constructor() {\n        this._len = -1;\n        this.tiltStart = 0;\n        this.tiltEnd = 0;\n    }\n\n    /**\n     * Get segment length.\n     * @returns {number} segment length\n     */\n    getLength() {\n        if (this._len < 0) {\n            this.updateLength();\n        }\n\n        return this._len;\n    }\n\n    /**\n     * Get tilt angle at t\n     * @param {number} t Distance at time t in range [0 .. 1]\n     * @returns {number} Tilt angle at t\n     */\n    getTiltAt(t) {\n        return this.tiltStart * (1 - t) * this.tiltEnd * t;\n    }\n\n    /**\n     * Creates a clone of this instance\n     * @returns {BaseSegment} cloned instance\n     */\n    clone() {\n        return new this.constructor().copy(this);\n    }\n\n    /**\n     * Copies another segment object to this instance.\n     * @param {BaseSegment} source reference object\n     * @returns {BaseSegment} copy of source object\n     */\n    copy(source) {\n        this._len = source._len;\n        this.tiltStart = source.tiltStart;\n        this.tiltEnd = source.tiltEnd;\n        return this;\n    }\n}\n","// from https://github.com/Pomax/bezierjs/blob/d19695f3cc3ce383cf38ce4643f467deca7edb92/src/utils.js#L26\n// Legendre-Gauss abscissae with n=24 (x_i values, defined at i=n as the roots of the nth order Legendre polynomial Pn(x))\nexport const T_VALUES = [\n    -0.0640568928626056260850430826247450385909, 0.0640568928626056260850430826247450385909, -0.1911188674736163091586398207570696318404,\n    0.1911188674736163091586398207570696318404, -0.3150426796961633743867932913198102407864, 0.3150426796961633743867932913198102407864,\n    -0.4337935076260451384870842319133497124524, 0.4337935076260451384870842319133497124524, -0.5454214713888395356583756172183723700107,\n    0.5454214713888395356583756172183723700107, -0.6480936519369755692524957869107476266696, 0.6480936519369755692524957869107476266696,\n    -0.7401241915785543642438281030999784255232, 0.7401241915785543642438281030999784255232, -0.8200019859739029219539498726697452080761,\n    0.8200019859739029219539498726697452080761, -0.8864155270044010342131543419821967550873, 0.8864155270044010342131543419821967550873,\n    -0.9382745520027327585236490017087214496548, 0.9382745520027327585236490017087214496548, -0.9747285559713094981983919930081690617411,\n    0.9747285559713094981983919930081690617411, -0.9951872199970213601799974097007368118745, 0.9951872199970213601799974097007368118745,\n];\n\n// Legendre-Gauss weights with n=24 (w_i values, defined by a function linked to in the Bezier primer article)\nexport const C_VALUES = [\n    0.1279381953467521569740561652246953718517, 0.1279381953467521569740561652246953718517, 0.1258374563468282961213753825111836887264,\n    0.1258374563468282961213753825111836887264, 0.121670472927803391204463153476262425607, 0.121670472927803391204463153476262425607,\n    0.1155056680537256013533444839067835598622, 0.1155056680537256013533444839067835598622, 0.1074442701159656347825773424466062227946,\n    0.1074442701159656347825773424466062227946, 0.0976186521041138882698806644642471544279, 0.0976186521041138882698806644642471544279,\n    0.086190161531953275917185202983742667185, 0.086190161531953275917185202983742667185, 0.0733464814110803057340336152531165181193,\n    0.0733464814110803057340336152531165181193, 0.0592985849154367807463677585001085845412, 0.0592985849154367807463677585001085845412,\n    0.0442774388174198061686027482113382288593, 0.0442774388174198061686027482113382288593, 0.0285313886289336631813078159518782864491,\n    0.0285313886289336631813078159518782864491, 0.0123412297999871995468056670700372915759, 0.0123412297999871995468056670700372915759,\n];\n\n/**\n * Convert Degree To Radian\n * @param {number} a Angle in Degrees\n * @returns {number} a Angle in Radians\n */\nexport const toRadian = (a) => (a * Math.PI) / 180;\n\n/**\n * Convert Radian To Degree\n * @param {number} a Angle in Radians\n * @returns {number} a Angle in Radian\n */\nexport const toDegrees = (a) => (180 * a) / Math.PI;\n\nexport const clamp = (val, min, max) => Math.max(min, Math.min(val, max));\nexport const lerp = (t, v0, v1) => v0 * (t - 1) + v1 * t;\n\n/**\n * Fills a rotation matrix with the given sine and cosine of the angle around the given axis\n * This function helps to avoid inverse trigonometry\n * @param {Mat4} out mat4 receiving operation result\n * @param {Vec3} axis the axis to rotate around. Should be normalized\n * @param {number} sin sine of rotation angle\n * @param {number} cos cosine of rotation angle\n * @returns {Mat4} out\n */\nexport function mat4fromRotationSinCos(out, axis, sin, cos) {\n    const x = axis[0];\n    const y = axis[1];\n    const z = axis[2];\n    const t = 1 - cos;\n\n    out[0] = x * x * t + cos;\n    out[1] = y * x * t + z * sin;\n    out[2] = z * x * t - y * sin;\n    out[3] = 0;\n    out[4] = x * y * t - z * sin;\n    out[5] = y * y * t + cos;\n    out[6] = z * y * t + x * sin;\n    out[7] = 0;\n    out[8] = x * z * t + y * sin;\n    out[9] = y * z * t - x * sin;\n    out[10] = z * z * t + cos;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Rotates the normal and binormal around its tangent by the given angle.\n *\n * see: https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula\n * @param {number} angle rotation angle\n * @param {Vec3} norm unit normal vector\n * @param {Vec3} binorm unit binormal vector\n * @param {Vec3} outNorm optional normal output vector. If not present then normal vector changes in place\n * @param {Vec3} outBinorm optional binormal output vector. If not present then binormal vector changes in place\n */\nexport function rotateNormalBinormal(angle, norm, binorm, outNorm = norm, outBinorm = binorm) {\n    const s = Math.sin(angle);\n    const c = Math.cos(angle);\n\n    const nx = c * norm.x + s * binorm.x;\n    const ny = c * norm.y + s * binorm.y;\n    const nz = c * norm.z + s * binorm.z;\n\n    const bx = c * binorm.x - s * norm.x;\n    const by = c * binorm.y - s * norm.y;\n    const bz = c * binorm.z - s * norm.z;\n\n    outNorm.set(nx, ny, nz);\n    outBinorm.set(bx, by, bz);\n}\n","import BaseSegment from './BaseSegment.js';\nimport { Vec3 } from '../../math/Vec3.js';\nimport { T_VALUES, C_VALUES } from './utils.js';\n\nconst tempVec3 = /* @__PURE__ */ new Vec3();\n\nfunction cubicBezier(t, p0, p1, p2, p3) {\n    const k = 1 - t;\n    // prettier-ignore\n    return (\n        (k * k * k * p0) +\n        (3 * k * k * t * p1) +\n        (3 * k * t * t * p2) +\n        (t * t * t * p3)\n    );\n}\n\nfunction cubicBezierDeriv(t, p0, p1, p2, p3) {\n    const k = 1 - t;\n    // prettier-ignore\n    return (\n        (3 * k * k * (p1 - p0)) +\n        (6 * k * t * (p2 - p1)) +\n        (3 * t * t * (p3 - p2))\n    );\n}\n\nexport default class CubicBezierSegment extends BaseSegment {\n    constructor(p0, p1, p2, p3, tiltStart = 0, tiltEnd = 0) {\n        super();\n        this.p0 = p0;\n        this.p1 = p1;\n        this.p2 = p2;\n        this.p3 = p3;\n\n        this.tiltStart = tiltStart;\n        this.tiltEnd = tiltEnd;\n\n        this._len = -1;\n    }\n\n    /**\n     * Updates the segment length. You must call this method every time you change the curve's control points.\n     */\n    updateLength() {\n        // from https://github.com/Pomax/bezierjs/blob/d19695f3cc3ce383cf38ce4643f467deca7edb92/src/utils.js#L265\n        const z = 0.5;\n        const len = T_VALUES.length;\n\n        let sum = 0;\n        for (let i = 0, t; i < len; i++) {\n            t = z * T_VALUES[i] + z;\n            sum += C_VALUES[i] * this.getDerivativeAt(t, tempVec3).len();\n        }\n\n        this._len = z * sum;\n    }\n\n    /**\n     * Get point at relative position in curve according to segment length.\n     * @param {number} t Distance at time t in range [0 .. 1]\n     * @param {Vec3} out Optional Vec3 to output\n     * @returns {Vec3} Point at relative position\n     */\n    getPointAt(t, out = new Vec3()) {\n        out.x = cubicBezier(t, this.p0.x, this.p1.x, this.p2.x, this.p3.x);\n        out.y = cubicBezier(t, this.p0.y, this.p1.y, this.p2.y, this.p3.y);\n        out.z = cubicBezier(t, this.p0.z, this.p1.z, this.p2.z, this.p3.z);\n        return out;\n    }\n\n    getDerivativeAt(t, out = new Vec3()) {\n        out.x = cubicBezierDeriv(t, this.p0.x, this.p1.x, this.p2.x, this.p3.x);\n        out.y = cubicBezierDeriv(t, this.p0.y, this.p1.y, this.p2.y, this.p3.y);\n        out.z = cubicBezierDeriv(t, this.p0.z, this.p1.z, this.p2.z, this.p3.z);\n        return out;\n    }\n\n    /**\n     * Returns a unit vector tangent at t\n     * @param {number} t Distance at time t in range [0 .. 1]\n     * @param {Vec3} out Optional Vec3 to output\n     * @returns {Vec3} A unit vector\n     */\n    getTangentAt(t, out = new Vec3()) {\n        return this.getDerivativeAt(t, out).normalize();\n    }\n\n    lastPoint() {\n        return this.p3;\n    }\n}\n","import BaseSegment from './BaseSegment.js';\nimport { Vec3 } from '../../math/Vec3.js';\nimport { T_VALUES, C_VALUES } from './utils.js';\n\nconst tempVec3 = /* @__PURE__ */ new Vec3();\n\nfunction quadraticBezier(t, p0, p1, p2) {\n    const k = 1 - t;\n    return k * k * p0 + 2 * k * t * p1 + t * t * p2;\n}\n\nfunction quadraticBezierDeriv(t, p0, p1, p2) {\n    const k = 1 - t;\n    return 2 * k * (p1 - p0) + 2 * t * (p2 - p1);\n}\n\nexport default class QuadraticBezierSegment extends BaseSegment {\n    constructor(p0, p1, p2, tiltStart = 0, tiltEnd = 0) {\n        super();\n        this.p0 = p0;\n        this.p1 = p1;\n        this.p2 = p2;\n\n        this.tiltStart = tiltStart;\n        this.tiltEnd = tiltEnd;\n\n        this._len = -1;\n    }\n\n    /**\n     * Updates the segment length. You must call this method every time you change the curve's control points.\n     */\n    updateLength() {\n        // from https://github.com/Pomax/bezierjs/blob/d19695f3cc3ce383cf38ce4643f467deca7edb92/src/utils.js#L265\n        const z = 0.5;\n        const len = T_VALUES.length;\n\n        let sum = 0;\n        for (let i = 0, t; i < len; i++) {\n            t = z * T_VALUES[i] + z;\n            sum += C_VALUES[i] * this.getDerivativeAt(t, tempVec3).len();\n        }\n\n        this._len = z * sum;\n    }\n\n    /**\n     * Get point at relative position in curve according to segment length.\n     * @param {number} t Distance at time t in range [0 .. 1]\n     * @param {Vec3} out Optional Vec3 to output\n     * @returns {Vec3} Point at relative position\n     */\n    getPointAt(t, out = new Vec3()) {\n        out.x = quadraticBezier(t, this.p0.x, this.p1.x, this.p2.x);\n        out.y = quadraticBezier(t, this.p0.y, this.p1.y, this.p2.y);\n        out.z = quadraticBezier(t, this.p0.z, this.p1.z, this.p2.z);\n        return out;\n    }\n\n    getDerivativeAt(t, out = new Vec3()) {\n        out.x = quadraticBezierDeriv(t, this.p0.x, this.p1.x, this.p2.x);\n        out.y = quadraticBezierDeriv(t, this.p0.y, this.p1.y, this.p2.y);\n        out.z = quadraticBezierDeriv(t, this.p0.z, this.p1.z, this.p2.z);\n        return out;\n    }\n\n    /**\n     * Returns a unit vector tangent at t\n     * @param {number} t Distance at time t in range [0 .. 1]\n     * @param {Vec3} out Optional Vec3 to output\n     * @returns {Vec3} A unit vector\n     */\n    getTangentAt(t, out = new Vec3()) {\n        return this.getDerivativeAt(t, out).normalize();\n    }\n\n    lastPoint() {\n        return this.p2;\n    }\n}\n","import BaseSegment from './BaseSegment.js';\nimport { Vec3 } from '../../math/Vec3.js';\nimport { lerp as lerp3 } from '../../math/functions/Vec3Func.js';\n\nconst tempVec3 = /* @__PURE__ */ new Vec3();\n\nexport default class LineSegment extends BaseSegment {\n    constructor(p0, p1, tiltStart = 0, tiltEnd = 0) {\n        super();\n        this.p0 = p0;\n        this.p1 = p1;\n\n        this.tiltStart = tiltStart;\n        this.tiltEnd = tiltEnd;\n\n        this._len = -1;\n    }\n\n    /**\n     * Updates the segment length. You must call this method every time you change the curve's control points.\n     */\n    updateLength() {\n        this._len = tempVec3.sub(this.p1, this.p0).len();\n    }\n\n    /**\n     * Get point at relative position in curve according to segment length.\n     * @param {number} t Distance at time t in range [0 .. 1]\n     * @param {Vec3} out Optional Vec3 to output\n     * @returns {Vec3} Point at relative position\n     */\n    getPointAt(t, out = new Vec3()) {\n        lerp3(out, this.p0, this.p1, t);\n        return out;\n    }\n\n    /**\n     * Returns a unit vector tangent at t\n     * @param {number} t Distance at time t in range [0 .. 1]\n     * @param {Vec3} out Optional Vec3 to output\n     * @returns {Vec3} A unit vector\n     */\n    getTangentAt(t, out = new Vec3()) {\n        return out.sub(this.p1, this.p0).normalize();\n    }\n\n    lastPoint() {\n        return this.p1;\n    }\n}\n","import { Vec3 } from '../../math/Vec3.js';\nimport { Mat4 } from '../../math/Mat4.js';\nimport CubicBezierSegment from './CubicBezierSegment.js';\nimport QuadraticBezierSegment from './QuadraticBezierSegment.js';\nimport LineSegment from './LineSegment.js';\nimport { clamp, toDegrees, toRadian, mat4fromRotationSinCos, rotateNormalBinormal } from './utils.js';\n\nconst tempVec3 = /* @__PURE__ */ new Vec3();\nconst tempMat4 = /* @__PURE__ */ new Mat4();\n\nfunction throwIfNullProperty(property, message) {\n    if (this[property] == null) throw new Error(message);\n}\n\nexport class Path {\n    constructor() {\n        this._segments = [];\n        this._lengthOffsets = null;\n        this._totalLength = -1;\n        this._lastPoint = null;\n        this._lastTilt = 0;\n\n        this._assertLastPoint = throwIfNullProperty.bind(this, '_lastPoint', 'Can`t get previous point of curve. Did you forget moveTo command?');\n\n        this.tiltFunction = null;\n    }\n\n    moveTo(p, tilt = 0) {\n        this._totalLength = -1;\n        this._lastPoint = p;\n        this._lastTilt = tilt;\n    }\n\n    bezierCurveTo(cp1, cp2, p, tilt = 0) {\n        this._assertLastPoint();\n        const seg = new CubicBezierSegment(this._lastPoint, cp1, cp2, p, this._lastTilt, tilt);\n        this.addSegment(seg);\n        return this;\n    }\n\n    quadraticCurveTo(cp, p, tilt = 0) {\n        this._assertLastPoint();\n        const seg = new QuadraticBezierSegment(this._lastPoint, cp, p, this._lastTilt, tilt);\n        this.addSegment(seg);\n        return this;\n    }\n\n    lineTo(p, tilt = 0) {\n        this._assertLastPoint();\n        const seg = new LineSegment(this._lastPoint, p, this._lastTilt, tilt);\n        this.addSegment(seg);\n        return this;\n    }\n\n    addSegment(segment) {\n        this._totalLength = -1;\n        this._lastPoint = segment.lastPoint();\n        this._lastTilt = segment.tiltEnd;\n        this._segments.push(segment);\n        return this;\n    }\n\n    getSegments() {\n        return this._segments;\n    }\n\n    updateLength() {\n        const n = this._segments.length;\n        this._lengthOffsets = new Array(n);\n\n        let offset = 0;\n        for (let i = 0; i < n; i++) {\n            this._lengthOffsets[i] = offset;\n            offset += this._segments[i].getLength();\n        }\n\n        this._totalLength = offset;\n    }\n\n    getLength() {\n        if (this._totalLength < 0) {\n            this.updateLength();\n        }\n\n        return this._totalLength;\n    }\n\n    /**\n     * Finding a path segment at a given absolute length distance\n     * @param {number} len absolute length distance\n     * @returns {[number, number]} [_segment index_, _relative segment distance_]\n     */\n    findSegmentIndexAtLength(len) {\n        const totalLength = this.getLength();\n\n        if (len <= 0) {\n            return [0, 0];\n        }\n\n        if (len >= totalLength) {\n            return [this._segments.length - 1, 1];\n        }\n\n        let start = 0;\n        let end = this._lengthOffsets.length - 1;\n        let index = -1;\n        let mid;\n\n        while (start <= end) {\n            mid = Math.ceil((start + end) / 2);\n\n            if (mid === 0 || mid === this._lengthOffsets.length - 1 || (len >= this._lengthOffsets[mid] && len < this._lengthOffsets[mid + 1])) {\n                index = mid;\n                break;\n            } else if (len < this._lengthOffsets[mid]) {\n                end = mid - 1;\n            } else {\n                start = mid + 1;\n            }\n        }\n\n        const seg = this._segments[index];\n        const segLen = seg.getLength();\n        const t = (len - this._lengthOffsets[index]) / segLen;\n\n        return [index, t];\n    }\n\n    getPointAtLength(len, out = new Vec3()) {\n        const [i, t] = this.findSegmentIndexAtLength(len);\n        return this._segments[i].getPointAt(t, out);\n    }\n\n    getPointAt(t, out = new Vec3()) {\n        const totalLength = this.getLength();\n        return this.getPointAtLength(t * totalLength, out);\n    }\n\n    getTangentAtLength(len, out = new Vec3()) {\n        const [i, t] = this.findSegmentIndexAtLength(len);\n        return this._segments[i].getTangentAt(t, out);\n    }\n\n    getTangentAt(t, out = new Vec3()) {\n        const totalLength = this.getLength();\n        return this.getTangentAtLength(t * totalLength, out);\n    }\n\n    getTiltAtLength(len) {\n        const [i, t] = this.findSegmentIndexAtLength(len);\n        return this._segments[i].getTiltAt(t);\n    }\n\n    getTiltAt(t) {\n        const totalLength = this.getLength();\n        return this.getTiltAtLength(t * totalLength);\n    }\n\n    /**\n     * Get sequence of points using `getPointAt(t)`\n     * @param {number} divisions number of subdivisions\n     * @returns {Vec3[]} array of points\n     */\n    getPoints(divisions = 64) {\n        const points = new Array(divisions + 1);\n        for (let i = 0; i <= divisions; i++) {\n            points[i] = this.getPointAt(i / divisions);\n        }\n        return points;\n    }\n\n    /**\n     * Generates the Frenet Frames.\n     * See http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n     * @param {number} divisions number of subdivisions\n     * @returns {{tangents: Vec3[], normals: Vec3[], binormals: Vec3[]}} Object with tangents, normals and binormals arrays\n     */\n    computeFrenetFrames(divisions = 64, closed = false) {\n        const tangents = new Array(divisions + 1);\n        const tilts = new Array(divisions + 1);\n\n        const tiltFunction = this.tiltFunction ?? ((a) => a);\n\n        // compute the tangent vectors and tilt for each segment on the curve\n        const totalLength = this.getLength();\n        for (let i = 0; i <= divisions; i++) {\n            const [si, st] = this.findSegmentIndexAtLength((totalLength * i) / divisions);\n            const segment = this._segments[si];\n            tangents[i] = segment.getTangentAt(st);\n            tilts[i] = tiltFunction(segment.getTiltAt(st), i / divisions, this);\n        }\n\n        const tx = Math.abs(tangents[0].x);\n        const ty = Math.abs(tangents[0].y);\n        const tz = Math.abs(tangents[0].z);\n\n        const normal = new Vec3();\n        if (tx < ty && tx < tz) {\n            normal.set(1, 0, 0);\n        } else if (ty < tx && ty < tz) {\n            normal.set(0, 1, 0);\n        } else {\n            normal.set(0, 0, 1);\n        }\n\n        // select an initial normal vector perpendicular to the first tangent vector,\n        // and in the direction of the minimum tangent xyz component\n        const normals = new Array(divisions + 1);\n        const binormals = new Array(divisions + 1);\n        normals[0] = new Vec3();\n        binormals[0] = new Vec3();\n\n        tempVec3.cross(tangents[0], normal).normalize();\n        normals[0].cross(tangents[0], tempVec3);\n        binormals[0].cross(tangents[0], normals[0]);\n\n        // compute the slowly-varying normal vector for each segment on the curve\n        for (let i = 1; i < tangents.length; i++) {\n            normals[i] = normals[i - 1].clone();\n            binormals[i] = new Vec3();\n\n            tempVec3.cross(tangents[i - 1], tangents[i]);\n            const crossLen = tempVec3.len();\n\n            if (crossLen > Number.EPSILON) {\n                tempVec3.scale(1 / crossLen); // nomalize\n                const cosTheta = clamp(tangents[i - 1].dot(tangents[i]), -1, 1); // clamp for floating pt errors\n                const sinTheta = clamp(crossLen, -1, 1);\n\n                mat4fromRotationSinCos(tempMat4, tempVec3, sinTheta, cosTheta);\n                normals[i].applyMatrix4(tempMat4);\n            }\n\n            binormals[i].cross(tangents[i], normals[i]);\n        }\n\n        // add tilt twisting\n        for (let i = 0; i < tilts.length; i++) {\n            rotateNormalBinormal(toRadian(tilts[i]), normals[i], binormals[i]);\n        }\n\n        // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n        if (closed === true) {\n            const normalLast = normals[normals.length - 1];\n            let step = Math.acos(clamp(normals[0].dot(normalLast), -1, 1)) / (normals.length - 1);\n\n            if (tangents[0].dot(tempVec3.cross(normals[0], normalLast)) > 0) {\n                step = -step;\n            }\n\n            for (let i = 1; i < normals.length - 1; i++) {\n                const angle = step * i;\n                rotateNormalBinormal(angle, normals[i], binormals[i]);\n                tilts[i] += toDegrees(angle);\n            }\n\n            normals[normals.length - 1] = normals[0].clone();\n            binormals[binormals.length - 1] = binormals[0].clone();\n        }\n\n        return { tangents, normals, binormals, tilts };\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\n// helper variables\nconst vertex = /* @__PURE__ */ new Vec3();\nconst normal = /* @__PURE__ */ new Vec3();\nconst uv = /* @__PURE__ */ new Vec2();\nconst point = /* @__PURE__ */ new Vec3();\n\nexport class Tube extends Geometry {\n    constructor(gl, { path, radius = 1, tubularSegments = 64, radialSegments = 8, closed = false, attributes = {} } = {}) {\n        super(gl, attributes);\n\n        this.path = path;\n        this.radius = radius;\n        this.tubularSegments = tubularSegments;\n        this.radialSegments = radialSegments;\n        this.closed = closed;\n\n        this.frenetFrames = path.computeFrenetFrames(tubularSegments, closed);\n\n        const numVertices = (tubularSegments + 1) * (radialSegments + 1);\n        const numIndices = tubularSegments * radialSegments * 6;\n        this.positions = new Float32Array(numVertices * 3);\n        this.normals = new Float32Array(numVertices * 3);\n        this.uvs = new Float32Array(numVertices * 2);\n        this.indices = numVertices > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        // create buffer data\n        this._generateAttributes();\n        this._generateIndices();\n\n        this.addAttribute('position', { size: 3, data: this.positions });\n        this.addAttribute('normal', { size: 3, data: this.normals });\n        this.addAttribute('uv', { size: 2, data: this.uvs });\n        this.setIndex({ data: this.indices });\n    }\n\n    _generateAttributes() {\n        for (let i = 0; i <= this.tubularSegments; i++) {\n            let ci = i;\n            if (i === this.tubularSegments) {\n                // if the geometry is not closed, generate the last row of vertices and normals\n                // at the regular position on the given path\n                // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n                ci = this.closed ? 0 : this.tubularSegments;\n            }\n\n            this.path.getPointAt(ci / this.tubularSegments, point);\n            // retrieve corresponding normal and binormal\n            const N = this.frenetFrames.normals[ci];\n            const B = this.frenetFrames.binormals[ci];\n\n            // generate normals and vertices for the current segment\n            for (let j = 0; j <= this.radialSegments; j++) {\n                const v = (j / this.radialSegments) * Math.PI * 2;\n                const sin = Math.sin(v);\n                const cos = -Math.cos(v);\n\n                const idx = i * (this.radialSegments + 1) + j;\n\n                // normal\n                normal.x = cos * N.x + sin * B.x;\n                normal.y = cos * N.y + sin * B.y;\n                normal.z = cos * N.z + sin * B.z;\n                // normal.normalize(); // ???\n                this.normals.set(normal, idx * 3);\n\n                // vertex\n                vertex.x = point.x + this.radius * normal.x;\n                vertex.y = point.y + this.radius * normal.y;\n                vertex.z = point.z + this.radius * normal.z;\n                this.positions.set(vertex, idx * 3);\n\n                // uv\n                uv.x = i / this.tubularSegments;\n                uv.y = j / this.radialSegments;\n                this.uvs.set(uv, idx * 2);\n            }\n        }\n    }\n\n    _generateIndices() {\n        for (let j = 1; j <= this.tubularSegments; j++) {\n            for (let i = 1; i <= this.radialSegments; i++) {\n                const a = (this.radialSegments + 1) * (j - 1) + (i - 1);\n                const b = (this.radialSegments + 1) * j + (i - 1);\n                const c = (this.radialSegments + 1) * j + i;\n                const d = (this.radialSegments + 1) * (j - 1) + i;\n\n                const idx = (j - 1) * this.radialSegments + (i - 1);\n                this.indices.set([a, b, d, b, c, d], idx * 6);\n            }\n        }\n    }\n}\n","import { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Post {\n    constructor(\n        gl,\n        {\n            width,\n            height,\n            dpr,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = gl.LINEAR,\n            geometry = new Triangle(gl),\n            targetOnly = null,\n        } = {}\n    ) {\n        this.gl = gl;\n\n        this.passes = [];\n\n        this.geometry = geometry;\n\n        this.uniform = { value: null };\n        this.targetOnly = targetOnly;\n\n        if (dpr) this.dpr = dpr;\n        if (width) this.width = width;\n        if (height) this.height = height;\n\n        dpr = this.dpr || this.gl.renderer.dpr;\n        this.resolutionWidth = Math.floor(this.width || this.gl.renderer.width * dpr);\n        this.resolutionHeight = Math.floor(this.height || this.gl.renderer.height * dpr);\n\n        let options = {\n            dpr: this.dpr,\n            width: this.resolutionWidth,\n            height: this.resolutionHeight,\n            wrapS,\n            wrapT,\n            minFilter,\n            magFilter,\n        };\n\n        const fbo = (this.fbo = {\n            read: new RenderTarget(this.gl, options),\n            write: new RenderTarget(this.gl, options),\n            swap: () => {\n                let temp = fbo.read;\n                fbo.read = fbo.write;\n                fbo.write = temp;\n            },\n        });\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = { value: this.fbo.read.texture };\n\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    resize({ width, height, dpr } = {}) {\n        if (dpr) this.dpr = dpr;\n        if (width) this.width = width;\n        if (height) this.height = height;\n\n        dpr = this.dpr || this.gl.renderer.dpr;\n        this.resolutionWidth = Math.floor(this.width || this.gl.renderer.width * dpr);\n        this.resolutionHeight = Math.floor(this.height || this.gl.renderer.height * dpr);\n\n        this.fbo.read.setSize(this.resolutionWidth, this.resolutionHeight);\n        this.fbo.write.setSize(this.resolutionWidth, this.resolutionHeight);\n    }\n\n    // Uses same arguments as renderer.render, with addition of optional texture passed in to avoid scene render\n    render({ scene, camera, texture, target = null, update = true, sort = true, frustumCull = true, beforePostCallbacks }) {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        if (!texture) {\n            this.gl.renderer.render({\n                scene,\n                camera,\n                target: enabledPasses.length || (!target && this.targetOnly) ? this.fbo.write : target,\n                update,\n                sort,\n                frustumCull,\n            });\n            this.fbo.swap();\n\n            // Callback after rendering scene, but before post effects\n            if (beforePostCallbacks) beforePostCallbacks.forEach((f) => f && f());\n        }\n\n        enabledPasses.forEach((pass, i) => {\n            pass.mesh.program.uniforms[pass.textureUniform].value = !i && texture ? texture : this.fbo.read.texture;\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: i === enabledPasses.length - 1 && (target || !this.targetOnly) ? target : this.fbo.write,\n                clear: true,\n            });\n            this.fbo.swap();\n        });\n\n        this.uniform.value = this.fbo.read.texture;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst prevPos = /* @__PURE__ */ new Vec3();\nconst prevRot = /* @__PURE__ */ new Quat();\nconst prevScl = /* @__PURE__ */ new Vec3();\n\nconst nextPos = /* @__PURE__ */ new Vec3();\nconst nextRot = /* @__PURE__ */ new Quat();\nconst nextScl = /* @__PURE__ */ new Vec3();\n\nexport class Animation {\n    constructor({ objects, data }) {\n        this.objects = objects;\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = 1;\n        this.duration = data.frames.length - 1;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = this.elapsed % this.duration;\n\n        const floorFrame = Math.floor(elapsed);\n        const blend = elapsed - floorFrame;\n        const prevKey = this.data.frames[floorFrame];\n        const nextKey = this.data.frames[(floorFrame + 1) % this.duration];\n\n        this.objects.forEach((object, i) => {\n            prevPos.fromArray(prevKey.position, i * 3);\n            prevRot.fromArray(prevKey.quaternion, i * 4);\n            prevScl.fromArray(prevKey.scale, i * 3);\n\n            nextPos.fromArray(nextKey.position, i * 3);\n            nextRot.fromArray(nextKey.quaternion, i * 4);\n            nextScl.fromArray(nextKey.scale, i * 3);\n\n            prevPos.lerp(nextPos, blend);\n            prevRot.slerp(nextRot, blend);\n            prevScl.lerp(nextScl, blend);\n\n            object.position.lerp(prevPos, weight);\n            object.quaternion.slerp(prevRot, weight);\n            object.scale.lerp(prevScl, weight);\n        });\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Transform } from '../core/Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\nimport { Animation } from './Animation.js';\n\nconst tempMat4 = /* @__PURE__ */ new Mat4();\n\nexport class Skin extends Mesh {\n    constructor(gl, { rig, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n\n        this.createBones(rig);\n        this.createBoneTexture();\n        this.animations = [];\n\n        Object.assign(this.program.uniforms, {\n            boneTexture: { value: this.boneTexture },\n            boneTextureSize: { value: this.boneTextureSize },\n        });\n    }\n\n    createBones(rig) {\n        // Create root so that can simply update world matrix of whole skeleton\n        this.root = new Transform();\n\n        // Create bones\n        this.bones = [];\n        if (!rig.bones || !rig.bones.length) return;\n        for (let i = 0; i < rig.bones.length; i++) {\n            const bone = new Transform();\n\n            // Set initial values (bind pose)\n            bone.position.fromArray(rig.bindPose.position, i * 3);\n            bone.quaternion.fromArray(rig.bindPose.quaternion, i * 4);\n            bone.scale.fromArray(rig.bindPose.scale, i * 3);\n\n            this.bones.push(bone);\n        }\n\n        // Once created, set the hierarchy\n        rig.bones.forEach((data, i) => {\n            this.bones[i].name = data.name;\n            if (data.parent === -1) return this.bones[i].setParent(this.root);\n            this.bones[i].setParent(this.bones[data.parent]);\n        });\n\n        // Then update to calculate world matrices\n        this.root.updateMatrixWorld(true);\n\n        // Store inverse of bind pose to calculate differences\n        this.bones.forEach((bone) => {\n            bone.bindInverse = new Mat4(...bone.worldMatrix).inverse();\n        });\n    }\n\n    createBoneTexture() {\n        if (!this.bones.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.bones.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    addAnimation(data) {\n        const animation = new Animation({ objects: this.bones, data });\n        this.animations.push(animation);\n        return animation;\n    }\n\n    update() {\n        // Calculate combined animation weight\n        let total = 0;\n        this.animations.forEach((animation) => (total += animation.weight));\n\n        this.animations.forEach((animation, i) => {\n            // force first animation to set in order to reset frame\n            animation.update(total, i === 0);\n        });\n    }\n\n    draw({ camera } = {}) {\n        // Update world matrices manually, as not part of scene graph\n        this.root.updateMatrixWorld(true);\n\n        // Update bone texture\n        this.bones.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n\n        super.draw({ camera });\n    }\n}\n","export function Text({\n    font,\n    text,\n    width = Infinity,\n    align = 'left',\n    size = 1,\n    letterSpacing = 0,\n    lineHeight = 1.4,\n    wordSpacing = 0,\n    wordBreak = false,\n}) {\n    const _this = this;\n    let glyphs, buffers;\n    let fontHeight, baseline, scale;\n\n    const newline = /\\n/;\n    const whitespace = /\\s/;\n\n    {\n        parseFont();\n        createGeometry();\n    }\n\n    function parseFont() {\n        glyphs = {};\n        font.chars.forEach((d) => (glyphs[d.char] = d));\n    }\n\n    function createGeometry() {\n        fontHeight = font.common.lineHeight;\n        baseline = font.common.base;\n\n        // Use baseline so that actual text height is as close to 'size' value as possible\n        scale = size / baseline;\n\n        // Strip spaces and newlines to get actual character length for buffers\n        let chars = text.replace(/[ \\n]/g, '');\n        let numChars = chars.length;\n\n        // Create output buffers\n        buffers = {\n            position: new Float32Array(numChars * 4 * 3),\n            uv: new Float32Array(numChars * 4 * 2),\n            id: new Float32Array(numChars * 4),\n            index: new Uint16Array(numChars * 6),\n        };\n\n        // Set values for buffers that don't require calculation\n        for (let i = 0; i < numChars; i++) {\n            buffers.id.set([i, i, i, i], i * 4);\n            buffers.index.set([i * 4, i * 4 + 2, i * 4 + 1, i * 4 + 1, i * 4 + 2, i * 4 + 3], i * 6);\n        }\n\n        layout();\n    }\n\n    function layout() {\n        const lines = [];\n\n        let cursor = 0;\n\n        let wordCursor = 0;\n        let wordWidth = 0;\n        let line = newLine();\n\n        function newLine() {\n            const line = {\n                width: 0,\n                glyphs: [],\n            };\n            lines.push(line);\n            wordCursor = cursor;\n            wordWidth = 0;\n            return line;\n        }\n\n        let maxTimes = 100;\n        let count = 0;\n        while (cursor < text.length && count < maxTimes) {\n            count++;\n\n            const char = text[cursor];\n\n            // Skip whitespace at start of line\n            if (!line.width && whitespace.test(char)) {\n                cursor++;\n                wordCursor = cursor;\n                wordWidth = 0;\n                continue;\n            }\n\n            // If newline char, skip to next line\n            if (newline.test(char)) {\n                cursor++;\n                line = newLine();\n                continue;\n            }\n\n            const glyph = glyphs[char] || glyphs[' '];\n\n            // Find any applicable kern pairs\n            if (line.glyphs.length) {\n                const prevGlyph = line.glyphs[line.glyphs.length - 1][0];\n                let kern = getKernPairOffset(glyph.id, prevGlyph.id) * scale;\n                line.width += kern;\n                wordWidth += kern;\n            }\n\n            // add char to line\n            line.glyphs.push([glyph, line.width]);\n\n            // calculate advance for next glyph\n            let advance = 0;\n\n            // If whitespace, update location of current word for line breaks\n            if (whitespace.test(char)) {\n                wordCursor = cursor;\n                wordWidth = 0;\n\n                // Add wordspacing\n                advance += wordSpacing * size;\n            } else {\n                // Add letterspacing\n                advance += letterSpacing * size;\n            }\n\n            advance += glyph.xadvance * scale;\n\n            line.width += advance;\n            wordWidth += advance;\n\n            // If width defined\n            if (line.width > width) {\n                // If can break words, undo latest glyph if line not empty and create new line\n                if (wordBreak && line.glyphs.length > 1) {\n                    line.width -= advance;\n                    line.glyphs.pop();\n                    line = newLine();\n                    continue;\n\n                    // If not first word, undo current word and cursor and create new line\n                } else if (!wordBreak && wordWidth !== line.width) {\n                    let numGlyphs = cursor - wordCursor + 1;\n                    line.glyphs.splice(-numGlyphs, numGlyphs);\n                    cursor = wordCursor;\n                    line.width -= wordWidth;\n                    line = newLine();\n                    continue;\n                }\n            }\n\n            cursor++;\n            // Reset infinite loop catch\n            count = 0;\n        }\n\n        // Remove last line if empty\n        if (!line.width) lines.pop();\n\n        populateBuffers(lines);\n    }\n\n    function populateBuffers(lines) {\n        const texW = font.common.scaleW;\n        const texH = font.common.scaleH;\n\n        // For all fonts tested, a little offset was needed to be right on the baseline, hence 0.07.\n        let y = 0.07 * size;\n        let j = 0;\n\n        for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n            let line = lines[lineIndex];\n\n            for (let i = 0; i < line.glyphs.length; i++) {\n                const glyph = line.glyphs[i][0];\n                let x = line.glyphs[i][1];\n\n                if (align === 'center') {\n                    x -= line.width * 0.5;\n                } else if (align === 'right') {\n                    x -= line.width;\n                }\n\n                // If space, don't add to geometry\n                if (whitespace.test(glyph.char)) continue;\n\n                // Apply char sprite offsets\n                x += glyph.xoffset * scale;\n                y -= glyph.yoffset * scale;\n\n                // each letter is a quad. axis bottom left\n                let w = glyph.width * scale;\n                let h = glyph.height * scale;\n                buffers.position.set([x, y - h, 0, x, y, 0, x + w, y - h, 0, x + w, y, 0], j * 4 * 3);\n\n                let u = glyph.x / texW;\n                let uw = glyph.width / texW;\n                let v = 1.0 - glyph.y / texH;\n                let vh = glyph.height / texH;\n                buffers.uv.set([u, v - vh, u, v, u + uw, v - vh, u + uw, v], j * 4 * 2);\n\n                // Reset cursor to baseline\n                y += glyph.yoffset * scale;\n\n                j++;\n            }\n\n            y -= size * lineHeight;\n        }\n\n        _this.buffers = buffers;\n        _this.numLines = lines.length;\n        _this.height = _this.numLines * size * lineHeight;\n        _this.width = Math.max(...lines.map((line) => line.width));\n    }\n\n    function getKernPairOffset(id1, id2) {\n        for (let i = 0; i < font.kernings.length; i++) {\n            let k = font.kernings[i];\n            if (k.first < id1) continue;\n            if (k.second < id2) continue;\n            if (k.first > id1) return 0;\n            if (k.first === id1 && k.second > id2) return 0;\n            return k.amount;\n        }\n        return 0;\n    }\n\n    // Update buffers to layout with new layout\n    this.resize = function (options) {\n        ({ width } = options);\n        layout();\n    };\n\n    // Completely change text (like creating new Text)\n    this.update = function (options) {\n        ({ text } = options);\n        createGeometry();\n    };\n}\n","import { Program } from '../core/Program.js';\n\nconst vertex = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    attribute vec3 position;\n    attribute vec3 normal;\n\n    uniform mat3 normalMatrix;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec3 vNormal;\n\n    void main() {\n        vNormal = normalize(normalMatrix * normal);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    varying vec3 vNormal;\n\n    void main() {\n        gl_FragColor.rgb = normalize(vNormal);\n        gl_FragColor.a = 1.0;\n    }\n`;\n\nexport function NormalProgram(gl) {\n    return new Program(gl, {\n        vertex: vertex,\n        fragment: fragment,\n        cullFace: false,\n    });\n}\n","import { RenderTarget } from '../core/RenderTarget.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Flowmap {\n    constructor(\n        gl,\n        {\n            size = 128, // default size of the render targets\n            falloff = 0.3, // size of the stamp, percentage of the size\n            alpha = 1, // opacity of the stamp\n            dissipation = 0.98, // affects the speed that the stamp fades. Closer to 1 is slower\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        } = {}\n    ) {\n        const _this = this;\n        this.gl = gl;\n\n        // output uniform containing render target textures\n        this.uniform = { value: null };\n\n        this.mask = {\n            read: null,\n            write: null,\n\n            // Helper function to ping pong the render targets and update the uniform\n            swap: () => {\n                let temp = _this.mask.read;\n                _this.mask.read = _this.mask.write;\n                _this.mask.write = temp;\n                _this.uniform.value = _this.mask.read.texture;\n            },\n        };\n\n        {\n            createFBOs();\n\n            this.aspect = 1;\n            this.mouse = new Vec2();\n            this.velocity = new Vec2();\n\n            this.mesh = initProgram();\n        }\n\n        function createFBOs() {\n            // Requested type not supported, fall back to half float\n            if (!type) type = gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES;\n\n            let minFilter = (() => {\n                if (gl.renderer.isWebgl2) return gl.LINEAR;\n                if (gl.renderer.extensions[`OES_texture_${type === gl.FLOAT ? '' : 'half_'}float_linear`]) return gl.LINEAR;\n                return gl.NEAREST;\n            })();\n\n            const options = {\n                width: size,\n                height: size,\n                type,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n                minFilter,\n                depth: false,\n            };\n\n            _this.mask.read = new RenderTarget(gl, options);\n            _this.mask.write = new RenderTarget(gl, options);\n            _this.mask.swap();\n        }\n\n        function initProgram() {\n            return new Mesh(gl, {\n                // Triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n                geometry: new Triangle(gl),\n\n                program: new Program(gl, {\n                    vertex,\n                    fragment,\n                    uniforms: {\n                        tMap: _this.uniform,\n\n                        uFalloff: { value: falloff * 0.5 },\n                        uAlpha: { value: alpha },\n                        uDissipation: { value: dissipation },\n\n                        // User needs to update these\n                        uAspect: { value: 1 },\n                        uMouse: { value: _this.mouse },\n                        uVelocity: { value: _this.velocity },\n                    },\n                    depthTest: false,\n                }),\n            });\n        }\n    }\n\n    update() {\n        this.mesh.program.uniforms.uAspect.value = this.aspect;\n\n        this.gl.renderer.render({\n            scene: this.mesh,\n            target: this.mask.write,\n            clear: false,\n        });\n        this.mask.swap();\n    }\n}\n\nconst vertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n\n    uniform float uFalloff;\n    uniform float uAlpha;\n    uniform float uDissipation;\n    \n    uniform float uAspect;\n    uniform vec2 uMouse;\n    uniform vec2 uVelocity;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec4 color = texture2D(tMap, vUv) * uDissipation;\n\n        vec2 cursor = vUv - uMouse;\n        cursor.x *= uAspect;\n\n        vec3 stamp = vec3(uVelocity * vec2(1, -1), 1.0 - pow(1.0 - min(1.0, length(uVelocity)), 3.0));\n        float falloff = smoothstep(uFalloff, 0.0, length(cursor)) * uAlpha;\n\n        color.rgb = mix(color.rgb, stamp, vec3(falloff));\n\n        gl_FragColor = color;\n    }\n`;\n","import { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Texture } from '../core/Texture.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class GPGPU {\n    constructor(\n        gl,\n        {\n            // Always pass in array of vec4s (RGBA values within texture)\n            data = new Float32Array(16),\n            geometry = new Triangle(gl),\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        }\n    ) {\n        this.gl = gl;\n        const initialData = data;\n        this.passes = [];\n        this.geometry = geometry;\n        this.dataLength = initialData.length / 4;\n\n        // Windows and iOS only like power of 2 textures\n        // Find smallest PO2 that fits data\n        this.size = Math.pow(2, Math.ceil(Math.log(Math.ceil(Math.sqrt(this.dataLength))) / Math.LN2));\n\n        // Create coords for output texture\n        this.coords = new Float32Array(this.dataLength * 2);\n        for (let i = 0; i < this.dataLength; i++) {\n            const x = (i % this.size) / this.size; // to add 0.5 to be center pixel ?\n            const y = Math.floor(i / this.size) / this.size;\n            this.coords.set([x, y], i * 2);\n        }\n\n        // Use original data if already correct length of PO2 texture, else copy to new array of correct length\n        const floatArray = (() => {\n            if (initialData.length === this.size * this.size * 4) {\n                return initialData;\n            } else {\n                const a = new Float32Array(this.size * this.size * 4);\n                a.set(initialData);\n                return a;\n            }\n        })();\n\n        // Create output texture uniform using input float texture with initial data\n        this.uniform = {\n            value: new Texture(gl, {\n                image: floatArray,\n                target: gl.TEXTURE_2D,\n                type: gl.FLOAT,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? gl.RGBA32F : gl.RGBA,\n                wrapS: gl.CLAMP_TO_EDGE,\n                wrapT: gl.CLAMP_TO_EDGE,\n                generateMipmaps: false,\n                minFilter: gl.NEAREST,\n                magFilter: gl.NEAREST,\n                width: this.size,\n                flipY: false,\n            }),\n        };\n\n        // Create FBOs\n        const options = {\n            width: this.size,\n            height: this.size,\n            type: type || gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES,\n            format: gl.RGBA,\n            internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n            minFilter: gl.NEAREST,\n            depth: false,\n            unpackAlignment: 1,\n        };\n\n        this.fbo = {\n            read: new RenderTarget(gl, options),\n            write: new RenderTarget(gl, options),\n            swap: () => {\n                let temp = this.fbo.read;\n                this.fbo.read = this.fbo.write;\n                this.fbo.write = temp;\n                this.uniform.value = this.fbo.read.texture;\n            },\n        };\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = this.uniform;\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    render() {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        enabledPasses.forEach((pass, i) => {\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: this.fbo.write,\n                clear: false,\n            });\n            this.fbo.swap();\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Geometry } from '../core/Geometry.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Color } from '../math/Color.js';\n\nconst tmp = /* @__PURE__ */ new Vec3();\n\nexport class Polyline {\n    constructor(\n        gl,\n        {\n            points, // Array of Vec3s\n            vertex = defaultVertex,\n            fragment = defaultFragment,\n            uniforms = {},\n            attributes = {}, // For passing in custom attribs\n        }\n    ) {\n        this.gl = gl;\n        this.points = points;\n        this.count = points.length;\n\n        // Create buffers\n        this.position = new Float32Array(this.count * 3 * 2);\n        this.prev = new Float32Array(this.count * 3 * 2);\n        this.next = new Float32Array(this.count * 3 * 2);\n        const side = new Float32Array(this.count * 1 * 2);\n        const uv = new Float32Array(this.count * 2 * 2);\n        const index = new Uint16Array((this.count - 1) * 3 * 2);\n\n        // Set static buffers\n        for (let i = 0; i < this.count; i++) {\n            side.set([-1, 1], i * 2);\n            const v = i / (this.count - 1);\n            uv.set([0, v, 1, v], i * 4);\n\n            if (i === this.count - 1) continue;\n            const ind = i * 2;\n            index.set([ind + 0, ind + 1, ind + 2], (ind + 0) * 3);\n            index.set([ind + 2, ind + 1, ind + 3], (ind + 1) * 3);\n        }\n\n        const geometry = (this.geometry = new Geometry(\n            gl,\n            Object.assign(attributes, {\n                position: { size: 3, data: this.position },\n                prev: { size: 3, data: this.prev },\n                next: { size: 3, data: this.next },\n                side: { size: 1, data: side },\n                uv: { size: 2, data: uv },\n                index: { size: 1, data: index },\n            })\n        ));\n\n        // Populate dynamic buffers\n        this.updateGeometry();\n\n        if (!uniforms.uResolution) this.resolution = uniforms.uResolution = { value: new Vec2() };\n        if (!uniforms.uDPR) this.dpr = uniforms.uDPR = { value: 1 };\n        if (!uniforms.uThickness) this.thickness = uniforms.uThickness = { value: 1 };\n        if (!uniforms.uColor) this.color = uniforms.uColor = { value: new Color('#000') };\n        if (!uniforms.uMiter) this.miter = uniforms.uMiter = { value: 1 };\n\n        // Set size uniforms' values\n        this.resize();\n\n        const program = (this.program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms,\n        }));\n\n        this.mesh = new Mesh(gl, { geometry, program });\n    }\n\n    updateGeometry() {\n        this.points.forEach((p, i) => {\n            p.toArray(this.position, i * 3 * 2);\n            p.toArray(this.position, i * 3 * 2 + 3);\n\n            if (!i) {\n                // If first point, calculate prev using the distance to 2nd point\n                tmp.copy(p)\n                    .sub(this.points[i + 1])\n                    .add(p);\n                tmp.toArray(this.prev, i * 3 * 2);\n                tmp.toArray(this.prev, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.next, (i - 1) * 3 * 2);\n                p.toArray(this.next, (i - 1) * 3 * 2 + 3);\n            }\n\n            if (i === this.points.length - 1) {\n                // If last point, calculate next using distance to 2nd last point\n                tmp.copy(p)\n                    .sub(this.points[i - 1])\n                    .add(p);\n                tmp.toArray(this.next, i * 3 * 2);\n                tmp.toArray(this.next, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.prev, (i + 1) * 3 * 2);\n                p.toArray(this.prev, (i + 1) * 3 * 2 + 3);\n            }\n        });\n\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.attributes.prev.needsUpdate = true;\n        this.geometry.attributes.next.needsUpdate = true;\n    }\n\n    // Only need to call if not handling resolution uniforms manually\n    resize() {\n        // Update automatic uniforms if not overridden\n        if (this.resolution) this.resolution.value.set(this.gl.canvas.width, this.gl.canvas.height);\n        if (this.dpr) this.dpr.value = this.gl.renderer.dpr;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    precision highp float;\n\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    uniform float uMiter;\n\n    varying vec2 vUv;\n\n    vec4 getPosition() {\n        mat4 mvp = projectionMatrix * modelViewMatrix;\n        vec4 current = mvp * vec4(position, 1);\n        vec4 nextPos = mvp * vec4(next, 1);\n        vec4 prevPos = mvp * vec4(prev, 1);\n\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);    \n        vec2 currentScreen = current.xy / current.w * aspect;\n        vec2 nextScreen = nextPos.xy / nextPos.w * aspect;\n        vec2 prevScreen = prevPos.xy / prevPos.w * aspect;\n    \n        vec2 dir1 = normalize(currentScreen - prevScreen);\n        vec2 dir2 = normalize(nextScreen - currentScreen);\n        vec2 dir = normalize(dir1 + dir2);\n    \n        vec2 normal = vec2(-dir.y, dir.x);\n        normal /= mix(1.0, max(0.3, dot(normal, vec2(-dir1.y, dir1.x))), uMiter);\n        normal /= aspect;\n\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w * pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n\n    void main() {\n        vUv = uv;\n        gl_Position = getPosition();\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform vec3 uColor;\n    \n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor.rgb = uColor;\n        gl_FragColor.a = 1.0;\n    }\n`;\n","import { Camera } from '../core/Camera.js';\nimport { Program } from '../core/Program.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\n\nexport class Shadow {\n    constructor(gl, { light = new Camera(gl), width = 1024, height = width }) {\n        this.gl = gl;\n\n        this.light = light;\n\n        this.target = new RenderTarget(gl, { width, height });\n        this.targetUniform = { value: this.target.texture };\n\n        this.depthProgram = new Program(gl, {\n            vertex: defaultVertex,\n            fragment: defaultFragment,\n            cullFace: false,\n        });\n\n        this.castMeshes = [];\n    }\n\n    add({\n        mesh,\n        receive = true,\n        cast = true,\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniformProjection = 'shadowProjectionMatrix',\n        uniformView = 'shadowViewMatrix',\n        uniformTexture = 'tShadow',\n    }) {\n        // Add uniforms to existing program\n        if (receive && !mesh.program.uniforms[uniformProjection]) {\n            mesh.program.uniforms[uniformProjection] = { value: this.light.projectionMatrix };\n            mesh.program.uniforms[uniformView] = { value: this.light.viewMatrix };\n            mesh.program.uniforms[uniformTexture] = this.targetUniform;\n        }\n\n        if (!cast) return;\n        this.castMeshes.push(mesh);\n\n        // Store program for when switching between depth override\n        mesh.colorProgram = mesh.program;\n\n        // Check if depth program already attached\n        if (mesh.depthProgram) return;\n\n        // Use global depth override if nothing custom passed in\n        if (vertex === defaultVertex && fragment === defaultFragment) {\n            mesh.depthProgram = this.depthProgram;\n            return;\n        }\n\n        // Create custom override program\n        mesh.depthProgram = new Program(this.gl, {\n            vertex,\n            fragment,\n            cullFace: false,\n        });\n    }\n\n    setSize({ width = 1024, height = width }) {\n        this.target = new RenderTarget(this.gl, { width, height });\n        this.targetUniform.value = this.target.texture;\n    }\n\n    render({ scene }) {\n        // For depth render, replace program with depth override.\n        // Hide meshes not casting shadows.\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.depthProgram;\n            } else {\n                node.isForceVisibility = node.visible;\n                node.visible = false;\n            }\n        });\n\n        // Render the depth shadow map using the light as the camera\n        this.gl.renderer.render({\n            scene,\n            camera: this.light,\n            target: this.target,\n        });\n\n        // Then switch the program back to the normal one\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.colorProgram;\n            } else {\n                node.visible = node.isForceVisibility;\n            }\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    void main() {\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    vec4 packRGBA (float v) {\n        vec4 pack = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);\n        pack -= pack.yzww * vec2(1.0 / 255.0, 0.0).xxxy;\n        return pack;\n    }\n\n    void main() {\n        gl_FragColor = packRGBA(gl_FragCoord.z);\n    }\n`;\n","import { Texture } from '../core/Texture.js';\n\n// TODO: Support cubemaps\n// Generate textures using https://github.com/TimvanScherpenzeel/texture-compressor\n\nexport class KTXTexture extends Texture {\n    constructor(gl, { buffer, wrapS = gl.CLAMP_TO_EDGE, wrapT = gl.CLAMP_TO_EDGE, anisotropy = 0, minFilter, magFilter } = {}) {\n        super(gl, {\n            generateMipmaps: false,\n            wrapS,\n            wrapT,\n            anisotropy,\n            minFilter,\n            magFilter,\n        });\n\n        if (buffer) return this.parseBuffer(buffer);\n    }\n\n    parseBuffer(buffer) {\n        const ktx = new KhronosTextureContainer(buffer);\n        ktx.mipmaps.isCompressedTexture = true;\n\n        // Update texture\n        this.image = ktx.mipmaps;\n        this.internalFormat = ktx.glInternalFormat;\n        if (ktx.numberOfMipmapLevels > 1) {\n            if (this.minFilter === this.gl.LINEAR) this.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        } else {\n            if (this.minFilter === this.gl.NEAREST_MIPMAP_LINEAR) this.minFilter = this.gl.LINEAR;\n        }\n\n        // TODO: support cube maps\n        // ktx.numberOfFaces\n    }\n}\n\nfunction KhronosTextureContainer(buffer) {\n    const idCheck = [0xab, 0x4b, 0x54, 0x58, 0x20, 0x31, 0x31, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a];\n    const id = new Uint8Array(buffer, 0, 12);\n    for (let i = 0; i < id.length; i++) if (id[i] !== idCheck[i]) return console.error('File missing KTX identifier');\n\n    // TODO: Is this always 4? Tested: [android, macos]\n    const size = Uint32Array.BYTES_PER_ELEMENT;\n    const head = new DataView(buffer, 12, 13 * size);\n    const littleEndian = head.getUint32(0, true) === 0x04030201;\n    const glType = head.getUint32(1 * size, littleEndian);\n    if (glType !== 0) return console.warn('only compressed formats currently supported');\n    this.glInternalFormat = head.getUint32(4 * size, littleEndian);\n    let width = head.getUint32(6 * size, littleEndian);\n    let height = head.getUint32(7 * size, littleEndian);\n    this.numberOfFaces = head.getUint32(10 * size, littleEndian);\n    this.numberOfMipmapLevels = Math.max(1, head.getUint32(11 * size, littleEndian));\n    const bytesOfKeyValueData = head.getUint32(12 * size, littleEndian);\n\n    this.mipmaps = [];\n    let offset = 12 + 13 * 4 + bytesOfKeyValueData;\n    for (let level = 0; level < this.numberOfMipmapLevels; level++) {\n        const levelSize = new Int32Array(buffer, offset, 1)[0]; // size per face, since not supporting array cubemaps\n        offset += 4; // levelSize field\n        for (let face = 0; face < this.numberOfFaces; face++) {\n            const data = new Uint8Array(buffer, offset, levelSize);\n            this.mipmaps.push({ data, width, height });\n            offset += levelSize;\n            offset += 3 - ((levelSize + 3) % 4); // add padding for odd sized image\n        }\n        width = width >> 1;\n        height = height >> 1;\n    }\n}\n","import { Texture } from '../core/Texture.js';\nimport { KTXTexture } from './KTXTexture.js';\n\n// For compressed textures, generate using https://github.com/TimvanScherpenzeel/texture-compressor\n\nlet cache = {};\nconst supportedExtensions = [];\n\nexport class TextureLoader {\n    static load(\n        gl,\n        {\n            src, // string or object of extension:src key-values\n            // {\n            //     pvrtc: '...ktx',\n            //     s3tc: '...ktx',\n            //     etc: '...ktx',\n            //     etc1: '...ktx',\n            //     astc: '...ktx',\n            //     webp: '...webp',\n            //     jpg: '...jpg',\n            //     png: '...png',\n            // }\n\n            // Only props relevant to KTXTexture\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            anisotropy = 0,\n\n            // For regular images\n            format = gl.RGBA,\n            internalFormat = format,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = true,\n        } = {}\n    ) {\n        const support = this.getSupportedExtensions(gl);\n        let ext = 'none';\n\n        // If src is string, determine which format from the extension\n        if (typeof src === 'string') {\n            ext = src.split('.').pop().split('?')[0].toLowerCase();\n        }\n\n        // If src is object, use supported extensions and provided list to choose best option\n        // Get first supported match, so put in order of preference\n        if (typeof src === 'object') {\n            for (const prop in src) {\n                if (support.includes(prop.toLowerCase())) {\n                    ext = prop.toLowerCase();\n                    src = src[prop];\n                    break;\n                }\n            }\n        }\n\n        // Stringify props\n        const cacheID =\n            src +\n            wrapS +\n            wrapT +\n            anisotropy +\n            format +\n            internalFormat +\n            generateMipmaps +\n            minFilter +\n            magFilter +\n            premultiplyAlpha +\n            unpackAlignment +\n            flipY +\n            gl.renderer.id;\n\n        // Check cache for existing texture\n        if (cache[cacheID]) return cache[cacheID];\n\n        let texture;\n        switch (ext) {\n            case 'ktx':\n            case 'pvrtc':\n            case 's3tc':\n            case 'etc':\n            case 'etc1':\n            case 'astc':\n                // Load compressed texture using KTX format\n                texture = new KTXTexture(gl, {\n                    src,\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    minFilter,\n                    magFilter,\n                });\n                texture.loaded = this.loadKTX(src, texture);\n                break;\n            case 'webp':\n            case 'jpg':\n            case 'jpeg':\n            case 'png':\n                texture = new Texture(gl, {\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    format,\n                    internalFormat,\n                    generateMipmaps,\n                    minFilter,\n                    magFilter,\n                    premultiplyAlpha,\n                    unpackAlignment,\n                    flipY,\n                });\n                texture.loaded = this.loadImage(gl, src, texture, flipY);\n                break;\n            default:\n                console.warn('No supported format supplied');\n                texture = new Texture(gl);\n        }\n\n        texture.ext = ext;\n        cache[cacheID] = texture;\n        return texture;\n    }\n\n    static getSupportedExtensions(gl) {\n        if (supportedExtensions.length) return supportedExtensions;\n\n        const extensions = {\n            pvrtc: gl.renderer.getExtension('WEBGL_compressed_texture_pvrtc') || gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'),\n            s3tc: gl.renderer.getExtension('WEBGL_compressed_texture_s3tc'),\n            // etc: gl.renderer.getExtension('WEBGL_compressed_texture_etc'),\n            etc1: gl.renderer.getExtension('WEBGL_compressed_texture_etc1'),\n            astc: gl.renderer.getExtension('WEBGL_compressed_texture_astc'),\n            bc7: gl.renderer.getExtension('EXT_texture_compression_bptc'),\n        };\n\n        for (const ext in extensions) if (extensions[ext]) supportedExtensions.push(ext);\n\n        // Formats supported by all\n        supportedExtensions.push('png', 'jpg', 'webp');\n\n        return supportedExtensions;\n    }\n\n    static loadKTX(src, texture) {\n        return fetch(src)\n            .then((res) => res.arrayBuffer())\n            .then((buffer) => texture.parseBuffer(buffer));\n    }\n\n    static loadImage(gl, src, texture, flipY) {\n        return decodeImage(src, flipY).then((imgBmp) => {\n            // Catch non POT textures for WebGL1 and update params to avoid errors\n            if (!gl.renderer.isWebgl2 && (!powerOfTwo(imgBmp.width) || !powerOfTwo(imgBmp.height))) {\n                if (texture.generateMipmaps) texture.generateMipmaps = false;\n                if (texture.minFilter === gl.NEAREST_MIPMAP_LINEAR) texture.minFilter = gl.LINEAR;\n                if (texture.wrapS === gl.REPEAT) texture.wrapS = texture.wrapT = gl.CLAMP_TO_EDGE;\n            }\n\n            texture.image = imgBmp;\n\n            // For createImageBitmap, close once uploaded\n            texture.onUpdate = () => {\n                if (imgBmp.close) imgBmp.close();\n                texture.onUpdate = null;\n            };\n\n            return imgBmp;\n        });\n    }\n\n    static clearCache() {\n        cache = {};\n    }\n}\n\nfunction powerOfTwo(value) {\n    // (width & (width - 1)) !== 0\n    return Math.log2(value) % 1 === 0;\n}\n\nfunction decodeImage(src, flipY) {\n    return new Promise((resolve) => {\n        if (isCreateImageBitmap()) {\n            fetch(src, { mode: 'cors' })\n                .then((r) => r.blob())\n                .then((b) => createImageBitmap(b, { imageOrientation: flipY ? 'flipY' : 'none', premultiplyAlpha: 'none' }))\n                .then(resolve);\n        } else {\n            const img = new Image();\n\n            img.crossOrigin = '';\n            img.src = src;\n            img.onload = () => resolve(img);\n        }\n    });\n}\n\nfunction isCreateImageBitmap() {\n    const isChrome = navigator.userAgent.toLowerCase().includes('chrome');\n    if (!isChrome) return false;\n    try {\n        createImageBitmap;\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst tmpVec3A = /* @__PURE__ */ new Vec3();\nconst tmpVec3B = /* @__PURE__ */ new Vec3();\nconst tmpVec3C = /* @__PURE__ */ new Vec3();\nconst tmpVec3D = /* @__PURE__ */ new Vec3();\n\nconst tmpQuatA = /* @__PURE__ */ new Quat();\nconst tmpQuatB = /* @__PURE__ */ new Quat();\nconst tmpQuatC = /* @__PURE__ */ new Quat();\nconst tmpQuatD = /* @__PURE__ */ new Quat();\n\nexport class GLTFAnimation {\n    constructor(data, weight = 1) {\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = weight;\n\n        // Set to false to not apply modulo to elapsed against duration\n        this.loop = true;\n\n        // Find starting time as exports from blender (perhaps others too) don't always start from 0\n        this.startTime = data.reduce((a, { times }) => Math.min(a, times[0]), Infinity);\n        // Get largest final time in all channels to calculate duration\n        this.endTime = data.reduce((a, { times }) => Math.max(a, times[times.length - 1]), 0);\n        this.duration = this.endTime - this.startTime;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = !this.duration\n            ? 0\n            : (this.loop ? this.elapsed % this.duration : Math.min(this.elapsed, this.duration - 0.001)) + this.startTime;\n\n        this.data.forEach(({ node, transform, interpolation, times, values }) => {\n            if (!this.duration) {\n                let val = tmpVec3A;\n                let size = 3;\n                if (transform === 'quaternion') {\n                    val = tmpQuatA;\n                    size = 4;\n                }\n                val.fromArray(values, 0);\n                if (size === 4) node[transform].slerp(val, weight);\n                else node[transform].lerp(val, weight);\n                return;\n            }\n\n            // Get index of two time values elapsed is between\n            const prevIndex =\n                Math.max(\n                    1,\n                    times.findIndex((t) => t > elapsed)\n                ) - 1;\n            const nextIndex = prevIndex + 1;\n\n            // Get linear blend/alpha between the two\n            let alpha = (elapsed - times[prevIndex]) / (times[nextIndex] - times[prevIndex]);\n            if (interpolation === 'STEP') alpha = 0;\n\n            let prevVal = tmpVec3A;\n            let prevTan = tmpVec3B;\n            let nextTan = tmpVec3C;\n            let nextVal = tmpVec3D;\n            let size = 3;\n\n            if (transform === 'quaternion') {\n                prevVal = tmpQuatA;\n                prevTan = tmpQuatB;\n                nextTan = tmpQuatC;\n                nextVal = tmpQuatD;\n                size = 4;\n            }\n\n            if (interpolation === 'CUBICSPLINE') {\n                // Get the prev and next values from the indices\n                prevVal.fromArray(values, prevIndex * size * 3 + size * 1);\n                prevTan.fromArray(values, prevIndex * size * 3 + size * 2);\n                nextTan.fromArray(values, nextIndex * size * 3 + size * 0);\n                nextVal.fromArray(values, nextIndex * size * 3 + size * 1);\n\n                // interpolate for final value\n                prevVal = this.cubicSplineInterpolate(alpha, prevVal, prevTan, nextTan, nextVal);\n                if (size === 4) prevVal.normalize();\n            } else {\n                // Get the prev and next values from the indices\n                prevVal.fromArray(values, prevIndex * size);\n                nextVal.fromArray(values, nextIndex * size);\n\n                // interpolate for final value\n                if (size === 4) prevVal.slerp(nextVal, alpha);\n                else prevVal.lerp(nextVal, alpha);\n            }\n\n            // interpolate between multiple possible animations\n            if (size === 4) node[transform].slerp(prevVal, weight);\n            else node[transform].lerp(prevVal, weight);\n        });\n    }\n\n    cubicSplineInterpolate(t, prevVal, prevTan, nextTan, nextVal) {\n        const t2 = t * t;\n        const t3 = t2 * t;\n\n        const s2 = 3 * t2 - 2 * t3;\n        const s3 = t3 - t2;\n        const s0 = 1 - s2;\n        const s1 = s3 - t2 + t;\n\n        for (let i = 0; i < prevVal.length; i++) {\n            prevVal[i] = s0 * prevVal[i] + s1 * (1 - t) * prevTan[i] + s2 * nextVal[i] + s3 * t * nextTan[i];\n        }\n\n        return prevVal;\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\n\nconst tempMat4 = /* @__PURE__ */ new Mat4();\nconst identity = /* @__PURE__ */ new Mat4();\n\nexport class GLTFSkin extends Mesh {\n    constructor(gl, { skeleton, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n        this.skeleton = skeleton;\n        this.program = program;\n        this.createBoneTexture();\n    }\n\n    createBoneTexture() {\n        if (!this.skeleton.joints.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.skeleton.joints.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    updateUniforms() {\n        // Update bone texture\n        this.skeleton.joints.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        this.boneTexture.needsUpdate = true;\n        // Reset for programs shared between multiple skins\n        this.program.uniforms.boneTexture.value = this.boneTexture;\n        this.program.uniforms.boneTextureSize.value = this.boneTextureSize;\n    }\n\n    draw({ camera } = {}) {\n        if (!this.program.uniforms.boneTexture) {\n            Object.assign(this.program.uniforms, {\n                boneTexture: { value: this.boneTexture },\n                boneTextureSize: { value: this.boneTextureSize },\n            });\n        }\n\n        this.updateUniforms();\n\n        // Switch the world matrix with identity to ignore any transforms\n        // on the mesh itself - only use skeleton's transforms\n        const _worldMatrix = this.worldMatrix;\n        this.worldMatrix = identity;\n\n        super.draw({ camera });\n\n        // Switch back to leave identity untouched\n        this.worldMatrix = _worldMatrix;\n    }\n}\n","import { Transform } from '../core/Transform.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec4 } from '../math/Vec4.js';\n\nexport class InstancedMesh extends Mesh {\n    constructor(...args) {\n        super(...args);\n\n        // Skip renderer frustum culling\n        this.frustumCulled = false;\n        this.isInstancedMesh = true;\n    }\n\n    addFrustumCull() {\n        this.instanceTransforms = null;\n        this.instanceLightmapScaleOffset = null;\n        this.totalInstanceCount = 0;\n        this.frustumCullFunction = null;\n        this.instanceRenderList = null;\n\n        // Get instanced mesh\n        if (!this.geometry.attributes.instanceMatrix)\n            console.error(`mesh ${this.name ? `\"${this.name}\" ` : ``}missing instanceMatrix attribute; unable to frustum cull`);\n\n        // Make list of transforms from instanceMatrix\n        const matrixData = this.geometry.attributes.instanceMatrix.data;\n        this.instanceTransforms = [];\n        for (let i = 0, j = 0; i < matrixData.length; i += 16, j++) {\n            const transform = new Transform();\n            transform.index = j;\n            transform.matrix.fromArray(matrixData, i);\n            transform.decompose();\n            this.instanceTransforms.push(transform);\n            // Add transforms to parent to update world matrices\n            transform.setParent(this.parent);\n        }\n        this.totalInstanceCount = this.instanceTransforms.length;\n\n        // Check for lightmap attributes - attach to transform\n        if (!!this.geometry.attributes.lightmapScaleOffset) {\n            const lightmapData = this.geometry.attributes.lightmapScaleOffset.data;\n            for (let i = 0, j = 0; i < lightmapData.length; i += 4, j++) {\n                this.instanceTransforms[j].lightmapData = new Vec4().fromArray(lightmapData, i);\n            }\n        }\n\n        this.frustumCullFunction = ({ camera }) => {\n            // frustum cull transforms each frame - pass world matrix\n            this.instanceRenderList = [];\n            this.instanceTransforms.forEach((transform) => {\n                if (!camera.frustumIntersectsMesh(this, transform.worldMatrix)) return;\n                this.instanceRenderList.push(transform);\n            });\n\n            // update instanceMatrix and instancedCount with visible\n            this.instanceRenderList.forEach((transform, i) => {\n                transform.matrix.toArray(this.geometry.attributes.instanceMatrix.data, i * 16);\n\n                // Update lightmap attr\n                if (transform.lightmapData) {\n                    transform.lightmapData.toArray(this.geometry.attributes.lightmapScaleOffset.data, i * 4);\n                    this.geometry.attributes.lightmapScaleOffset.needsUpdate = true;\n                }\n            });\n            this.geometry.instancedCount = this.instanceRenderList.length;\n            this.geometry.attributes.instanceMatrix.needsUpdate = true;\n        };\n\n        this.onBeforeRender(this.frustumCullFunction);\n    }\n\n    removeFrustumCull() {\n        this.offBeforeRender(this.frustumCullFunction);\n        this.geometry.instancedCount = this.totalInstanceCount;\n        this.instanceTransforms.forEach((transform, i) => {\n            transform.matrix.toArray(this.geometry.attributes.instanceMatrix.data, i * 16);\n\n            // Update lightmap attr\n            if (transform.lightmapData) {\n                transform.lightmapData.toArray(this.geometry.attributes.lightmapScaleOffset.data, i * 4);\n                this.geometry.attributes.lightmapScaleOffset.needsUpdate = true;\n            }\n        });\n        this.geometry.attributes.instanceMatrix.needsUpdate = true;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Transform } from '../core/Transform.js';\nimport { Texture } from '../core/Texture.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { GLTFAnimation } from './GLTFAnimation.js';\nimport { GLTFSkin } from './GLTFSkin.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { NormalProgram } from './NormalProgram.js';\nimport { InstancedMesh } from './InstancedMesh.js';\n\n// TODO\n// [ ] Morph Targets\n// [ ] Materials\n// [ ] Cameras\n// [ ] Sparse accessor packing? For morph targets basically\n// [ ] option to turn off GPU instancing ?\n// [ ] Spot lights\n\nconst TYPE_ARRAY = {\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array,\n    'image/jpeg': Uint8Array,\n    'image/png': Uint8Array,\n};\n\nconst TYPE_SIZE = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16,\n};\n\nconst ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TANGENT: 'tangent',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex',\n};\n\nconst TRANSFORMS = {\n    translation: 'position',\n    rotation: 'quaternion',\n    scale: 'scale',\n};\n\nexport class GLTFLoader {\n    static setBasisManager(manager) {\n        this.basisManager = manager;\n    }\n\n    static async load(gl, src) {\n        const dir = src.split('/').slice(0, -1).join('/') + '/';\n\n        // load main description json\n        const desc = await this.parseDesc(src);\n\n        return this.parse(gl, desc, dir);\n    }\n\n    static async parse(gl, desc, dir) {\n        if (desc.asset === undefined || desc.asset.version[0] < 2) console.warn('Only GLTF >=2.0 supported. Attempting to parse.');\n\n        if (desc.extensionsRequired?.includes('KHR_texture_basisu') && !this.basisManager)\n            console.warn('KHR_texture_basisu extension required but no manager supplied. Use .setBasisManager()');\n\n        // Load buffers async\n        const buffers = await this.loadBuffers(desc, dir);\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        gl.renderer.bindVertexArray(null);\n\n        // Create gl buffers from bufferViews\n        const bufferViews = this.parseBufferViews(gl, desc, buffers);\n\n        // Create images from either bufferViews or separate image files\n        const images = await this.parseImages(gl, desc, dir, bufferViews);\n\n        const textures = this.parseTextures(gl, desc, images);\n\n        // Just pass through material data for now\n        const materials = this.parseMaterials(gl, desc, textures);\n\n        // Fetch the inverse bind matrices for skeleton joints\n        const skins = this.parseSkins(gl, desc, bufferViews);\n\n        // Create geometries for each mesh primitive\n        const meshes = this.parseMeshes(gl, desc, bufferViews, materials, skins);\n\n        // Create transforms, meshes and hierarchy\n        const nodes = this.parseNodes(gl, desc, meshes, skins, images);\n\n        // Place nodes in skeletons\n        this.populateSkins(skins, nodes);\n\n        // Create animation handlers\n        const animations = this.parseAnimations(gl, desc, nodes, bufferViews);\n\n        // Get top level nodes for each scene\n        const scenes = this.parseScenes(desc, nodes);\n        const scene = scenes[desc.scene];\n\n        // Create uniforms for scene lights (TODO: light linking?)\n        const lights = this.parseLights(gl, desc, nodes, scenes);\n\n        // Remove null nodes (instanced transforms)\n        for (let i = nodes.length; i >= 0; i--) if (!nodes[i]) nodes.splice(i, 1);\n\n        return {\n            json: desc,\n            buffers,\n            bufferViews,\n            images,\n            textures,\n            materials,\n            meshes,\n            nodes,\n            lights,\n            animations,\n            scenes,\n            scene,\n        };\n    }\n\n    static parseDesc(src) {\n        if (!src.match(/\\.glb/)) {\n            return fetch(src).then((res) => res.json());\n        } else {\n            return fetch(src)\n                .then((res) => res.arrayBuffer())\n                .then((glb) => this.unpackGLB(glb));\n        }\n    }\n\n    // From https://github.com/donmccurdy/glTF-Transform/blob/e4108cc/packages/core/src/io/io.ts#L32\n    static unpackGLB(glb) {\n        // Decode and verify GLB header.\n        const header = new Uint32Array(glb, 0, 3);\n        if (header[0] !== 0x46546c67) {\n            throw new Error('Invalid glTF asset.');\n        } else if (header[1] !== 2) {\n            throw new Error(`Unsupported glTF binary version, \"${header[1]}\".`);\n        }\n        // Decode and verify chunk headers.\n        const jsonChunkHeader = new Uint32Array(glb, 12, 2);\n        const jsonByteOffset = 20;\n        const jsonByteLength = jsonChunkHeader[0];\n        if (jsonChunkHeader[1] !== 0x4e4f534a) {\n            throw new Error('Unexpected GLB layout.');\n        }\n\n        // Decode JSON.\n        const jsonText = new TextDecoder().decode(glb.slice(jsonByteOffset, jsonByteOffset + jsonByteLength));\n        const json = JSON.parse(jsonText);\n        // JSON only\n        if (jsonByteOffset + jsonByteLength === glb.byteLength) return json;\n\n        const binaryChunkHeader = new Uint32Array(glb, jsonByteOffset + jsonByteLength, 2);\n        if (binaryChunkHeader[1] !== 0x004e4942) {\n            throw new Error('Unexpected GLB layout.');\n        }\n        // Decode content.\n        const binaryByteOffset = jsonByteOffset + jsonByteLength + 8;\n        const binaryByteLength = binaryChunkHeader[0];\n        const binary = glb.slice(binaryByteOffset, binaryByteOffset + binaryByteLength);\n        // Attach binary to buffer\n        json.buffers[0].binary = binary;\n        return json;\n    }\n\n    // Threejs GLTF Loader https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/GLTFLoader.js#L1085\n    static resolveURI(uri, dir) {\n        // Invalid URI\n        if (typeof uri !== 'string' || uri === '') return '';\n\n        // Host Relative URI\n        if (/^https?:\\/\\//i.test(dir) && /^\\//.test(uri)) {\n            dir = dir.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        }\n\n        // Absolute URI http://, https://, //\n        if (/^(https?:)?\\/\\//i.test(uri)) return uri;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(uri)) return uri;\n\n        // Blob URI\n        if (/^blob:.*$/i.test(uri)) return uri;\n\n        // Relative URI\n        return dir + uri;\n    }\n\n    static loadBuffers(desc, dir) {\n        if (!desc.buffers) return null;\n        return Promise.all(\n            desc.buffers.map((buffer) => {\n                // For GLB, binary buffer ready to go\n                if (buffer.binary) return buffer.binary;\n                const uri = this.resolveURI(buffer.uri, dir);\n                return fetch(uri).then((res) => res.arrayBuffer());\n            })\n        );\n    }\n\n    static parseBufferViews(gl, desc, buffers) {\n        if (!desc.bufferViews) return null;\n        // Clone to leave description pure\n        const bufferViews = desc.bufferViews.map((o) => Object.assign({}, o));\n\n        desc.meshes &&\n            desc.meshes.forEach(({ primitives }) => {\n                primitives.forEach(({ attributes, indices }) => {\n                    // Flag bufferView as an attribute, so it knows to create a gl buffer\n                    for (let attr in attributes) bufferViews[desc.accessors[attributes[attr]].bufferView].isAttribute = true;\n\n                    if (indices === undefined) return;\n                    bufferViews[desc.accessors[indices].bufferView].isAttribute = true;\n\n                    // Make sure indices bufferView have a target property for gl buffer binding\n                    bufferViews[desc.accessors[indices].bufferView].target = gl.ELEMENT_ARRAY_BUFFER;\n                });\n            });\n\n        // Get componentType of each bufferView from the accessors\n        desc.accessors.forEach(({ bufferView: i, componentType }) => {\n            bufferViews[i].componentType = componentType;\n        });\n\n        // Get mimetype of bufferView from images\n        desc.images &&\n            desc.images.forEach(({ uri, bufferView: i, mimeType }) => {\n                if (i === undefined) return;\n                bufferViews[i].mimeType = mimeType;\n            });\n\n        // Push each bufferView to the GPU as a separate buffer\n        bufferViews.forEach(\n            (\n                {\n                    buffer: bufferIndex, // required\n                    byteOffset = 0, // optional\n                    byteLength, // required\n                    byteStride, // optional\n                    target = gl.ARRAY_BUFFER, // optional, added above for elements\n                    name, // optional\n                    extensions, // optional\n                    extras, // optional\n\n                    componentType, // optional, added from accessor above\n                    mimeType, // optional, added from images above\n                    isAttribute,\n                },\n                i\n            ) => {\n                bufferViews[i].data = buffers[bufferIndex].slice(byteOffset, byteOffset + byteLength);\n\n                if (!isAttribute) return;\n                // Create gl buffers for the bufferView, pushing it to the GPU\n                const buffer = gl.createBuffer();\n                gl.bindBuffer(target, buffer);\n                gl.renderer.state.boundBuffer = buffer;\n                gl.bufferData(target, bufferViews[i].data, gl.STATIC_DRAW);\n                bufferViews[i].buffer = buffer;\n            }\n        );\n\n        return bufferViews;\n    }\n\n    static parseImages(gl, desc, dir, bufferViews) {\n        if (!desc.images) return null;\n        return Promise.all(\n            desc.images.map(async ({ uri, bufferView: bufferViewIndex, mimeType, name }) => {\n                if (mimeType === 'image/ktx2') {\n                    const { data } = bufferViews[bufferViewIndex];\n                    const image = await this.basisManager.parseTexture(data);\n                    return image;\n                }\n\n                // jpg / png\n                const image = new Image();\n                image.name = name;\n                if (uri) {\n                    image.src = this.resolveURI(uri, dir);\n                } else if (bufferViewIndex !== undefined) {\n                    const { data } = bufferViews[bufferViewIndex];\n                    const blob = new Blob([data], { type: mimeType });\n                    image.src = URL.createObjectURL(blob);\n                }\n                image.ready = new Promise((res) => {\n                    image.onload = () => res();\n                });\n                return image;\n            })\n        );\n    }\n\n    static parseTextures(gl, desc, images) {\n        if (!desc.textures) return null;\n        return desc.textures.map((textureInfo) => this.createTexture(gl, desc, images, textureInfo));\n    }\n\n    static createTexture(gl, desc, images, { sampler: samplerIndex, source: sourceIndex, name, extensions, extras }) {\n        if (sourceIndex === undefined && !!extensions) {\n            // Basis extension source index\n            if (extensions.KHR_texture_basisu) sourceIndex = extensions.KHR_texture_basisu.source;\n        }\n\n        const image = images[sourceIndex];\n        if (image.texture) return image.texture;\n\n        const options = {\n            flipY: false,\n            wrapS: gl.REPEAT, // Repeat by default, opposed to OGL's clamp by default\n            wrapT: gl.REPEAT,\n        };\n        const sampler = samplerIndex !== undefined ? desc.samplers[samplerIndex] : null;\n        if (sampler) {\n            ['magFilter', 'minFilter', 'wrapS', 'wrapT'].forEach((prop) => {\n                if (sampler[prop]) options[prop] = sampler[prop];\n            });\n        }\n\n        // For compressed textures\n        if (image.isBasis) {\n            options.image = image;\n            options.internalFormat = image.internalFormat;\n            if (image.isCompressedTexture) {\n                options.generateMipmaps = false;\n                if (image.length > 1) this.minFilter = gl.NEAREST_MIPMAP_LINEAR;\n            }\n            const texture = new Texture(gl, options);\n            texture.name = name;\n            image.texture = texture;\n            return texture;\n        }\n\n        const texture = new Texture(gl, options);\n        texture.name = name;\n        image.texture = texture;\n        image.ready.then(() => {\n            texture.image = image;\n        });\n\n        return texture;\n    }\n\n    static parseMaterials(gl, desc, textures) {\n        if (!desc.materials) return null;\n        return desc.materials.map(\n            ({\n                name,\n                extensions,\n                extras,\n                pbrMetallicRoughness = {},\n                normalTexture,\n                occlusionTexture,\n                emissiveTexture,\n                emissiveFactor = [0, 0, 0],\n                alphaMode = 'OPAQUE',\n                alphaCutoff = 0.5,\n                doubleSided = false,\n            }) => {\n                const {\n                    baseColorFactor = [1, 1, 1, 1],\n                    baseColorTexture,\n                    metallicFactor = 1,\n                    roughnessFactor = 1,\n                    metallicRoughnessTexture,\n                    //   extensions,\n                    //   extras,\n                } = pbrMetallicRoughness;\n\n                if (baseColorTexture) {\n                    baseColorTexture.texture = textures[baseColorTexture.index];\n                    // texCoord\n                }\n                if (normalTexture) {\n                    normalTexture.texture = textures[normalTexture.index];\n                    // scale: 1\n                    // texCoord\n                }\n                if (metallicRoughnessTexture) {\n                    metallicRoughnessTexture.texture = textures[metallicRoughnessTexture.index];\n                    // texCoord\n                }\n                if (occlusionTexture) {\n                    occlusionTexture.texture = textures[occlusionTexture.index];\n                    // strength 1\n                    // texCoord\n                }\n                if (emissiveTexture) {\n                    emissiveTexture.texture = textures[emissiveTexture.index];\n                    // texCoord\n                }\n\n                return {\n                    name,\n                    extensions,\n                    extras,\n                    baseColorFactor,\n                    baseColorTexture,\n                    metallicFactor,\n                    roughnessFactor,\n                    metallicRoughnessTexture,\n                    normalTexture,\n                    occlusionTexture,\n                    emissiveTexture,\n                    emissiveFactor,\n                    alphaMode,\n                    alphaCutoff,\n                    doubleSided,\n                };\n            }\n        );\n    }\n\n    static parseSkins(gl, desc, bufferViews) {\n        if (!desc.skins) return null;\n        return desc.skins.map(\n            ({\n                inverseBindMatrices, // optional\n                skeleton, // optional\n                joints, // required\n                // name,\n                // extensions,\n                // extras,\n            }) => {\n                return {\n                    inverseBindMatrices: this.parseAccessor(inverseBindMatrices, desc, bufferViews),\n                    skeleton,\n                    joints,\n                };\n            }\n        );\n    }\n\n    static parseMeshes(gl, desc, bufferViews, materials, skins) {\n        if (!desc.meshes) return null;\n        return desc.meshes.map(\n            (\n                {\n                    primitives, // required\n                    weights, // optional\n                    name, // optional\n                    extensions, // optional\n                    extras = {}, // optional - will get merged with node extras\n                },\n                meshIndex\n            ) => {\n                // TODO: weights stuff ?\n                // Parse through nodes to see how many instances there are\n                // and if there is a skin attached\n                // If multiple instances of a skin, need to create each\n                let numInstances = 0;\n                let skinIndices = [];\n                let isLightmap = false;\n                desc.nodes &&\n                    desc.nodes.forEach(({ mesh, skin, extras }) => {\n                        if (mesh === meshIndex) {\n                            numInstances++;\n                            if (skin !== undefined) skinIndices.push(skin);\n                            if (extras && extras.lightmap_scale_offset) isLightmap = true;\n                        }\n                    });\n                let isSkin = !!skinIndices.length;\n\n                // For skins, return array of skin meshes to account for multiple instances\n                if (isSkin) {\n                    primitives = skinIndices.map((skinIndex) => {\n                        return this.parsePrimitives(gl, primitives, desc, bufferViews, materials, 1, isLightmap).map(\n                            ({ geometry, program, mode }) => {\n                                const mesh = new GLTFSkin(gl, { skeleton: skins[skinIndex], geometry, program, mode });\n                                mesh.name = name;\n                                mesh.extras = extras;\n                                if (extensions) mesh.extensions = extensions;\n                                // TODO: support skin frustum culling\n                                mesh.frustumCulled = false;\n                                return mesh;\n                            }\n                        );\n                    });\n                    // For retrieval to add to node\n                    primitives.instanceCount = 0;\n                    primitives.numInstances = numInstances;\n                } else {\n                    primitives = this.parsePrimitives(gl, primitives, desc, bufferViews, materials, numInstances, isLightmap).map(\n                        ({ geometry, program, mode }) => {\n                            // InstancedMesh class has custom frustum culling for instances\n                            const meshConstructor = geometry.attributes.instanceMatrix ? InstancedMesh : Mesh;\n                            const mesh = new meshConstructor(gl, { geometry, program, mode });\n                            mesh.name = name;\n                            mesh.extras = extras;\n                            if (extensions) mesh.extensions = extensions;\n                            // Tag mesh so that nodes can add their transforms to the instance attribute\n                            mesh.numInstances = numInstances;\n                            return mesh;\n                        }\n                    );\n                }\n\n                return {\n                    primitives,\n                    weights,\n                    name,\n                };\n            }\n        );\n    }\n\n    static parsePrimitives(gl, primitives, desc, bufferViews, materials, numInstances, isLightmap) {\n        return primitives.map(\n            ({\n                attributes, // required\n                indices, // optional\n                material: materialIndex, // optional\n                mode = 4, // optional\n                targets, // optional\n                extensions, // optional\n                extras, // optional\n            }) => {\n                // TODO: materials\n                const program = new NormalProgram(gl);\n                if (materialIndex !== undefined) {\n                    program.gltfMaterial = materials[materialIndex];\n                }\n\n                const geometry = new Geometry(gl);\n                if (extras) geometry.extras = extras;\n                if (extensions) geometry.extensions = extensions;\n\n                // Add each attribute found in primitive\n                for (let attr in attributes) {\n                    geometry.addAttribute(ATTRIBUTES[attr], this.parseAccessor(attributes[attr], desc, bufferViews));\n                }\n\n                // Add index attribute if found\n                if (indices !== undefined) {\n                    geometry.addAttribute('index', this.parseAccessor(indices, desc, bufferViews));\n                }\n\n                // Add instanced transform attribute if multiple instances\n                // Ignore if skin as we don't support instanced skins out of the box\n                if (numInstances > 1) {\n                    geometry.addAttribute('instanceMatrix', {\n                        instanced: 1,\n                        size: 16,\n                        data: new Float32Array(numInstances * 16),\n                    });\n                }\n\n                // Always supply lightmapScaleOffset as an instanced attribute\n                // Instanced skin lightmaps not supported\n                if (isLightmap) {\n                    geometry.addAttribute('lightmapScaleOffset', {\n                        instanced: 1,\n                        size: 4,\n                        data: new Float32Array(numInstances * 4),\n                    });\n                }\n\n                return {\n                    geometry,\n                    program,\n                    mode,\n                };\n            }\n        );\n    }\n\n    static parseAccessor(index, desc, bufferViews) {\n        // TODO: init missing bufferView with 0s\n        // TODO: support sparse\n\n        const {\n            bufferView: bufferViewIndex, // optional\n            byteOffset = 0, // optional\n            componentType, // required\n            normalized = false, // optional\n            count, // required\n            type, // required\n            min, // optional\n            max, // optional\n            sparse, // optional\n            // name, // optional\n            // extensions, // optional\n            // extras, // optional\n        } = desc.accessors[index];\n\n        const {\n            data, // attached in parseBufferViews\n            buffer, // replaced to be the actual GL buffer\n            byteOffset: bufferByteOffset = 0,\n            // byteLength, // applied in parseBufferViews\n            byteStride = 0,\n            target,\n            // name,\n            // extensions,\n            // extras,\n        } = bufferViews[bufferViewIndex];\n\n        const size = TYPE_SIZE[type];\n\n        // Parse data from joined buffers\n        const TypeArray = TYPE_ARRAY[componentType];\n        const elementBytes = TypeArray.BYTES_PER_ELEMENT;\n        const componentStride = byteStride / elementBytes;\n        const isInterleaved = !!byteStride && componentStride !== size;\n\n        let filteredData;\n\n        // Convert data to typed array for various uses (bounding boxes, raycasting, animation, merging etc)\n        if (isInterleaved) {\n            // First convert entire buffer to type\n            const typedData = new TypeArray(data, byteOffset);\n            // TODO: add length to not copy entire buffer if can help it\n            // const typedData = new TypeArray(data, byteOffset, (count - 1) * componentStride)\n\n            // Create output with length\n            filteredData = new TypeArray(count * size);\n\n            // Add element by element\n            for (let i = 0; i < count; i++) {\n                const start = componentStride * i;\n                const end = start + size;\n                filteredData.set(typedData.slice(start, end), i * size);\n            }\n        } else {\n            // Simply a slice\n            filteredData = new TypeArray(data, byteOffset, count * size);\n        }\n\n        // Return attribute data\n        return {\n            data: filteredData,\n            size,\n            type: componentType,\n            normalized,\n            buffer,\n            stride: byteStride,\n            offset: byteOffset,\n            count,\n            min,\n            max,\n        };\n    }\n\n    static parseNodes(gl, desc, meshes, skins, images) {\n        if (!desc.nodes) return null;\n        const nodes = desc.nodes.map(\n            ({\n                camera, // optional\n                children, // optional\n                skin: skinIndex, // optional\n                matrix, // optional\n                mesh: meshIndex, // optional\n                rotation, // optional\n                scale, // optional\n                translation, // optional\n                weights, // optional\n                name, // optional\n                extensions, // optional\n                extras, // optional\n            }) => {\n                const node = new Transform();\n                if (name) node.name = name;\n                if (extras) node.extras = extras;\n                if (extensions) node.extensions = extensions;\n\n                // Need to attach to node as may have same material but different lightmap\n                if (extras && extras.lightmapTexture !== undefined) {\n                    extras.lightmapTexture.texture = this.createTexture(gl, desc, images, { source: extras.lightmapTexture.index });\n                }\n\n                // Apply transformations\n                if (matrix) {\n                    node.matrix.copy(matrix);\n                    node.decompose();\n                } else {\n                    if (rotation) node.quaternion.copy(rotation);\n                    if (scale) node.scale.copy(scale);\n                    if (translation) node.position.copy(translation);\n                    node.updateMatrix();\n                }\n\n                // Flags for avoiding duplicate transforms and removing unused instance nodes\n                let isInstanced = false;\n                let isFirstInstance = true;\n                let isInstancedMatrix = false;\n                let isSkin = skinIndex !== undefined;\n\n                // add mesh if included\n                if (meshIndex !== undefined) {\n                    if (isSkin) {\n                        meshes[meshIndex].primitives[meshes[meshIndex].primitives.instanceCount].forEach((mesh) => {\n                            if (extras) Object.assign(mesh.extras, extras);\n                            mesh.setParent(node);\n                        });\n                        meshes[meshIndex].primitives.instanceCount++;\n                        // Remove properties once all instances added\n                        if (meshes[meshIndex].primitives.instanceCount === meshes[meshIndex].primitives.numInstances) {\n                            delete meshes[meshIndex].primitives.numInstances;\n                            delete meshes[meshIndex].primitives.instanceCount;\n                        }\n                    } else {\n                        meshes[meshIndex].primitives.forEach((mesh) => {\n                            if (extras) Object.assign(mesh.extras, extras);\n\n                            // instanced mesh might only have 1\n                            if (mesh.geometry.isInstanced) {\n                                isInstanced = true;\n                                if (!mesh.instanceCount) {\n                                    mesh.instanceCount = 0;\n                                } else {\n                                    isFirstInstance = false;\n                                }\n                                if (mesh.geometry.attributes.instanceMatrix) {\n                                    isInstancedMatrix = true;\n                                    node.matrix.toArray(mesh.geometry.attributes.instanceMatrix.data, mesh.instanceCount * 16);\n                                }\n\n                                if (mesh.geometry.attributes.lightmapScaleOffset) {\n                                    mesh.geometry.attributes.lightmapScaleOffset.data.set(extras.lightmap_scale_offset, mesh.instanceCount * 4);\n                                }\n\n                                mesh.instanceCount++;\n\n                                if (mesh.instanceCount === mesh.numInstances) {\n                                    // Remove properties once all instances added\n                                    delete mesh.numInstances;\n                                    delete mesh.instanceCount;\n                                    // Flag attribute as dirty\n                                    if (mesh.geometry.attributes.instanceMatrix) {\n                                        mesh.geometry.attributes.instanceMatrix.needsUpdate = true;\n                                    }\n                                    if (mesh.geometry.attributes.lightmapScaleOffset) {\n                                        mesh.geometry.attributes.lightmapScaleOffset.needsUpdate = true;\n                                    }\n                                }\n                            }\n\n                            // For instances, only the first node will actually have the mesh\n                            if (isInstanced) {\n                                if (isFirstInstance) mesh.setParent(node);\n                            } else {\n                                mesh.setParent(node);\n                            }\n                        });\n                    }\n                }\n\n                // Reset node if instanced to not duplicate transforms\n                if (isInstancedMatrix) {\n                    // Remove unused nodes just providing an instance transform\n                    if (!isFirstInstance) return null;\n                    // Avoid duplicate transform for node containing the instanced mesh\n                    node.matrix.identity();\n                    node.decompose();\n                }\n\n                return node;\n            }\n        );\n\n        desc.nodes.forEach(({ children = [] }, i) => {\n            // Set hierarchy now all nodes created\n            children.forEach((childIndex) => {\n                if (!nodes[childIndex]) return;\n                nodes[childIndex].setParent(nodes[i]);\n            });\n        });\n\n        // Add frustum culling for instances now that instanceMatrix attribute is populated\n        meshes.forEach(({ primitives }, i) => {\n            primitives.forEach((primitive, i) => {\n                if (primitive.isInstancedMesh) primitive.addFrustumCull();\n            });\n        });\n\n        return nodes;\n    }\n\n    static populateSkins(skins, nodes) {\n        if (!skins) return;\n        skins.forEach((skin) => {\n            skin.joints = skin.joints.map((i, index) => {\n                const joint = nodes[i];\n                joint.skin = skin;\n                joint.bindInverse = new Mat4(...skin.inverseBindMatrices.data.slice(index * 16, (index + 1) * 16));\n                return joint;\n            });\n            if (skin.skeleton) skin.skeleton = nodes[skin.skeleton];\n        });\n    }\n\n    static parseAnimations(gl, desc, nodes, bufferViews) {\n        if (!desc.animations) return null;\n        return desc.animations.map(\n            (\n                {\n                    channels, // required\n                    samplers, // required\n                    name, // optional\n                    // extensions, // optional\n                    // extras,  // optional\n                },\n                animationIndex\n            ) => {\n                const data = channels.map(\n                    ({\n                        sampler: samplerIndex, // required\n                        target, // required\n                        // extensions, // optional\n                        // extras, // optional\n                    }) => {\n                        const {\n                            input: inputIndex, // required\n                            interpolation = 'LINEAR',\n                            output: outputIndex, // required\n                            // extensions, // optional\n                            // extras, // optional\n                        } = samplers[samplerIndex];\n\n                        const {\n                            node: nodeIndex, // optional - TODO: when is it not included?\n                            path, // required\n                            // extensions, // optional\n                            // extras, // optional\n                        } = target;\n\n                        const node = nodes[nodeIndex];\n                        const transform = TRANSFORMS[path];\n                        const times = this.parseAccessor(inputIndex, desc, bufferViews).data;\n                        const values = this.parseAccessor(outputIndex, desc, bufferViews).data;\n\n                        // Store reference on node for cyclical retrieval\n                        if (!node.animations) node.animations = [];\n                        if (!node.animations.includes(animationIndex)) node.animations.push(animationIndex);\n\n                        return {\n                            node,\n                            transform,\n                            interpolation,\n                            times,\n                            values,\n                        };\n                    }\n                );\n\n                return {\n                    name,\n                    animation: new GLTFAnimation(data),\n                };\n            }\n        );\n    }\n\n    static parseScenes(desc, nodes) {\n        if (!desc.scenes) return null;\n        return desc.scenes.map(\n            ({\n                nodes: nodesIndices = [],\n                name, // optional\n                extensions,\n                extras,\n            }) => {\n                const scene = nodesIndices.reduce((map, i) => {\n                    // Don't add null nodes (instanced transforms)\n                    if (nodes[i]) map.push(nodes[i]);\n                    return map;\n                }, []);\n                scene.extras = extras;\n                return scene;\n            }\n        );\n    }\n\n    static parseLights(gl, desc, nodes, scenes) {\n        const lights = {\n            directional: [],\n            point: [],\n            spot: [],\n        };\n\n        // Update matrices on root nodes\n        scenes.forEach((scene) => scene.forEach((node) => node.updateMatrixWorld()));\n\n        // uses KHR_lights_punctual extension\n        const lightsDescArray = desc.extensions?.KHR_lights_punctual?.lights || [];\n\n        // Need nodes for transforms\n        nodes.forEach((node) => {\n            if (!node?.extensions?.KHR_lights_punctual) return;\n            const lightIndex = node.extensions.KHR_lights_punctual.light;\n            const lightDesc = lightsDescArray[lightIndex];\n            const light = {\n                name: lightDesc.name || '',\n                color: { value: new Vec3().set(lightDesc.color || 1) },\n            };\n            // Apply intensity directly to color\n            if (lightDesc.intensity !== undefined) light.color.value.multiply(lightDesc.intensity);\n\n            switch (lightDesc.type) {\n                case 'directional':\n                    light.direction = { value: new Vec3(0, 0, 1).transformDirection(node.worldMatrix) };\n                    break;\n                case 'point':\n                    light.position = { value: new Vec3().applyMatrix4(node.worldMatrix) };\n                    light.distance = { value: lightDesc.range };\n                    light.decay = { value: 2 };\n                    break;\n                case 'spot':\n                    // TODO: support spot uniforms\n                    Object.assign(light, lightDesc);\n                    break;\n            }\n\n            lights[lightDesc.type].push(light);\n        });\n\n        return lights;\n    }\n}\n","let supportedFormat;\nlet id = 0;\n\nexport class BasisManager {\n    constructor(workerSrc, gl) {\n        if (!supportedFormat) supportedFormat = this.getSupportedFormat(gl);\n        this.onMessage = this.onMessage.bind(this);\n        this.queue = new Map();\n        this.initWorker(workerSrc);\n    }\n\n    getSupportedFormat(gl = document.createElement('canvas').getContext('webgl')) {\n        /* if (!!gl.getExtension('WEBGL_compressed_texture_etc')) {\n            return 'etc2';\n        } else  */\n        if (!!gl.getExtension('WEBGL_compressed_texture_astc')) {\n            return 'astc';\n        } else if (!!gl.getExtension('EXT_texture_compression_bptc')) {\n            return 'bptc';\n        } else if (!!gl.getExtension('WEBGL_compressed_texture_s3tc')) {\n            return 's3tc';\n        } else if (!!gl.getExtension('WEBGL_compressed_texture_etc1')) {\n            return 'etc1';\n        } else if (!!gl.getExtension('WEBGL_compressed_texture_pvrtc') || !!gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc')) {\n            return 'pvrtc';\n            // } else if (!!gl.getExtension('WEBGL_compressed_texture_atc')) {\n            //     return 'atc';\n        }\n        return 'none';\n    }\n\n    initWorker(workerSrc) {\n        this.worker = new Worker(workerSrc);\n        this.worker.onmessage = this.onMessage;\n    }\n\n    onMessage({ data }) {\n        const { id, error, image } = data;\n        if (error) {\n            console.log(error, id);\n            return;\n        }\n        const textureResolve = this.queue.get(id);\n        this.queue.delete(id);\n        image.isBasis = true;\n        textureResolve(image);\n    }\n\n    parseTexture(buffer) {\n        id++;\n        this.worker.postMessage({\n            id,\n            buffer,\n            supportedFormat,\n        });\n        let textureResolve;\n        const promise = new Promise((res) => (textureResolve = res));\n        this.queue.set(id, textureResolve);\n        return promise;\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Program } from '../core/Program.js';\nimport { Geometry } from '../core/Geometry.js';\nimport { Color } from '../math/Color.js';\n\nexport class WireMesh extends Mesh {\n    constructor(gl, { geometry, wireColor = new Color(0, 0.75, 0.5), ...meshProps } = {}) {\n        const wireProgram = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms: { wireColor: { value: wireColor } },\n        });\n\n        const positionArray = geometry.attributes.position.data;\n        const indices = [];\n        const hashSet = new Set();\n\n        function addUniqueIndices(idx) {\n            for (let i = 0; i < idx.length; i += 2) {\n                if (isUniqueEdgePosition(idx[i] * 3, idx[i + 1] * 3, positionArray, hashSet)) {\n                    indices.push(idx[i], idx[i + 1]);\n                }\n            }\n        }\n\n        if (geometry.attributes.index) {\n            const idata = geometry.attributes.index.data;\n\n            for (let i = 0; i < idata.length; i += 3) {\n                // For every triangle, make three line pairs (start, end)\n                // prettier-ignore\n                addUniqueIndices([\n                    idata[i], idata[i + 1],\n                    idata[i + 1], idata[i + 2],\n                    idata[i + 2], idata[i]\n                ]);\n            }\n        } else {\n            const numVertices = Math.floor(positionArray.length / 3);\n\n            for (let i = 0; i < numVertices; i += 3) {\n                addUniqueIndices([i, i + 1, i + 1, i + 2, i + 2, i]);\n            }\n        }\n\n        const indicesTyped = indices.length > 65536 ? new Uint32Array(indices) : new Uint16Array(indices);\n        const wireGeometry = new Geometry(gl, {\n            position: { ...geometry.attributes.position },\n            index: { data: indicesTyped },\n        });\n\n        super(gl, { ...meshProps, mode: gl.LINES, geometry: wireGeometry, program: wireProgram });\n    }\n}\n\n// from https://github.com/mrdoob/three.js/blob/0c26bb4bb8220126447c8373154ac045588441de/src/geometries/WireframeGeometry.js#L116\nfunction isUniqueEdgePosition(start, end, pos, hashSet) {\n    // prettier-ignore\n    const hash1 = [\n        pos[start], pos[start + 1], pos[start + 2],\n        pos[end], pos[end + 1], pos[end + 2]\n    ].join('#');\n\n    // coincident edge\n    // prettier-ignore\n    const hash2 = [\n        pos[end], pos[end + 1], pos[end + 2],\n        pos[start], pos[start + 1], pos[start + 2]\n    ].join('#');\n\n    const oldSize = hashSet.size;\n    hashSet.add(hash1);\n    hashSet.add(hash2);\n    return hashSet.size - oldSize === 2;\n}\n\nconst vertex = /* glsl */ `\nattribute vec3 position;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvoid main() {    \n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n`;\n\nconst fragment = /* glsl */ `\nprecision highp float;\nuniform vec3 wireColor;\n\nvoid main() {    \n    gl_FragColor = vec4(wireColor, 1.0);\n}\n`;\n","import { Mesh } from '../../core/Mesh.js';\nimport { Program } from '../../core/Program.js';\nimport { Geometry } from '../../core/Geometry.js';\nimport { Vec3 } from '../../math/Vec3.js';\n\nexport class AxesHelper extends Mesh {\n    constructor(\n        gl,\n        {\n            size = 1,\n            symmetric = false,\n            xColor = new Vec3(0.96, 0.21, 0.32),\n            yColor = new Vec3(0.44, 0.64, 0.11),\n            zColor = new Vec3(0.18, 0.52, 0.89),\n            ...meshProps\n        } = {}\n    ) {\n        const a = symmetric ? -size : 0;\n        const b = size;\n\n        // prettier-ignore\n        const vertices = new Float32Array([\n\t\t\ta, 0, 0,  b, 0, 0,\n\t\t\t0, a, 0,  0, b, 0,\n\t\t\t0, 0, a,  0, 0, b\n\t\t]);\n\n        // prettier-ignore\n        const colors = new Float32Array([\n\t\t\t...xColor,  ...xColor,\n\t\t\t...yColor,  ...yColor,\n\t\t\t...zColor,  ...zColor\n\t\t]);\n\n        const geometry = new Geometry(gl, {\n            position: { size: 3, data: vertices },\n            color: { size: 3, data: colors },\n        });\n\n        const program = new Program(gl, { vertex, fragment });\n\n        super(gl, { ...meshProps, mode: gl.LINES, geometry, program });\n    }\n}\n\nconst vertex = /* glsl */ `\nattribute vec3 position;\nattribute vec3 color;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvarying vec3 vColor;\n\nvoid main() {    \n    vColor = color;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n`;\n\nconst fragment = /* glsl */ `\nprecision highp float;\nvarying vec3 vColor;\n\nvoid main() {    \n    gl_FragColor = vec4(vColor, 1.0);\n}\n`;\n","import { Mesh } from '../../core/Mesh.js';\nimport { Program } from '../../core/Program.js';\nimport { Geometry } from '../../core/Geometry.js';\nimport { Vec3 } from '../../math/Vec3.js';\n\nexport class GridHelper extends Mesh {\n    constructor(gl, { size = 10, divisions = 10, color = new Vec3(0.75, 0.75, 0.75), ...meshProps } = {}) {\n        const numVertices = (size + 1) * 2 * 2;\n        const vertices = new Float32Array(numVertices * 3);\n\n        const hs = size / 2;\n        for (let i = 0; i <= divisions; i++) {\n            const t = i / divisions;\n            const o = t * size - hs;\n\n            vertices.set([o, 0, -hs, o, 0, hs], i * 12);\n            vertices.set([-hs, 0, o, hs, 0, o], i * 12 + 6);\n        }\n\n        const geometry = new Geometry(gl, {\n            position: { size: 3, data: vertices },\n        });\n\n        const program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms: {\n                color: { value: color },\n            },\n        });\n        super(gl, { ...meshProps, mode: gl.LINES, geometry, program });\n    }\n}\n\nconst vertex = /* glsl */ `\nattribute vec3 position;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvoid main() {    \n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n`;\n\nconst fragment = /* glsl */ `\nprecision highp float;\nuniform vec3 color;\n\nvoid main() {    \n    gl_FragColor = vec4(color, 1.0);\n}\n`;\n","import { Mesh } from '../../core/Mesh.js';\nimport { Program } from '../../core/Program.js';\nimport { Geometry } from '../../core/Geometry.js';\nimport { Vec3 } from '../../math/Vec3.js';\nimport { Mat3 } from '../../math/Mat3.js';\n\nexport class VertexNormalsHelper extends Mesh {\n    constructor(object, { size = 0.1, color = new Vec3(0.86, 0.16, 0.86), ...meshProps } = {}) {\n        const gl = object.gl;\n        const nNormals = object.geometry.attributes.normal.count;\n        const positionsArray = new Float32Array(nNormals * 2 * 3);\n        const normalsArray = new Float32Array(nNormals * 2 * 3);\n        const sizeArray = new Float32Array(nNormals * 2);\n\n        const normalData = object.geometry.attributes.normal.data;\n        const positionData = object.geometry.attributes.position.data;\n        const sizeData = new Float32Array([0, size]);\n\n        for (let i = 0; i < nNormals; i++) {\n            const i6 = i * 6;\n            const i3 = i * 3;\n\n            // duplicate position and normal for line start and end point\n            const pSub = positionData.subarray(i3, i3 + 3);\n            positionsArray.set(pSub, i6);\n            positionsArray.set(pSub, i6 + 3);\n\n            const nSub = normalData.subarray(i3, i3 + 3);\n            normalsArray.set(nSub, i6);\n            normalsArray.set(nSub, i6 + 3);\n\n            sizeArray.set(sizeData, i * 2);\n        }\n\n        const geometry = new Geometry(gl, {\n            position: { size: 3, data: positionsArray },\n            normal: { size: 3, data: normalsArray },\n            size: { size: 1, data: sizeArray },\n        });\n\n        const program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms: {\n                color: { value: color },\n                worldNormalMatrix: { value: new Mat3() },\n                objectWorldMatrix: { value: object.worldMatrix },\n            },\n        });\n\n        super(gl, { ...meshProps, mode: gl.LINES, geometry, program });\n\n        this.object = object;\n    }\n\n    draw(arg) {\n        this.program.uniforms.worldNormalMatrix.value.getNormalMatrix(this.object.worldMatrix);\n        super.draw(arg);\n    }\n}\n\nconst vertex = /* glsl */ `\nattribute vec3 position;\nattribute vec3 normal;\nattribute float size;\n\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 objectWorldMatrix;\nuniform mat3 worldNormalMatrix;\n\nvoid main() {\n    vec3 n = normalize(worldNormalMatrix * normal) * size;\n    vec3 p = (objectWorldMatrix * vec4(position, 1.0)).xyz;\n    gl_Position = projectionMatrix * viewMatrix * vec4(p + n, 1.0);\n}\n`;\n\nconst fragment = /* glsl */ `\nprecision highp float;\nuniform vec3 color;\n\nvoid main() {    \n    gl_FragColor = vec4(color, 1.0);\n}\n`;\n","import { Mesh } from '../../core/Mesh.js';\nimport { Program } from '../../core/Program.js';\nimport { Geometry } from '../../core/Geometry.js';\nimport { Vec3 } from '../../math/Vec3.js';\nimport { Mat3 } from '../../math/Mat3.js';\n\nconst vA = /* @__PURE__ */ new Vec3();\nconst vB = /* @__PURE__ */ new Vec3();\nconst vC = /* @__PURE__ */ new Vec3();\nconst vCenter = /* @__PURE__ */ new Vec3();\nconst vNormal = /* @__PURE__ */ new Vec3();\n\nexport class FaceNormalsHelper extends Mesh {\n    constructor(object, { size = 0.1, color = new Vec3(0.15, 0.86, 0.86), ...meshProps } = {}) {\n        const gl = object.gl;\n\n        const positionData = object.geometry.attributes.position.data;\n        const sizeData = new Float32Array([0, size]);\n\n        const indexAttr = object.geometry.attributes.index;\n        const getIndex = indexAttr ? (i) => indexAttr.data[i] : (i) => i;\n        const numVertices = indexAttr ? indexAttr.data.length : Math.floor(positionData.length / 3);\n\n        const nNormals = Math.floor(numVertices / 3);\n        const positionsArray = new Float32Array(nNormals * 2 * 3);\n        const normalsArray = new Float32Array(nNormals * 2 * 3);\n        const sizeArray = new Float32Array(nNormals * 2);\n\n        for (let i = 0; i < numVertices; i += 3) {\n            vA.fromArray(positionData, getIndex(i + 0) * 3);\n            vB.fromArray(positionData, getIndex(i + 1) * 3);\n            vC.fromArray(positionData, getIndex(i + 2) * 3);\n\n            vCenter\n                .add(vA, vB)\n                .add(vC)\n                .multiply(1 / 3);\n\n            vA.sub(vA, vB);\n            vC.sub(vC, vB);\n            vNormal.cross(vC, vA).normalize();\n\n            // duplicate position and normal for line start and end point\n            const i2 = i * 2;\n            positionsArray.set(vCenter, i2);\n            positionsArray.set(vCenter, i2 + 3);\n\n            normalsArray.set(vNormal, i2);\n            normalsArray.set(vNormal, i2 + 3);\n            sizeArray.set(sizeData, (i / 3) * 2);\n        }\n\n        const geometry = new Geometry(gl, {\n            position: { size: 3, data: positionsArray },\n            normal: { size: 3, data: normalsArray },\n            size: { size: 1, data: sizeArray },\n        });\n\n        const program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms: {\n                color: { value: color },\n                worldNormalMatrix: { value: new Mat3() },\n                objectWorldMatrix: { value: object.worldMatrix },\n            },\n        });\n\n        super(gl, { ...meshProps, mode: gl.LINES, geometry, program });\n\n        this.object = object;\n    }\n\n    draw(arg) {\n        this.program.uniforms.worldNormalMatrix.value.getNormalMatrix(this.object.worldMatrix);\n        super.draw(arg);\n    }\n}\n\nconst vertex = /* glsl */ `\nattribute vec3 position;\nattribute vec3 normal;\nattribute float size;\n\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 objectWorldMatrix;\nuniform mat3 worldNormalMatrix;\n\nvoid main() {\n    vec3 n = normalize(worldNormalMatrix * normal) * size;\n    vec3 p = (objectWorldMatrix * vec4(position, 1.0)).xyz;\n    gl_Position = projectionMatrix * viewMatrix * vec4(p + n, 1.0);\n}\n`;\n\nconst fragment = /* glsl */ `\nprecision highp float;\nuniform vec3 color;\n\nvoid main() {    \n    gl_FragColor = vec4(color, 1.0);\n}\n`;\n","// Core\nexport { Geometry } from './core/Geometry.js';\nexport { Program } from './core/Program.js';\nexport { Renderer } from './core/Renderer.js';\nexport { Camera } from './core/Camera.js';\nexport { Transform } from './core/Transform.js';\nexport { Mesh } from './core/Mesh.js';\nexport { Texture } from './core/Texture.js';\nexport { RenderTarget } from './core/RenderTarget.js';\n\n// Maths\nexport { Color } from './math/Color.js';\nexport { Euler } from './math/Euler.js';\nexport { Mat3 } from './math/Mat3.js';\nexport { Mat4 } from './math/Mat4.js';\nexport { Quat } from './math/Quat.js';\nexport { Vec2 } from './math/Vec2.js';\nexport { Vec3 } from './math/Vec3.js';\nexport { Vec4 } from './math/Vec4.js';\n\n// Extras\nexport { Plane } from './extras/Plane.js';\nexport { Box } from './extras/Box.js';\nexport { Sphere } from './extras/Sphere.js';\nexport { Cylinder } from './extras/Cylinder.js';\nexport { Triangle } from './extras/Triangle.js';\nexport { Torus } from './extras/Torus.js';\nexport { Orbit } from './extras/Orbit.js';\nexport { Raycast } from './extras/Raycast.js';\nexport { Curve } from './extras/Curve.js';\nexport { Path } from './extras/path/Path.js';\nexport { Tube } from './extras/Tube.js';\nexport { Post } from './extras/Post.js';\nexport { Skin } from './extras/Skin.js';\nexport { Animation } from './extras/Animation.js';\nexport { Text } from './extras/Text.js';\nexport { NormalProgram } from './extras/NormalProgram.js';\nexport { Flowmap } from './extras/Flowmap.js';\nexport { GPGPU } from './extras/GPGPU.js';\nexport { Polyline } from './extras/Polyline.js';\nexport { Shadow } from './extras/Shadow.js';\nexport { KTXTexture } from './extras/KTXTexture.js';\nexport { TextureLoader } from './extras/TextureLoader.js';\nexport { GLTFLoader } from './extras/GLTFLoader.js';\nexport { GLTFSkin } from './extras/GLTFSkin.js';\nexport { GLTFAnimation } from './extras/GLTFAnimation.js';\nexport { BasisManager } from './extras/BasisManager.js';\nexport { WireMesh } from './extras/WireMesh.js';\nexport { AxesHelper } from './extras/helpers/AxesHelper.js';\nexport { GridHelper } from './extras/helpers/GridHelper.js';\nexport { VertexNormalsHelper } from './extras/helpers/VertexNormalsHelper.js';\nexport { FaceNormalsHelper } from './extras/helpers/FaceNormalsHelper.js';\nexport { InstancedMesh } from './extras/InstancedMesh.js';\n","/////\nimport { Renderer, Vec2, Vec4, Flowmap, Geometry, Texture, Camera, Transform, Box, Program, Mesh } from 'ogl';\n\nlet imgSize = [1600, 1200];\n\nconst vertex = `\n      attribute vec2 uv;\n      attribute vec2 position;\n      varying vec2 vUv;\n      void main() {\n          vUv = uv;\n          gl_Position = vec4(position, 0, 1);\n      }\n  `;\nconst fragment = `\n      precision highp float;\n      precision highp int;\n      uniform sampler2D tWater;\n      uniform sampler2D tFlow;\n      uniform float uTime;\n      varying vec2 vUv;\n      uniform vec4 res;\n\n      void main() {\n\n          // R and G values are velocity in the x and y direction\n          // B value is the velocity length\n          vec3 flow = texture2D(tFlow, vUv).rgb;\n\n          vec2 uv = .5 * gl_FragCoord.xy / res.xy ;\n\n          vec2 myUV = (uv - vec2(0.5))*res.zw + vec2(0.5);\n          myUV -= flow.xy * (0.15 * 0.5);\n          vec3 tex = texture2D(tWater, myUV).rgb;\n\n          gl_FragColor.rgb = vec3(tex.r, tex.g, tex.b);\n          gl_FragColor.a = tex.r;\n      }\n  `;\n{\n  const renderer = new Renderer({\n    dpr: 2,\n    alpha: true,\n    premultipliedAlpha: true\n  });\n  const gl = renderer.gl;\n  gl.canvas.classList.add(\"demo3\");\n  document.querySelector(\".\").appendChild(gl.canvas);\n\n  const isTouchCapable = \"ontouchstart\" in window;\n\n  // Variable inputs to control flowmap\n  let aspect = 1;\n  const mouse = new Vec2(-1);\n  const velocity = new Vec2();\n  function resize() {\n    let a1, a2;\n    var imageAspect = imgSize[1] / imgSize[0];\n    if (window.innerHeight / window.innerWidth < imageAspect) {\n      a1 = 1;\n      a2 = window.innerHeight / window.innerWidth / imageAspect;\n    } else {\n      a1 = (window.innerWidth / window.innerHeight) * imageAspect;\n      a2 = 1;\n    }\n    mesh.program.uniforms.res.value = new Vec4(\n      window.innerWidth,\n      window.innerHeight,\n      a1,\n      a2\n    );\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    aspect = window.innerWidth / window.innerHeight;\n  }\n  const flowmap = new Flowmap(gl, { falloff: 0.2, dissipation: 0.9 });\n  // Triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n  const geometry = new Geometry(gl, {\n    position: {\n      size: 2,\n      data: new Float32Array([-1, -1, 3, -1, -1, 3])\n    },\n    uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) }\n  });\n  const texture = new Texture(gl, {\n    minFilter: gl.LINEAR,\n    magFilter: gl.LINEAR,\n    premultiplyAlpha: true\n  });\n  const img = new Image();\n  img.onload = () => (texture.image = img);\n  img.crossOrigin = \"Anonymous\";\n\n  if (isTouchCapable) {\n    img.src = \"./1.svg\";\n\n    imgSize = [800, 1000];\n  } else {\n    img.src = \"./1.svg\";\n  }\n\n  let a1, a2;\n  var imageAspect = imgSize[1] / imgSize[0];\n  if (window.innerHeight / window.innerWidth < imageAspect) {\n    a1 = 1;\n    a2 = window.innerHeight / window.innerWidth / imageAspect;\n  } else {\n    a1 = (window.innerWidth / window.innerHeight) * imageAspect;\n    a2 = 1;\n  }\n\n  const program = new Program(gl, {\n    vertex,\n    fragment,\n    uniforms: {\n      uTime: { value: 0 },\n      tWater: { value: texture },\n      res: {\n        value: new Vec4(window.innerWidth, window.innerHeight, a1, a2)\n      },\n      img: { value: new Vec2(imgSize[0], imgSize[1]) },\n      // Note that the uniform is applied without using an object and value property\n      // This is because the class alternates this texture between two render targets\n      // and updates the value property after each render.\n      tFlow: flowmap.uniform\n    }\n  });\n  const mesh = new Mesh(gl, { geometry, program });\n\n  window.addEventListener(\"resize\", resize, false);\n  resize();\n\n  // Create handlers to get mouse position and velocity\n  // const isTouchCapable = \"ontouchstart\" in window;\n  if (isTouchCapable) {\n    window.addEventListener(\"touchstart\", updateMouse, false);\n    window.addEventListener(\"touchmove\", updateMouse, { passive: false });\n  } else {\n    window.addEventListener(\"mousemove\", updateMouse, false);\n  }\n  let lastTime;\n  const lastMouse = new Vec2();\n  function updateMouse(e) {\n    e.preventDefault();\n    if (e.changedTouches && e.changedTouches.length) {\n      e.x = e.changedTouches[0].pageX;\n      e.y = e.changedTouches[0].pageY;\n    }\n    if (e.x === undefined) {\n      e.x = e.pageX;\n      e.y = e.pageY;\n    }\n    // Get mouse value in 0 to 1 range, with y flipped\n    mouse.set(e.x / gl.renderer.width, 1.0 - e.y / gl.renderer.height);\n    // Calculate velocity\n    if (!lastTime) {\n      // First frame\n      lastTime = performance.now();\n      lastMouse.set(e.x, e.y);\n    }\n\n    const deltaX = e.x - lastMouse.x;\n    const deltaY = e.y - lastMouse.y;\n\n    lastMouse.set(e.x, e.y);\n\n    let time = performance.now();\n\n    // Avoid dividing by 0\n    let delta = Math.max(10.4, time - lastTime);\n    lastTime = time;\n    velocity.x = deltaX / delta;\n    velocity.y = deltaY / delta;\n    // Flag update to prevent hanging velocity values when not moving\n    velocity.needsUpdate = true;\n  }\n  requestAnimationFrame(update);\n  function update(t) {\n    requestAnimationFrame(update);\n    // Reset velocity when mouse not moving\n    if (!velocity.needsUpdate) {\n      mouse.set(-1);\n      velocity.set(0);\n    }\n    velocity.needsUpdate = false;\n    // Update flowmap inputs\n    flowmap.aspect = aspect;\n    flowmap.mouse.copy(mouse);\n    // Ease velocity input, slower when fading out\n    flowmap.velocity.lerp(velocity, velocity.len ? 0.15 : 0.1);\n    flowmap.update();\n    program.uniforms.uTime.value = t * 0.01;\n    renderer.render({ scene: mesh });\n  }\n}","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}