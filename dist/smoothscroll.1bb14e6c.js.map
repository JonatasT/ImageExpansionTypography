{"version":3,"sources":["../src/maths.js","../../src/animate.ts","../../src/dimensions.ts","../src/debounce.js","../../src/emitter.ts","../../src/virtual-scroll.ts","../../src/index.ts","js/smoothscroll.js"],"names":["clamp","min","input","max","Math","Animate","constructor","this","isRunning","value","from","to","duration","currentTime","advance","deltaTime","completed","easing","linearProgress","easedProgress","lerp","damp","x","y","lambda","dt","t","exp","round","stop","_a","onUpdate","call","fromTo","onStart","Dimensions","wrapper","content","autoResize","debounce","debounceValue","width","height","scrollWidth","scrollHeight","resize","onWrapperResize","onContentResize","window","innerWidth","innerHeight","HTMLElement","clientWidth","clientHeight","debouncedResize","callback","delay","timer","args","arguments","context","clearTimeout","setTimeout","apply","addEventListener","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","disconnect","_b","removeEventListener","limit","Emitter","events","emit","event","callbacks","i","length","on","push","filter","off","LINE_HEIGHT","VirtualScroll","element","wheelMultiplier","touchMultiplier","lastDelta","windowWidth","windowHeight","onTouchStart","clientX","clientY","targetTouches","touchStart","emitter","deltaX","deltaY","onTouchMove","_d","_c","onTouchEnd","onWheel","deltaMode","onWindowResize","passive","Lenis","document","documentElement","wheelEventsTarget","eventsTarget","smoothWheel","syncTouch","syncTouchLerp","touchInertiaMultiplier","pow","infinite","orientation","gestureOrientation","prevent","virtualScroll","__experimental__naiveDimensions","__isScrolling","__isStopped","__isLocked","userData","lastVelocity","velocity","direction","onPointerDown","button","reset","onVirtualScroll","data","options","ctrlKey","isTouch","type","includes","isWheel","isTouching","isStopped","isLocked","isClick","isUnknownGesture","composedPath","slice","indexOf","rootElement","find","node","Element","hasAttribute","classList","contains","_e","preventDefault","isScrolling","animate","delta","abs","hasTouchInertia","scrollTo","targetScroll","Object","assign","programmatic","onNativeScroll","__resetVelocityTimeout","__preventNextNativeScrollEvent","lastScroll","animatedScroll","actualScroll","sign","lenisVersion","body","dimensions","updateClassName","time","cleanUpClassName","setScroll","scroll","isHorizontal","scrollLeft","scrollTop","start","raf","target","offset","immediate","lock","onComplete","force","querySelector","nodeType","wrapperRect","getBoundingClientRect","left","top","rect","preventNextNativeScrollEvent","requestAnimationFrame","modulo","n","d","progress","isSmooth","className","trim","replace","_lenis","_interopRequireDefault","require","e","__esModule","default","initSmoothScrolling","lenis","ScrollTrigger","update","gsap","ticker","add","lagSmoothing"],"mappings":"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","file":"smoothscroll.1bb14e6c.js","sourceRoot":"..","sourcesContent":["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n","import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  isRunning: boolean = false\r\n  value: number = 0\r\n  from: number = 0\r\n  to: number = 0\r\n  lerp?: number\r\n  duration?: number = 0\r\n  easing?: Function\r\n  currentTime: number = 0\r\n  onUpdate?: Function\r\n\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime: number) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.duration && this.easing) {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    } else if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      // If no easing or lerp, just jump to the end value\r\n      this.value = this.to\r\n      completed = true\r\n    }\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from: number,\r\n    to: number,\r\n    {\r\n      lerp,\r\n      duration,\r\n      easing,\r\n      onStart,\r\n      onUpdate,\r\n    }: {\r\n      lerp?: number\r\n      duration?: number\r\n      easing?: Function\r\n      onStart?: Function\r\n      onUpdate?: Function\r\n    }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n","import { debounce } from './debounce'\r\n\r\ntype DimensionsOptions = {\r\n  wrapper: Window | HTMLElement\r\n  content: HTMLElement\r\n  autoResize?: boolean\r\n  debounce?: number\r\n}\r\n\r\nexport class Dimensions {\r\n  wrapper: Window | HTMLElement\r\n  content: HTMLElement\r\n  width: number = 0\r\n  height: number = 0\r\n  scrollWidth: number = 0\r\n  scrollHeight: number = 0\r\n  debouncedResize?: Function\r\n  wrapperResizeObserver?: ResizeObserver\r\n  contentResizeObserver?: ResizeObserver\r\n\r\n  // @ts-ignore\r\n  constructor({\r\n    wrapper,\r\n    content,\r\n    autoResize = true,\r\n    debounce: debounceValue = 250,\r\n  }: DimensionsOptions = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      this.debouncedResize = debounce(this.resize, debounceValue)\r\n\r\n      if (this.wrapper === window) {\r\n        window.addEventListener(\r\n          'resize',\r\n          this.debouncedResize as EventListener,\r\n          false\r\n        )\r\n      } else {\r\n        this.wrapperResizeObserver = new ResizeObserver(\r\n          this.debouncedResize as ResizeObserverCallback\r\n        )\r\n        this.wrapperResizeObserver.observe(this.wrapper as HTMLElement)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(\r\n        this.debouncedResize as ResizeObserverCallback\r\n      )\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n    window.removeEventListener(\r\n      'resize',\r\n      this.debouncedResize as EventListener,\r\n      false\r\n    )\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else if (this.wrapper instanceof HTMLElement) {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.scrollHeight = this.content.scrollHeight\r\n      this.scrollWidth = this.content.scrollWidth\r\n    } else if (this.wrapper instanceof HTMLElement) {\r\n      this.scrollHeight = this.wrapper.scrollHeight\r\n      this.scrollWidth = this.wrapper.scrollWidth\r\n    }\r\n  }\r\n\r\n  get limit(): {\r\n    x: number\r\n    y: number\r\n  } {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n","export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n","export class Emitter {\r\n  events: Record<string, Function[]>\r\n\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event: string, ...args: any[]) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(callback) || (this.events[event] = [callback])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n    }\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n","import { Emitter } from './emitter'\r\n\r\nconst LINE_HEIGHT = 100 / 6\r\n\r\nexport class VirtualScroll {\r\n  element: HTMLElement | Window\r\n  wheelMultiplier: number\r\n  touchMultiplier: number\r\n  touchStart: {\r\n    x: number | null\r\n    y: number | null\r\n  }\r\n  emitter: Emitter\r\n  lastDelta: {\r\n    x: number\r\n    y: number\r\n  } = {\r\n    x: 0,\r\n    y: 0,\r\n  }\r\n  windowWidth: number = 0\r\n  windowHeight: number = 0\r\n\r\n  constructor(\r\n    element: HTMLElement | Window,\r\n    { wheelMultiplier = 1, touchMultiplier = 1 }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n    this.onWindowResize()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel as EventListener, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener(\r\n      'touchstart',\r\n      this.onTouchStart as EventListener,\r\n      {\r\n        passive: false,\r\n      }\r\n    )\r\n    this.element.addEventListener(\r\n      'touchmove',\r\n      this.onTouchMove as EventListener,\r\n      {\r\n        passive: false,\r\n      }\r\n    )\r\n    this.element.addEventListener(\r\n      'touchend',\r\n      this.onTouchEnd as EventListener,\r\n      {\r\n        passive: false,\r\n      }\r\n    )\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel as EventListener)\r\n    this.element.removeEventListener(\r\n      'touchstart',\r\n      this.onTouchStart as EventListener\r\n    )\r\n    this.element.removeEventListener(\r\n      'touchmove',\r\n      this.onTouchMove as EventListener\r\n    )\r\n    this.element.removeEventListener(\r\n      'touchend',\r\n      this.onTouchEnd as EventListener\r\n    )\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event: TouchEvent) => {\r\n    // @ts-expect-error\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event: TouchEvent) => {\r\n    // @ts-expect-error\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - (this.touchStart?.x ?? 0)) * this.touchMultiplier\r\n    const deltaY = -(clientY - (this.touchStart?.y ?? 0)) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event: TouchEvent) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event: WheelEvent) => {\r\n    let { deltaX, deltaY, deltaMode } = event\r\n\r\n    const multiplierX =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowWidth : 1\r\n    const multiplierY =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowHeight : 1\r\n\r\n    deltaX *= multiplierX\r\n    deltaY *= multiplierY\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowWidth = window.innerWidth\r\n    this.windowHeight = window.innerHeight\r\n  }\r\n}\r\n","import { version } from '../../../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\ntype Overwrite<T, R> = Omit<T, keyof R> & R\r\n\r\ntype EasingFunction = (t: number) => number\r\ntype Orientation = 'vertical' | 'horizontal'\r\ntype GestureOrientation = 'vertical' | 'horizontal' | 'both'\r\ntype Scrolling = boolean | 'native' | 'smooth'\r\n\r\ntype onVirtualScrollOptions = {\r\n  deltaX: number\r\n  deltaY: number\r\n  event: WheelEvent | TouchEvent\r\n}\r\n\r\nexport type LenisOptions = Partial<{\r\n  wrapper: Window | HTMLElement\r\n  content: HTMLElement\r\n  wheelEventsTarget: Window | HTMLElement\r\n  eventsTarget: Window | HTMLElement\r\n  smoothWheel: boolean\r\n  syncTouch: boolean\r\n  syncTouchLerp: number\r\n  touchInertiaMultiplier: number\r\n  duration: number\r\n  easing: EasingFunction\r\n  lerp: number\r\n  infinite: boolean\r\n  orientation: Orientation\r\n  gestureOrientation: GestureOrientation\r\n  touchMultiplier: number\r\n  wheelMultiplier: number\r\n  autoResize: boolean\r\n  prevent: (node: Element) => boolean\r\n  virtualScroll: (data: onVirtualScrollOptions) => boolean\r\n  __experimental__naiveDimensions: boolean\r\n}>\r\n\r\nexport default class Lenis {\r\n  // __isSmooth: boolean = false // true if scroll should be animated\r\n  __isScrolling: Scrolling = false // true when scroll is animating\r\n  __isStopped: boolean = false // true if user should not be able to scroll - enable/disable programmatically\r\n  __isLocked: boolean = false // same as isStopped but enabled/disabled when scroll reaches target\r\n  __preventNextNativeScrollEvent?: boolean\r\n  __resetVelocityTimeout?: number\r\n\r\n  isTouching?: boolean\r\n  time: number\r\n  userData: Object = {}\r\n  lastVelocity: number = 0\r\n  velocity: number = 0\r\n  direction: 1 | -1 | 0 = 0\r\n  options: Overwrite<\r\n    LenisOptions,\r\n    {\r\n      wrapper: NonNullable<LenisOptions['wrapper']>\r\n    }\r\n  >\r\n  targetScroll: number\r\n  animatedScroll: number\r\n  animate: Animate\r\n  emitter: Emitter\r\n  dimensions: Dimensions\r\n  virtualScroll: VirtualScroll\r\n\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper, // deprecated\r\n    eventsTarget = wheelEventsTarget,\r\n    smoothWheel = true,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.075,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    autoResize = true,\r\n    prevent,\r\n    virtualScroll,\r\n    __experimental__naiveDimensions = false,\r\n  }: LenisOptions = {}) {\r\n    // @ts-expect-error\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (\r\n      !wrapper ||\r\n      wrapper === document.documentElement ||\r\n      wrapper === document.body\r\n    ) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      autoResize,\r\n      prevent,\r\n      virtualScroll,\r\n      __experimental__naiveDimensions,\r\n    } as LenisOptions\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    // this.toggleClassName('lenis', true)\r\n    this.updateClassName()\r\n\r\n    this.userData = {}\r\n    this.time = 0\r\n    this.velocity = this.lastVelocity = 0\r\n    this.isLocked = false\r\n    this.isStopped = false\r\n    // this.hasScrolled = false\r\n    // this.isSmooth = syncTouch || smoothWheel\r\n    // this.isSmooth = false\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, false)\r\n\r\n    this.options.wrapper.addEventListener(\r\n      'pointerdown',\r\n      this.onPointerDown as EventListener,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener(\r\n      'scroll',\r\n      this.onNativeScroll,\r\n      false\r\n    )\r\n    this.options.wrapper.removeEventListener(\r\n      'pointerdown',\r\n      this.onPointerDown as EventListener,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.cleanUpClassName()\r\n\r\n    // this.rootElement.className = ''\r\n\r\n    // this.toggleClassName('lenis', false)\r\n    // this.toggleClassName('lenis-smooth', false)\r\n    // this.toggleClassName('lenis-scrolling', false)\r\n    // this.toggleClassName('lenis-stopped', false)\r\n    // this.toggleClassName('lenis-locked', false)\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  private setScroll(scroll: number) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  private onPointerDown = (event: PointerEvent | MouseEvent) => {\r\n    if (event.button === 1) {\r\n      this.reset()\r\n    }\r\n  }\r\n\r\n  private onVirtualScroll = (data: onVirtualScrollOptions) => {\r\n    if (\r\n      typeof this.options.virtualScroll === 'function' &&\r\n      this.options.virtualScroll(data) === false\r\n    )\r\n      return\r\n\r\n    const { deltaX, deltaY, event } = data\r\n\r\n    this.emitter.emit('virtual-scroll', { deltaX, deltaY, event })\r\n\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    this.isTouching = event.type === 'touchstart' || event.type === 'touchmove'\r\n    // if (event.type === 'touchend') {\r\n    //   console.log('touchend', this.scroll)\r\n    //   // this.lastVelocity = this.velocity\r\n    //   // this.velocity = 0\r\n    //   // this.isScrolling = false\r\n    //   this.emit({ type: 'touchend' })\r\n    //   // alert('touchend')\r\n    //   return\r\n    // }\r\n\r\n    const isTapToStop =\r\n      this.options.syncTouch &&\r\n      isTouch &&\r\n      event.type === 'touchstart' &&\r\n      !this.isStopped &&\r\n      !this.isLocked\r\n\r\n    if (isTapToStop) {\r\n      this.reset()\r\n      return\r\n    }\r\n\r\n    const isClick = deltaX === 0 && deltaY === 0 // click event\r\n\r\n    // const isPullToRefresh =\r\n    //   this.options.gestureOrientation === 'vertical' &&\r\n    //   this.scroll === 0 &&\r\n    //   !this.options.infinite &&\r\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\r\n\r\n    const isUnknownGesture =\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n\r\n    if (isClick || isUnknownGesture) {\r\n      // console.log('prevent')\r\n      return\r\n    }\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    const prevent = this.options.prevent\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          node instanceof Element &&\r\n          ((typeof prevent === 'function' && prevent?.(node)) ||\r\n            node.hasAttribute?.('data-lenis-prevent') ||\r\n            (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n            (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n            (node.classList?.contains('lenis') &&\r\n              !node.classList?.contains('lenis-stopped'))) // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault() // this will stop forwarding the event to the parent, this is problematic\r\n      return\r\n    }\r\n\r\n    const isSmooth =\r\n      (this.options.syncTouch && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!isSmooth) {\r\n      this.isScrolling = 'native'\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\r\n\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch\r\n        ? {\r\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\r\n          }\r\n        : {\r\n            lerp: this.options.lerp,\r\n            duration: this.options.duration,\r\n            easing: this.options.easing,\r\n          }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  private emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  private onNativeScroll = () => {\r\n    clearTimeout(this.__resetVelocityTimeout)\r\n    delete this.__resetVelocityTimeout\r\n\r\n    if (this.__preventNextNativeScrollEvent) {\r\n      delete this.__preventNextNativeScrollEvent\r\n      return\r\n    }\r\n\r\n    if (this.isScrolling === false || this.isScrolling === 'native') {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.lastVelocity = this.velocity\r\n      this.velocity = this.animatedScroll - lastScroll\r\n      this.direction = Math.sign(\r\n        this.animatedScroll - lastScroll\r\n      ) as Lenis['direction']\r\n      // this.isSmooth = false\r\n      this.isScrolling = 'native'\r\n      this.emit()\r\n\r\n      if (this.velocity !== 0) {\r\n        this.__resetVelocityTimeout = setTimeout(() => {\r\n          this.lastVelocity = this.velocity\r\n          this.velocity = 0\r\n          this.isScrolling = false\r\n          this.emit()\r\n        }, 400)\r\n      }\r\n\r\n      // this.hasScrolled = true\r\n      // }, 50)\r\n    }\r\n  }\r\n\r\n  private reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.lastVelocity = this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    if (!this.isStopped) return\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    if (this.isStopped) return\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time: number) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target: number | string | HTMLElement,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = this.options.lerp,\r\n      onStart,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n      userData = {},\r\n    }: {\r\n      offset?: number\r\n      immediate?: boolean\r\n      lock?: boolean\r\n      duration?: number\r\n      easing?: EasingFunction\r\n      lerp?: number\r\n      onStart?: (lenis: Lenis) => void\r\n      onComplete?: (lenis: Lenis) => void\r\n      force?: boolean\r\n      programmatic?: boolean\r\n      userData?: object\r\n    } = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (\r\n      typeof target === 'string' &&\r\n      ['top', 'left', 'start'].includes(target)\r\n    ) {\r\n      target = 0\r\n    } else if (\r\n      typeof target === 'string' &&\r\n      ['bottom', 'right', 'end'].includes(target)\r\n    ) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target instanceof HTMLElement && target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.rootElement.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (target === this.targetScroll) return\r\n\r\n    this.userData = userData\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      this.preventNextNativeScrollEvent()\r\n      this.emit()\r\n      onComplete?.(this)\r\n      this.userData = {}\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = 'smooth'\r\n        onStart?.(this)\r\n      },\r\n      onUpdate: (value: number, completed: boolean) => {\r\n        this.isScrolling = 'smooth'\r\n\r\n        // updated\r\n        this.lastVelocity = this.velocity\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity) as Lenis['direction']\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit()\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit()\r\n          onComplete?.(this)\r\n          this.userData = {}\r\n\r\n          // avoid emitting event twice\r\n          this.preventNextNativeScrollEvent()\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  private preventNextNativeScrollEvent() {\r\n    this.__preventNextNativeScrollEvent = true\r\n\r\n    requestAnimationFrame(() => {\r\n      delete this.__preventNextNativeScrollEvent\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return (\r\n      this.options.wrapper === window\r\n        ? document.documentElement\r\n        : this.options.wrapper\r\n    ) as HTMLElement\r\n  }\r\n\r\n  get limit() {\r\n    if (this.options.__experimental__naiveDimensions) {\r\n      if (this.isHorizontal) {\r\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth\r\n      } else {\r\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight\r\n      }\r\n    } else {\r\n      return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n    }\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll(): number {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll(): number {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress(): number {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  // get isSmooth() {\r\n  //   return this.__isSmooth\r\n  // }\r\n\r\n  // private set isSmooth(value: boolean) {\r\n  //   if (this.__isSmooth !== value) {\r\n  //     this.__isSmooth = value\r\n  //     this.updateClassName()\r\n  //   }\r\n  // }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  private set isScrolling(value: Scrolling) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  private set isStopped(value: boolean) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isLocked() {\r\n    return this.__isLocked\r\n  }\r\n\r\n  private set isLocked(value: boolean) {\r\n    if (this.__isLocked !== value) {\r\n      this.__isLocked = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.isScrolling === 'smooth'\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isScrolling === 'smooth') className += ' lenis-smooth'\r\n    // if (this.isScrolling === 'native') className += ' lenis-native'\r\n    // if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  private updateClassName() {\r\n    this.cleanUpClassName()\r\n\r\n    this.rootElement.className =\r\n      `${this.rootElement.className} ${this.className}`.trim()\r\n  }\r\n\r\n  private cleanUpClassName() {\r\n    this.rootElement.className = this.rootElement.className\r\n      .replace(/lenis(-\\w+)?/g, '')\r\n      .trim()\r\n  }\r\n}\r\n","import Lenis from 'lenis';\n\n// Initializes smooth scrolling with Lenis and integrates it with GSAP's ScrollTrigger.\n// Function to set up smooth scrolling.\nconst initSmoothScrolling = () => {\n  // Initialize Lenis for smooth scroll effects. Lerp value controls the smoothness.\n  const lenis = new Lenis({ lerp: 0.17 });\n\n  // Sync ScrollTrigger with Lenis' scroll updates.\n  lenis.on('scroll', ScrollTrigger.update);\n\n  // Ensure GSAP animations are in sync with Lenis' scroll frame updates.\n  gsap.ticker.add((time) => {\n    lenis.raf(time * 1000); // Convert GSAP's time to milliseconds for Lenis.\n  });\n\n  // Turn off GSAP's default lag smoothing to avoid conflicts with Lenis.\n  gsap.ticker.lagSmoothing(0);\n};\n\n// Activate the smooth scrolling feature.\ninitSmoothScrolling();\n"]}